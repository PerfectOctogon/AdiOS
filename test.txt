
sysroot/boot/adios.kernel:     file format elf64-x86-64


Disassembly of section .text:

0000000000100000 <_start-0x13d>:
  100000:	02 b0 ad 1b 03 00    	add    0x31bad(%rax),%dh
  100006:	00 00                	add    %al,(%rax)
  100008:	fb                   	sti
  100009:	4f 52                	rex.WRXB push %r10
  10000b:	e4 0f                	in     $0xf,%al
  10000d:	1f                   	(bad)
  10000e:	40 00 b8 28 20 10 00 	add    %dil,0x102028(%rax)
  100015:	48 3d 28 20 10 00    	cmp    $0x102028,%rax
  10001b:	74 13                	je     100030 <code_segment+0x100028>
  10001d:	b8 00 00 00 00       	mov    $0x0,%eax
  100022:	48 85 c0             	test   %rax,%rax
  100025:	74 09                	je     100030 <code_segment+0x100028>
  100027:	bf 28 20 10 00       	mov    $0x102028,%edi
  10002c:	ff e0                	jmp    *%rax
  10002e:	66 90                	xchg   %ax,%ax
  100030:	c3                   	ret
  100031:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  100038:	00 00 00 00 
  10003c:	0f 1f 40 00          	nopl   0x0(%rax)
  100040:	be 28 20 10 00       	mov    $0x102028,%esi
  100045:	48 81 ee 28 20 10 00 	sub    $0x102028,%rsi
  10004c:	48 89 f0             	mov    %rsi,%rax
  10004f:	48 c1 ee 3f          	shr    $0x3f,%rsi
  100053:	48 c1 f8 03          	sar    $0x3,%rax
  100057:	48 01 c6             	add    %rax,%rsi
  10005a:	48 d1 fe             	sar    %rsi
  10005d:	74 11                	je     100070 <code_segment+0x100068>
  10005f:	b8 00 00 00 00       	mov    $0x0,%eax
  100064:	48 85 c0             	test   %rax,%rax
  100067:	74 07                	je     100070 <code_segment+0x100068>
  100069:	bf 28 20 10 00       	mov    $0x102028,%edi
  10006e:	ff e0                	jmp    *%rax
  100070:	c3                   	ret
  100071:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  100078:	00 00 00 00 
  10007c:	0f 1f 40 00          	nopl   0x0(%rax)
  100080:	80 3d 79 2f 00 00 00 	cmpb   $0x0,0x2f79(%rip)        # 103000 <__TMC_END__+0xfd8>
  100087:	75 77                	jne    100100 <code_segment+0x1000f8>
  100089:	55                   	push   %rbp
  10008a:	48 8b 05 77 2f 00 00 	mov    0x2f77(%rip),%rax        # 103008 <__TMC_END__+0xfe0>
  100091:	48 89 e5             	mov    %rsp,%rbp
  100094:	41 54                	push   %r12
  100096:	41 bc 18 20 10 00    	mov    $0x102018,%r12d
  10009c:	53                   	push   %rbx
  10009d:	bb 20 20 10 00       	mov    $0x102020,%ebx
  1000a2:	48 81 eb 18 20 10 00 	sub    $0x102018,%rbx
  1000a9:	48 c1 fb 03          	sar    $0x3,%rbx
  1000ad:	48 83 eb 01          	sub    $0x1,%rbx
  1000b1:	48 39 d8             	cmp    %rbx,%rax
  1000b4:	73 25                	jae    1000db <code_segment+0x1000d3>
  1000b6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
  1000bd:	00 00 00 
  1000c0:	48 83 c0 01          	add    $0x1,%rax
  1000c4:	48 89 05 3d 2f 00 00 	mov    %rax,0x2f3d(%rip)        # 103008 <__TMC_END__+0xfe0>
  1000cb:	41 ff 14 c4          	call   *(%r12,%rax,8)
  1000cf:	48 8b 05 32 2f 00 00 	mov    0x2f32(%rip),%rax        # 103008 <__TMC_END__+0xfe0>
  1000d6:	48 39 d8             	cmp    %rbx,%rax
  1000d9:	72 e5                	jb     1000c0 <code_segment+0x1000b8>
  1000db:	e8 30 ff ff ff       	call   100010 <code_segment+0x100008>
  1000e0:	b8 00 00 00 00       	mov    $0x0,%eax
  1000e5:	48 85 c0             	test   %rax,%rax
  1000e8:	74 0a                	je     1000f4 <code_segment+0x1000ec>
  1000ea:	bf 20 10 10 00       	mov    $0x101020,%edi
  1000ef:	e8 0c ff ef ff       	call   0 <ALIGN-0x1>
  1000f4:	5b                   	pop    %rbx
  1000f5:	41 5c                	pop    %r12
  1000f7:	c6 05 02 2f 00 00 01 	movb   $0x1,0x2f02(%rip)        # 103000 <__TMC_END__+0xfd8>
  1000fe:	5d                   	pop    %rbp
  1000ff:	c3                   	ret
  100100:	c3                   	ret
  100101:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  100108:	00 00 00 00 
  10010c:	0f 1f 40 00          	nopl   0x0(%rax)
  100110:	b8 00 00 00 00       	mov    $0x0,%eax
  100115:	48 85 c0             	test   %rax,%rax
  100118:	74 1e                	je     100138 <code_segment+0x100130>
  10011a:	55                   	push   %rbp
  10011b:	be 20 30 10 00       	mov    $0x103020,%esi
  100120:	bf 20 10 10 00       	mov    $0x101020,%edi
  100125:	48 89 e5             	mov    %rsp,%rbp
  100128:	e8 d3 fe ef ff       	call   0 <ALIGN-0x1>
  10012d:	5d                   	pop    %rbp
  10012e:	e9 0d ff ff ff       	jmp    100040 <code_segment+0x100038>
  100133:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  100138:	e9 03 ff ff ff       	jmp    100040 <code_segment+0x100038>

000000000010013d <_start>:
.global _start
.type _start, @function
.extern long_mode_start
.extern _init
_start:
	movl $stack_top, %esp
  10013d:	bc 50 70 10 00       	mov    $0x107050,%esp
	
	# Call the global constructors.
	call _init
  100142:	e8 39 04 00 00       	call   100580 <_init>
	# Lets check for cpuid
	call checkcpuid
  100147:	e8 15 00 00 00       	call   100161 <checkcpuid>

	# Lets check for extended functionality
	call checkextfunc
  10014c:	e8 29 00 00 00       	call   10017a <checkextfunc>

	# Now, lets set up page tables
	call setup_pagetables
  100151:	e8 47 00 00 00       	call   10019d <setup_pagetables>

	# Now, we can enable paging
	call enable_pae_paging
  100156:	e8 86 00 00 00       	call   1001e1 <enable_pae_paging>

	jmp long_mode_start
  10015b:	e9 72 03 00 00       	jmp    1004d2 <long_mode_start>

	hlt
  100160:	f4                   	hlt

0000000000100161 <checkcpuid>:
.size _start, . - _start

# Check if CPUID exists
checkcpuid:
	pushf # Dump CPU flags into the stack
  100161:	9c                   	pushf
	pop %eax # Pop the flags into the EAX register
  100162:	58                   	pop    %rax
	mov %eax, %ecx # Storing a copy of these flags so we don't end up modifying the CPU flags
  100163:	89 c1                	mov    %eax,%ecx
	xor %eax, 1 << 21 # Flipping the 21st bit. If we can flip this, we can use CPUID
  100165:	31 05 00 00 20 00    	xor    %eax,0x200000(%rip)        # 30016b <terminal_row+0x1f9103>
	push %eax # Push the modified flags into the stack
  10016b:	50                   	push   %rax
	popf # Put the modified flags into the CPU flags register
  10016c:	9d                   	popf
	pushf # Lets check if the bit was flipped and restore the flags
  10016d:	9c                   	pushf
	pop %eax
  10016e:	58                   	pop    %rax
	push %ecx # ECX contains our original copy of our flags
  10016f:	51                   	push   %rcx
	popf # Restore the flags
  100170:	9d                   	popf
	cmp %eax, %ecx # Let's compare EAX and ECX
  100171:	39 c1                	cmp    %eax,%ecx
	jz .nocpuid # If zero flag was set, then the bit was not flipped, so jump to nocpuid error
  100173:	0f 84 8d 00 00 00    	je     100206 <.nocpuid>
	ret
  100179:	c3                   	ret

000000000010017a <checkextfunc>:

# Check if extended functionality exists
checkextfunc:
	mov %eax, 0x80000000 # Function number for querying extended functionality
  10017a:	a3 00 00 00 80 0f a2 	movabs %eax,0x539a20f80000000
  100181:	39 05 
	cpuid
	cmp %eax, 0x80000001 # Check if EAX got larger
  100183:	01 00                	add    %eax,(%rax)
  100185:	00 80 0f 82 80 00    	add    %al,0x80820f(%rax)
	jb .noextfunc
  10018b:	00 00                	add    %al,(%rax)

	mov %eax, 0x80000001
  10018d:	a3 01 00 00 80 0f a2 	movabs %eax,0x1585a20f80000001
  100194:	85 15 
	cpuid # This will now store various CPU information into different registers
	test %edx, 1 << 29 # Checking the 30th youngest bit of the EDX register to see if we have long mode support
  100196:	00 00                	add    %al,(%rax)
  100198:	00 20                	add    %ah,(%rax)
	jz .nolongmode # If it's 0, we don't have long mode support
  10019a:	74 78                	je     100214 <.nolongmode>
	ret
  10019c:	c3                   	ret

000000000010019d <setup_pagetables>:

setup_pagetables:
	movl $0x2003, 0x1000 # point to the PDPT with flags
  10019d:	c7 05 00 10 00 00 03 	movl   $0x2003,0x1000(%rip)        # 1011a7 <.pointer+0x197>
  1001a4:	20 00 00 
	movl $0x3003, 0x2000 # Move up 4 KB
  1001a7:	c7 05 00 20 00 00 03 	movl   $0x3003,0x2000(%rip)        # 1021b1 <__TMC_END__+0x189>
  1001ae:	30 00 00 
	movl $0x4003, 0x3000 # We have now set up the page table, we need to fill it up
  1001b1:	c7 05 00 30 00 00 03 	movl   $0x4003,0x3000(%rip)        # 1031bb <stack_bottom+0x16b>
  1001b8:	40 00 00 

	mov 0, %ecx # Set up the counter
  1001bb:	8b 0d 00 00 00 00    	mov    0x0(%rip),%ecx        # 1001c1 <idmap>

00000000001001c1 <idmap>:
	# Creating the identity map
	idmap:
		mov $4096, %eax # move the page size to the EAX register
  1001c1:	b8 00 10 00 00       	mov    $0x1000,%eax
		mul %ecx
  1001c6:	f7 e1                	mul    %ecx
		or %eax, 0x83
  1001c8:	09 05 83 00 00 00    	or     %eax,0x83(%rip)        # 100251 <terminal_initialize+0x11>
		leal 0x3000(, %ecx, 8), %ebx
  1001ce:	8d 1c cd 00 30 00 00 	lea    0x3000(,%rcx,8),%ebx
		movl %eax, (%ebx)
  1001d5:	89 03                	mov    %eax,(%rbx)
		inc %ecx
  1001d7:	41 39 0d 00 02 00 00 	cmp    %ecx,0x200(%rip)        # 1003de <terminal_putchar+0x3e>
		cmp %ecx, 512
		jne idmap
  1001de:	75 e1                	jne    1001c1 <idmap>
	
	ret
  1001e0:	c3                   	ret

00000000001001e1 <enable_pae_paging>:

enable_pae_paging:
	mov %eax, 0x1000 # Address of the PML4T
  1001e1:	a3 00 10 00 00 0f 20 	movabs %eax,0x89d8200f00001000
  1001e8:	d8  

00000000001001e9 <enter_long_mode>:
	mov %cr3, %eax # Move this address to the control register 3
	# Now the cr3 register knows where our PML4T is

	enter_long_mode:
		mov %ecx, 0xC0000080 # Move model specific register into ECX
  1001e9:	89 0d 80 00 00 c0    	mov    %ecx,-0x3fffff80(%rip)        # ffffffffc010026f <MAGIC+0xffffffffa462526d>
		rdmsr # Write the register value into EAX
  1001ef:	0f 32                	rdmsr
		or %eax, 1 << 8 # Set 8th bit, which is responsible for enabling long mode when we enable paging
  1001f1:	09 05 00 01 00 00    	or     %eax,0x100(%rip)        # 1002f7 <terminal_scroll+0x17>
		wrmsr # Write to the model specific register
  1001f7:	0f 30                	wrmsr

00000000001001f9 <enable_paging>:
	
	enable_paging:
		mov %eax, %cr0
  1001f9:	0f 22 c0             	mov    %rax,%cr0
		or %eax, 1 << 31 # Flipping the oldest bit in control register 0
  1001fc:	09 05 00 00 00 80    	or     %eax,-0x80000000(%rip)        # ffffffff80100202 <MAGIC+0xffffffff64625200>
		mov %cr0, %eax
  100202:	0f 20 c0             	mov    %cr0,%rax
	
	# Paging is now enabled !!!!!!!!! :D
	ret
  100205:	c3                   	ret

0000000000100206 <.nocpuid>:

.nocpuid:
	mov %al, 'C'
  100206:	a2 43 00 00 00 eb 0e 	movabs %al,0x45a20eeb00000043
  10020d:	  

000000000010020d <.noextfunc>:
	jmp error

.noextfunc:
	mov %al, 'E'
  10020d:	a2 45 00 00 00 eb 07 	movabs %al,0x4ca207eb00000045
  100214:	  

0000000000100214 <.nolongmode>:
	jmp error

.nolongmode:
	mov %al, 'L'
  100214:	a2 4c 00 00 00 eb 00 	movabs %al,0x5c700eb0000004c
  10021b:	  

000000000010021b <error>:
	jmp error

error:
    movl $0x4f524f45, 0xb8000
  10021b:	c7 05 00 80 0b 00 45 	movl   $0x4f524f45,0xb8000(%rip)        # 1b8225 <terminal_row+0xb11bd>
  100222:	4f 52 4f 
    movl $0x4f3a4f52, 0xb8004
  100225:	c7 05 04 80 0b 00 52 	movl   $0x4f3a4f52,0xb8004(%rip)        # 1b8233 <terminal_row+0xb11cb>
  10022c:	4f 3a 4f 
    movl $0x4f204f20, 0xb8008
  10022f:	c7 05 08 80 0b 00 20 	movl   $0x4f204f20,0xb8008(%rip)        # 1b8241 <terminal_row+0xb11d9>
  100236:	4f 20 4f 
    movb %al, 0xb800a
  100239:	a2 0a 80 0b 00 f4 90 	movabs %al,0xc74890f4000b800a
  100240:	  

0000000000100240 <terminal_initialize>:
// Current pointer to the VGA buffer in memory
static uint16_t* terminal_buffer;

// Initialize the terminal
void terminal_initialize(void){
    terminal_row = 0;
  100240:	48 c7 05 1d 6e 00 00 	movq   $0x0,0x6e1d(%rip)        # 107068 <terminal_row>
  100247:	00 00 00 00 

    //Go over and set all the characters in the buffer to spaces
    for(size_t y = 0; y < VGA_HEIGHT; y++){
        for(size_t x = 0; x < VGA_WIDTH; x++){
            const size_t index = y * VGA_HEIGHT + VGA_WIDTH + x;
            terminal_buffer[index] = vga_entry(' ', terminal_color);
  10024b:	b8 20 0a 20 0a       	mov    $0xa200a20,%eax
    terminal_buffer = VGA_MEMORY;
  100250:	ba 40 81 0b 00       	mov    $0xb8140,%edx
    terminal_column = 0;
  100255:	48 c7 05 00 6e 00 00 	movq   $0x0,0x6e00(%rip)        # 107060 <terminal_column>
  10025c:	00 00 00 00 
            terminal_buffer[index] = vga_entry(' ', terminal_color);
  100260:	66 0f 6e c0          	movd   %eax,%xmm0
    terminal_color = vga_entry_color(VGA_COLOR_LIGHT_GREEN, VGA_COLOR_BLACK);
  100264:	c6 05 ed 6d 00 00 0a 	movb   $0xa,0x6ded(%rip)        # 107058 <terminal_color>
            terminal_buffer[index] = vga_entry(' ', terminal_color);
  10026b:	66 0f 70 c0 00       	pshufd $0x0,%xmm0,%xmm0
    terminal_buffer = VGA_MEMORY;
  100270:	48 c7 05 d5 6d 00 00 	movq   $0xb8000,0x6dd5(%rip)        # 107050 <terminal_buffer>
  100277:	00 80 0b 00 
    for(size_t y = 0; y < VGA_HEIGHT; y++){
  10027b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
        for(size_t x = 0; x < VGA_WIDTH; x++){
  100280:	48 8d 82 60 ff ff ff 	lea    -0xa0(%rdx),%rax
  100287:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  10028e:	00 00 
            terminal_buffer[index] = vga_entry(' ', terminal_color);
  100290:	0f 11 00             	movups %xmm0,(%rax)
  100293:	48 83 c0 20          	add    $0x20,%rax
  100297:	0f 11 40 f0          	movups %xmm0,-0x10(%rax)
        for(size_t x = 0; x < VGA_WIDTH; x++){
  10029b:	48 39 c2             	cmp    %rax,%rdx
  10029e:	75 f0                	jne    100290 <terminal_initialize+0x50>
    for(size_t y = 0; y < VGA_HEIGHT; y++){
  1002a0:	48 83 c2 32          	add    $0x32,%rdx
  1002a4:	48 81 fa 22 86 0b 00 	cmp    $0xb8622,%rdx
  1002ab:	75 d3                	jne    100280 <terminal_initialize+0x40>
        }
    }
}
  1002ad:	c3                   	ret
  1002ae:	66 90                	xchg   %ax,%ax

00000000001002b0 <terminal_setcolor>:
	VGA_COLOR_LIGHT_BROWN = 14,
	VGA_COLOR_WHITE = 15,
};

static inline uint8_t vga_entry_color(enum vga_color foreground, enum vga_color background){
    return foreground | background << 4;
  1002b0:	c1 e6 04             	shl    $0x4,%esi
  1002b3:	09 fe                	or     %edi,%esi
  1002b5:	40 88 35 9c 6d 00 00 	mov    %sil,0x6d9c(%rip)        # 107058 <terminal_color>

// Change the color of the terminal
void terminal_setcolor(enum vga_color foreground, enum vga_color background){
    terminal_color = vga_entry_color(foreground, background);
}
  1002bc:	c3                   	ret
  1002bd:	0f 1f 00             	nopl   (%rax)

00000000001002c0 <terminal_putentryat>:

// Put a character of color at (x,y) of the terminal buffer
void terminal_putentryat(unsigned char character, uint8_t character_color, size_t x, size_t y){
    const size_t index = y * VGA_WIDTH + x;
    terminal_buffer[index] = vga_entry(character, character_color);
  1002c0:	48 8d 04 89          	lea    (%rcx,%rcx,4),%rax
}

static inline uint16_t vga_entry(unsigned char character, uint8_t character_color){
    return (uint16_t) character | (uint16_t) character_color << 8;
  1002c4:	c1 e6 08             	shl    $0x8,%esi
  1002c7:	40 0f b6 ff          	movzbl %dil,%edi
  1002cb:	48 c1 e0 04          	shl    $0x4,%rax
  1002cf:	09 fe                	or     %edi,%esi
  1002d1:	48 01 d0             	add    %rdx,%rax
  1002d4:	48 8b 15 75 6d 00 00 	mov    0x6d75(%rip),%rdx        # 107050 <terminal_buffer>
  1002db:	66 89 34 42          	mov    %si,(%rdx,%rax,2)
}
  1002df:	c3                   	ret

00000000001002e0 <terminal_scroll>:
// Scroll on the terminal
void terminal_scroll(int line){
    uint16_t * video_memory = VGA_MEMORY;

    // Move each row up by one line
    for(int y = line; y < VGA_HEIGHT - 1; y++){
  1002e0:	48 63 f7             	movslq %edi,%rsi
  1002e3:	48 83 fe 17          	cmp    $0x17,%rsi
  1002e7:	77 5b                	ja     100344 <terminal_scroll+0x64>
  1002e9:	48 8d 0c b6          	lea    (%rsi,%rsi,4),%rcx
  1002ed:	48 c1 e1 05          	shl    $0x5,%rcx
  1002f1:	48 81 c1 40 81 0b 00 	add    $0xb8140,%rcx
  1002f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  1002ff:	00 
        for(int x = 0; x < VGA_WIDTH; x++){
  100300:	48 8d 81 60 ff ff ff 	lea    -0xa0(%rcx),%rax
  100307:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  10030e:	00 00 00 00 
  100312:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  100319:	00 00 00 00 
  10031d:	0f 1f 00             	nopl   (%rax)
            video_memory[y * VGA_WIDTH + x] = video_memory[(y + 1) * VGA_WIDTH + x];
  100320:	0f b7 10             	movzwl (%rax),%edx
        for(int x = 0; x < VGA_WIDTH; x++){
  100323:	48 83 c0 02          	add    $0x2,%rax
            video_memory[y * VGA_WIDTH + x] = video_memory[(y + 1) * VGA_WIDTH + x];
  100327:	66 89 90 5e ff ff ff 	mov    %dx,-0xa2(%rax)
        for(int x = 0; x < VGA_WIDTH; x++){
  10032e:	48 39 c8             	cmp    %rcx,%rax
  100331:	75 ed                	jne    100320 <terminal_scroll+0x40>
    for(int y = line; y < VGA_HEIGHT - 1; y++){
  100333:	48 83 c6 01          	add    $0x1,%rsi
  100337:	48 81 c1 a0 00 00 00 	add    $0xa0,%rcx
  10033e:	48 83 fe 18          	cmp    $0x18,%rsi
  100342:	75 bc                	jne    100300 <terminal_scroll+0x20>
        }
    }

    //We might want to delete the last line, but I'll leave it commented out for now
    //terminal_delete_last_line();
}
  100344:	c3                   	ret
  100345:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  10034c:	00 00 00 00 

0000000000100350 <terminal_delete_last_line>:
  100350:	0f b6 15 01 6d 00 00 	movzbl 0x6d01(%rip),%edx        # 107058 <terminal_color>
  100357:	b8 00 8f 0b 00       	mov    $0xb8f00,%eax
  10035c:	c1 e2 08             	shl    $0x8,%edx
  10035f:	83 ca 20             	or     $0x20,%edx
  100362:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  100369:	00 00 00 00 
  10036d:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  100374:	00 00 00 00 
  100378:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  10037f:	00 
void terminal_delete_last_line(){
    uint16_t * video_memory = VGA_MEMORY;

    // Clear the last line
    for(int x = 0; x < VGA_WIDTH; x++){
        video_memory[(VGA_HEIGHT - 1) * VGA_WIDTH + x] = vga_entry(' ', terminal_color);
  100380:	66 89 10             	mov    %dx,(%rax)
    for(int x = 0; x < VGA_WIDTH; x++){
  100383:	48 83 c0 04          	add    $0x4,%rax
        video_memory[(VGA_HEIGHT - 1) * VGA_WIDTH + x] = vga_entry(' ', terminal_color);
  100387:	66 89 50 fe          	mov    %dx,-0x2(%rax)
    for(int x = 0; x < VGA_WIDTH; x++){
  10038b:	48 3d a0 8f 0b 00    	cmp    $0xb8fa0,%rax
  100391:	75 ed                	jne    100380 <terminal_delete_last_line+0x30>
    }
}
  100393:	c3                   	ret
  100394:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  10039b:	00 00 00 00 
  10039f:	90                   	nop

00000000001003a0 <terminal_putchar>:
void terminal_putchar(char c){
    int line;
    unsigned char character = c;

    // Write the character at the current cursor
    terminal_putentryat(character, terminal_color, terminal_column, terminal_row);
  1003a0:	48 8b 0d c1 6c 00 00 	mov    0x6cc1(%rip),%rcx        # 107068 <terminal_row>
  1003a7:	0f b6 15 aa 6c 00 00 	movzbl 0x6caa(%rip),%edx        # 107058 <terminal_color>
  1003ae:	40 0f b6 ff          	movzbl %dil,%edi
  1003b2:	48 8b 35 a7 6c 00 00 	mov    0x6ca7(%rip),%rsi        # 107060 <terminal_column>
  1003b9:	c1 e2 08             	shl    $0x8,%edx
    terminal_buffer[index] = vga_entry(character, character_color);
  1003bc:	48 8d 04 89          	lea    (%rcx,%rcx,4),%rax
  1003c0:	41 89 d0             	mov    %edx,%r8d
  1003c3:	48 c1 e0 04          	shl    $0x4,%rax
  1003c7:	48 8b 15 82 6c 00 00 	mov    0x6c82(%rip),%rdx        # 107050 <terminal_buffer>
  1003ce:	48 01 f0             	add    %rsi,%rax
  1003d1:	44 09 c7             	or     %r8d,%edi
  1003d4:	66 89 3c 42          	mov    %di,(%rdx,%rax,2)

    // If we went over the width of the terminal, then go down a line
    if(++terminal_column == VGA_WIDTH){
  1003d8:	48 83 fe 4f          	cmp    $0x4f,%rsi
  1003dc:	74 12                	je     1003f0 <terminal_putchar+0x50>
  1003de:	48 8d 46 01          	lea    0x1(%rsi),%rax
  1003e2:	48 89 05 77 6c 00 00 	mov    %rax,0x6c77(%rip)        # 107060 <terminal_column>
  1003e9:	c3                   	ret
  1003ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        terminal_column = 0;
  1003f0:	48 c7 05 65 6c 00 00 	movq   $0x0,0x6c65(%rip)        # 107060 <terminal_column>
  1003f7:	00 00 00 00 
        // If we went over the height of the terminal, then scroll up
        if(++terminal_row == VGA_HEIGHT){
  1003fb:	48 83 c1 01          	add    $0x1,%rcx
  1003ff:	48 89 0d 62 6c 00 00 	mov    %rcx,0x6c62(%rip)        # 107068 <terminal_row>
  100406:	48 83 f9 19          	cmp    $0x19,%rcx
  10040a:	74 04                	je     100410 <terminal_putchar+0x70>
  10040c:	c3                   	ret
  10040d:	0f 1f 00             	nopl   (%rax)
void terminal_putchar(char c){
  100410:	55                   	push   %rbp
            for(line = 1; line < VGA_HEIGHT; line++){
  100411:	bf 01 00 00 00       	mov    $0x1,%edi
void terminal_putchar(char c){
  100416:	48 89 e5             	mov    %rsp,%rbp
  100419:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
                terminal_scroll(line);
  100420:	e8 bb fe ff ff       	call   1002e0 <terminal_scroll>
            for(line = 1; line < VGA_HEIGHT; line++){
  100425:	83 c7 01             	add    $0x1,%edi
  100428:	83 ff 19             	cmp    $0x19,%edi
  10042b:	75 f3                	jne    100420 <terminal_putchar+0x80>
  10042d:	44 89 c2             	mov    %r8d,%edx
  100430:	b8 00 8f 0b 00       	mov    $0xb8f00,%eax
  100435:	83 ca 20             	or     $0x20,%edx
  100438:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  10043f:	00 
        video_memory[(VGA_HEIGHT - 1) * VGA_WIDTH + x] = vga_entry(' ', terminal_color);
  100440:	66 89 10             	mov    %dx,(%rax)
    for(int x = 0; x < VGA_WIDTH; x++){
  100443:	48 83 c0 04          	add    $0x4,%rax
        video_memory[(VGA_HEIGHT - 1) * VGA_WIDTH + x] = vga_entry(' ', terminal_color);
  100447:	66 89 50 fe          	mov    %dx,-0x2(%rax)
    for(int x = 0; x < VGA_WIDTH; x++){
  10044b:	48 3d a0 8f 0b 00    	cmp    $0xb8fa0,%rax
  100451:	75 ed                	jne    100440 <terminal_putchar+0xa0>
            }
            // Delete the last line of the terminal so we can write more stuff there
            terminal_delete_last_line();
            terminal_row = VGA_HEIGHT - 1;
  100453:	48 c7 05 0a 6c 00 00 	movq   $0x18,0x6c0a(%rip)        # 107068 <terminal_row>
  10045a:	18 00 00 00 
        }
    }
}
  10045e:	5d                   	pop    %rbp
  10045f:	c3                   	ret

0000000000100460 <terminal_write>:

// Use to write some data of size to the terminal in ASCII rep
void terminal_write(const char * data, size_t size){
    // Write some characters to the VGA buffer
    for(size_t i = 0; i < size; i++){
  100460:	48 85 f6             	test   %rsi,%rsi
  100463:	74 23                	je     100488 <terminal_write+0x28>
void terminal_write(const char * data, size_t size){
  100465:	55                   	push   %rbp
  100466:	49 89 f9             	mov    %rdi,%r9
  100469:	4c 8d 14 37          	lea    (%rdi,%rsi,1),%r10
  10046d:	48 89 e5             	mov    %rsp,%rbp
        terminal_putchar(data[i]);
  100470:	41 0f be 39          	movsbl (%r9),%edi
    for(size_t i = 0; i < size; i++){
  100474:	49 83 c1 01          	add    $0x1,%r9
        terminal_putchar(data[i]);
  100478:	e8 23 ff ff ff       	call   1003a0 <terminal_putchar>
    for(size_t i = 0; i < size; i++){
  10047d:	4d 39 d1             	cmp    %r10,%r9
  100480:	75 ee                	jne    100470 <terminal_write+0x10>
    }
}
  100482:	5d                   	pop    %rbp
  100483:	c3                   	ret
  100484:	0f 1f 40 00          	nopl   0x0(%rax)
  100488:	c3                   	ret
  100489:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000100490 <terminal_writestring>:

// Use to write a string to the terminal
void terminal_writestring(const char * string){
  100490:	55                   	push   %rbp
  100491:	48 89 e5             	mov    %rsp,%rbp
  100494:	53                   	push   %rbx
  100495:	48 89 fb             	mov    %rdi,%rbx
  100498:	48 83 ec 08          	sub    $0x8,%rsp
    terminal_write(string, strlen(string));
  10049c:	e8 4f 00 00 00       	call   1004f0 <strlen>
    for(size_t i = 0; i < size; i++){
  1004a1:	48 85 c0             	test   %rax,%rax
  1004a4:	74 1b                	je     1004c1 <terminal_writestring+0x31>
  1004a6:	4c 8d 14 03          	lea    (%rbx,%rax,1),%r10
  1004aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
        terminal_putchar(data[i]);
  1004b0:	0f be 3b             	movsbl (%rbx),%edi
    for(size_t i = 0; i < size; i++){
  1004b3:	48 83 c3 01          	add    $0x1,%rbx
        terminal_putchar(data[i]);
  1004b7:	e8 e4 fe ff ff       	call   1003a0 <terminal_putchar>
    for(size_t i = 0; i < size; i++){
  1004bc:	4c 39 d3             	cmp    %r10,%rbx
  1004bf:	75 ef                	jne    1004b0 <terminal_writestring+0x20>
  1004c1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
  1004c5:	c9                   	leave
  1004c6:	c3                   	ret
  1004c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  1004ce:	00 00 

00000000001004d0 <kernel_main>:
#include <stdio.h>
#include "../include/kernel/tty.h"

void kernel_main(void){
    while(1);
  1004d0:	eb fe                	jmp    1004d0 <kernel_main>

00000000001004d2 <long_mode_start>:

.section .text
.code64
long_mode_start:
    # loading null into all data segment registers
    movw %ax, 0
  1004d2:	66 89 04 25 00 00 00 	mov    %ax,0x0
  1004d9:	00 
    movw %ss, %ax
  1004da:	66 8c d0             	mov    %ss,%ax
    movw %ds, %ax
  1004dd:	66 8c d8             	mov    %ds,%ax
    movw %es, %ax
  1004e0:	66 8c c0             	mov    %es,%ax
    movw %fs, %ax
  1004e3:	66 8c e0             	mov    %fs,%ax
    movw %gs, %ax
  1004e6:	66 8c e8             	mov    %gs,%ax

    # Lets now call the main kernel
    call kernel_main
  1004e9:	e8 e2 ff ff ff       	call   1004d0 <kernel_main>

    jmp .
  1004ee:	eb fe                	jmp    1004ee <long_mode_start+0x1c>

00000000001004f0 <strlen>:
#include <string.h>

size_t strlen(const char* str) {
	size_t len = 0;
  1004f0:	31 c0                	xor    %eax,%eax
	while (str[len])
  1004f2:	80 3f 00             	cmpb   $0x0,(%rdi)
  1004f5:	74 19                	je     100510 <strlen+0x20>
  1004f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  1004fe:	00 00 
		len++;
  100500:	48 83 c0 01          	add    $0x1,%rax
	while (str[len])
  100504:	80 3c 07 00          	cmpb   $0x0,(%rdi,%rax,1)
  100508:	75 f6                	jne    100500 <strlen+0x10>
  10050a:	c3                   	ret
  10050b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
	return len;
}
  100510:	c3                   	ret
  100511:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
  100518:	00 00 00 
  10051b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  100520:	48 8b 05 e1 1a 00 00 	mov    0x1ae1(%rip),%rax        # 102008 <__dso_handle+0x8>
  100527:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  10052b:	74 33                	je     100560 <strlen+0x70>
  10052d:	55                   	push   %rbp
  10052e:	48 89 e5             	mov    %rsp,%rbp
  100531:	53                   	push   %rbx
  100532:	bb 08 20 10 00       	mov    $0x102008,%ebx
  100537:	48 83 ec 08          	sub    $0x8,%rsp
  10053b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  100540:	ff d0                	call   *%rax
  100542:	48 8b 43 f8          	mov    -0x8(%rbx),%rax
  100546:	48 83 eb 08          	sub    $0x8,%rbx
  10054a:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  10054e:	75 f0                	jne    100540 <strlen+0x50>
  100550:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
  100554:	c9                   	leave
  100555:	c3                   	ret
  100556:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
  10055d:	00 00 00 
  100560:	c3                   	ret

Disassembly of section .init:

0000000000100580 <_init>:
.section .init
.global _init
.align 32
.code32
_init:
	push %ebp
  100580:	55                   	push   %rbp
	movl %esp, %ebp
  100581:	89 e5                	mov    %esp,%ebp
  100583:	e8 88 fb ff ff       	call   100110 <code_segment+0x100108>
  100588:	e8 93 ff ff ff       	call   100520 <strlen+0x30>
.code32
.section .init
	/* gcc will nicely put the contents of crtend.o's .init section here. */
	popl %ebp
  10058d:	5d                   	pop    %rbp
	ret
  10058e:	c3                   	ret

Disassembly of section .fini:

000000000010058f <_fini>:

.section .fini
.global _fini
.type _fini, @function
_fini:
	push %ebp
  10058f:	55                   	push   %rbp
	movl %esp, %ebp
  100590:	89 e5                	mov    %esp,%ebp
  100592:	e8 e9 fa ff ff       	call   100080 <code_segment+0x100078>

.section .fini
	/* gcc will nicely put the contents of crtend.o's .fini section here. */
	popl %ebp
  100597:	5d                   	pop    %rbp
  100598:	c3                   	ret

Disassembly of section .rodata:

0000000000101000 <gdt64>:
	...
  10100c:	00 98 20 00      	add    %bl,0xf0020(%rax)

0000000000101010 <.pointer>:
  101010:	0f 00 00             	sldt   (%rax)
  101013:	10 10                	adc    %dl,(%rax)
  101015:	00 00                	add    %al,(%rax)
  101017:	00 00                	add    %al,(%rax)
	...

Disassembly of section .eh_frame:

0000000000101020 <.eh_frame>:
  101020:	14 00                	adc    $0x0,%al
  101022:	00 00                	add    %al,(%rax)
  101024:	00 00                	add    %al,(%rax)
  101026:	00 00                	add    %al,(%rax)
  101028:	01 7a 52             	add    %edi,0x52(%rdx)
  10102b:	00 01                	add    %al,(%rcx)
  10102d:	78 10                	js     10103f <.pointer+0x2f>
  10102f:	01 1b                	add    %ebx,(%rbx)
  101031:	0c 07                	or     $0x7,%al
  101033:	08 90 01 00 00 10    	or     %dl,0x10000001(%rax)
  101039:	00 00                	add    %al,(%rax)
  10103b:	00 1c 00             	add    %bl,(%rax,%rax,1)
  10103e:	00 00                	add    %al,(%rax)
  101040:	00 f2                	add    %dh,%dl
  101042:	ff                   	(bad)
  101043:	ff 6e 00             	ljmp   *0x0(%rsi)
  101046:	00 00                	add    %al,(%rax)
  101048:	00 00                	add    %al,(%rax)
  10104a:	00 00                	add    %al,(%rax)
  10104c:	10 00                	adc    %al,(%rax)
  10104e:	00 00                	add    %al,(%rax)
  101050:	30 00                	xor    %al,(%rax)
  101052:	00 00                	add    %al,(%rax)
  101054:	5c                   	pop    %rsp
  101055:	f2 ff                	repnz (bad)
  101057:	ff 0d 00 00 00 00    	decl   0x0(%rip)        # 10105d <.pointer+0x4d>
  10105d:	00 00                	add    %al,(%rax)
  10105f:	00 10                	add    %dl,(%rax)
  101061:	00 00                	add    %al,(%rax)
  101063:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
  101067:	00 58 f2             	add    %bl,-0xe(%rax)
  10106a:	ff                   	(bad)
  10106b:	ff 20                	jmp    *(%rax)
  10106d:	00 00                	add    %al,(%rax)
  10106f:	00 00                	add    %al,(%rax)
  101071:	00 00                	add    %al,(%rax)
  101073:	00 10                	add    %dl,(%rax)
  101075:	00 00                	add    %al,(%rax)
  101077:	00 58 00             	add    %bl,0x0(%rax)
  10107a:	00 00                	add    %al,(%rax)
  10107c:	64 f2 ff             	fs repnz (bad)
  10107f:	ff 65 00             	jmp    *0x0(%rbp)
  101082:	00 00                	add    %al,(%rax)
  101084:	00 00                	add    %al,(%rax)
  101086:	00 00                	add    %al,(%rax)
  101088:	10 00                	adc    %al,(%rax)
  10108a:	00 00                	add    %al,(%rax)
  10108c:	6c                   	insb   (%dx),%es:(%rdi)
  10108d:	00 00                	add    %al,(%rax)
  10108f:	00 c0                	add    %al,%al
  101091:	f2 ff                	repnz (bad)
  101093:	ff 44 00 00          	incl   0x0(%rax,%rax,1)
  101097:	00 00                	add    %al,(%rax)
  101099:	00 00                	add    %al,(%rax)
  10109b:	00 1c 00             	add    %bl,(%rax,%rax,1)
  10109e:	00 00                	add    %al,(%rax)
  1010a0:	80 00 00             	addb   $0x0,(%rax)
  1010a3:	00 fc                	add    %bh,%ah
  1010a5:	f2 ff                	repnz (bad)
  1010a7:	ff c0                	inc    %eax
  1010a9:	00 00                	add    %al,(%rax)
  1010ab:	00 00                	add    %al,(%rax)
  1010ad:	02 71 0e             	add    0xe(%rcx),%dh
  1010b0:	10 86 02 48 0d 06    	adc    %al,0x60d4802(%rsi)
  1010b6:	02 46 0c             	add    0xc(%rsi),%al
  1010b9:	07                   	(bad)
  1010ba:	08 00                	or     %al,(%rax)
  1010bc:	1c 00                	sbb    $0x0,%al
  1010be:	00 00                	add    %al,(%rax)
  1010c0:	a0 00 00 00 9c f3 ff 	movabs 0x29fffff39c000000,%al
  1010c7:	ff 29 
  1010c9:	00 00                	add    %al,(%rax)
  1010cb:	00 00                	add    %al,(%rax)
  1010cd:	46 0e                	rex.RX (bad)
  1010cf:	10 86 02 4a 0d 06    	adc    %al,0x60d4a02(%rsi)
  1010d5:	53                   	push   %rbx
  1010d6:	0c 07                	or     $0x7,%al
  1010d8:	08 45 c6             	or     %al,-0x3a(%rbp)
  1010db:	00 20                	add    %ah,(%rax)
  1010dd:	00 00                	add    %al,(%rax)
  1010df:	00 c0                	add    %al,%al
  1010e1:	00 00                	add    %al,(%rax)
  1010e3:	00 ac f3 ff ff 37 00 	add    %ch,0x37ffff(%rbx,%rsi,8)
  1010ea:	00 00                	add    %al,(%rax)
  1010ec:	00 41 0e             	add    %al,0xe(%rcx)
  1010ef:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  1010f5:	41 83 03 71          	addl   $0x71,(%r11)
  1010f9:	0c 07                	or     $0x7,%al
  1010fb:	08 00                	or     %al,(%rax)
  1010fd:	00 00                	add    %al,(%rax)
  1010ff:	00 14 00             	add    %dl,(%rax,%rax,1)
  101102:	00 00                	add    %al,(%rax)
  101104:	e4 00                	in     $0x0,%al
  101106:	00 00                	add    %al,(%rax)
  101108:	c8 f3 ff ff          	enter  $0xfff3,$0xff
  10110c:	02 00                	add    (%rax),%al
	...
  101116:	00 00                	add    %al,(%rax)
  101118:	10 00                	adc    %al,(%rax)
  10111a:	00 00                	add    %al,(%rax)
  10111c:	fc                   	cld
  10111d:	00 00                	add    %al,(%rax)
  10111f:	00 d0                	add    %dl,%al
  101121:	f3 ff                	repz (bad)
  101123:	ff 21                	jmp    *(%rcx)
	...

Disassembly of section .data:

0000000000102000 <__dso_handle>:
	...

Disassembly of section .ctors:

0000000000102008 <.ctors>:
  102008:	ff                   	(bad)
  102009:	ff                   	(bad)
  10200a:	ff                   	(bad)
  10200b:	ff                   	(bad)
  10200c:	ff                   	(bad)
  10200d:	ff                   	(bad)
  10200e:	ff                   	(bad)
  10200f:	ff 00                	incl   (%rax)
  102011:	00 00                	add    %al,(%rax)
  102013:	00 00                	add    %al,(%rax)
  102015:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dtors:

0000000000102018 <__DTOR_END__-0x8>:
  102018:	ff                   	(bad)
  102019:	ff                   	(bad)
  10201a:	ff                   	(bad)
  10201b:	ff                   	(bad)
  10201c:	ff                   	(bad)
  10201d:	ff                   	(bad)
  10201e:	ff                   	(bad)
  10201f:	ff                 	incl   (%rax)

0000000000102020 <__DTOR_END__>:
	...

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
   0:	5c                   	pop    %rsp
   1:	00 00                	add    %al,(%rax)
   3:	00 05 00 08 00 2e    	add    %al,0x2e000800(%rip)        # 2e000809 <MAGIC+0x12525807>
   9:	00 00                	add    %al,(%rax)
   b:	00 01                	add    %al,(%rcx)
   d:	01 01                	add    %eax,(%rcx)
   f:	fb                   	sti
  10:	0e                   	(bad)
  11:	0d 00 01 01 01       	or     $0x1010100,%eax
  16:	01 00                	add    %eax,(%rax)
  18:	00 00                	add    %al,(%rax)
  1a:	01 00                	add    %eax,(%rax)
  1c:	00 01                	add    %al,(%rcx)
  1e:	01 01                	add    %eax,(%rcx)
  20:	1f                   	(bad)
  21:	02 00                	add    (%rax),%al
  23:	00 00                	add    %al,(%rax)
  25:	00 2b                	add    %ch,(%rbx)
  27:	00 00                	add    %al,(%rax)
  29:	00 02                	add    %al,(%rdx)
  2b:	01 1f                	add    %ebx,(%rdi)
  2d:	02 0f                	add    (%rdi),%cl
  2f:	02 37                	add    (%rdi),%dh
  31:	00 00                	add    %al,(%rax)
  33:	00 01                	add    %al,(%rcx)
  35:	37                   	(bad)
  36:	00 00                	add    %al,(%rax)
  38:	00 01                	add    %al,(%rcx)
  3a:	00 09                	add    %cl,(%rcx)
  3c:	02 80 05 10 00 00    	add    0x1005(%rax),%al
  42:	00 00                	add    %al,(%rax)
  44:	00 17                	add    %dl,(%rdi)
  46:	21 02                	and    %eax,(%rdx)
  48:	02 00                	add    (%rax),%al
  4a:	01 01                	add    %eax,(%rcx)
  4c:	00 09                	add    %cl,(%rcx)
  4e:	02 8f 05 10 00 00    	add    0x1005(%rdi),%cl
  54:	00 00                	add    %al,(%rax)
  56:	00 03                	add    %al,(%rbx)
  58:	0d 01 21 02 02       	or     $0x2022101,%eax
  5d:	00 01                	add    %al,(%rcx)
  5f:	01 88 00 00 00 05    	add    %ecx,0x5000000(%rax)
  65:	00 08                	add    %cl,(%rax)
  67:	00 2e                	add    %ch,(%rsi)
  69:	00 00                	add    %al,(%rax)
  6b:	00 01                	add    %al,(%rcx)
  6d:	01 01                	add    %eax,(%rcx)
  6f:	fb                   	sti
  70:	0e                   	(bad)
  71:	0d 00 01 01 01       	or     $0x1010100,%eax
  76:	01 00                	add    %eax,(%rax)
  78:	00 00                	add    %al,(%rax)
  7a:	01 00                	add    %eax,(%rax)
  7c:	00 01                	add    %al,(%rcx)
  7e:	01 01                	add    %eax,(%rcx)
  80:	1f                   	(bad)
  81:	02 00                	add    (%rax),%al
  83:	00 00                	add    %al,(%rax)
  85:	00 2b                	add    %ch,(%rbx)
  87:	00 00                	add    %al,(%rax)
  89:	00 02                	add    %al,(%rdx)
  8b:	01 1f                	add    %ebx,(%rdi)
  8d:	02 0f                	add    (%rdi),%cl
  8f:	02 3e                	add    (%rsi),%bh
  91:	00 00                	add    %al,(%rax)
  93:	00 01                	add    %al,(%rcx)
  95:	3e 00 00             	ds add %al,(%rax)
  98:	00 01                	add    %al,(%rcx)
  9a:	00 09                	add    %cl,(%rcx)
  9c:	02 3d 01 10 00 00    	add    0x1001(%rip),%bh        # 10a3 <code_segment+0x109b>
  a2:	00 00                	add    %al,(%rax)
  a4:	00 03                	add    %al,(%rbx)
  a6:	1c 01                	sbb    $0x1,%al
  a8:	5b                   	pop    %rbx
  a9:	5a                   	pop    %rdx
  aa:	5b                   	pop    %rbx
  ab:	5b                   	pop    %rbx
  ac:	5b                   	pop    %rbx
  ad:	5a                   	pop    %rdx
  ae:	5a                   	pop    %rdx
  af:	25 21 21 2f 67       	and    $0x672f2121,%eax
  b4:	21 21                	and    %esp,(%rcx)
  b6:	21 21                	and    %esp,(%rcx)
  b8:	21 21                	and    %esp,(%rcx)
  ba:	2f                   	(bad)
  bb:	67 24 59             	addr32 and $0x59,%al
  be:	2f                   	(bad)
  bf:	67 68 59 2f 67 2f    	addr32 push $0x2f672f59
  c5:	23 9f 9f a0 69 59    	and    0x5969a09f(%rdi),%ebx
  cb:	2f                   	(bad)
  cc:	67 75 2f             	addr32 jne fe <code_segment+0xf6>
  cf:	21 67 30             	and    %esp,0x30(%rdi)
  d2:	23 59 40             	and    0x40(%rcx),%ebx
  d5:	67 2f                	addr32 (bad)
  d7:	67 31 3d 67 3f 23 59 	xor    %edi,0x59233f67(%eip)        # 59234045 <MAGIC+0x3d759043>
  de:	31 59 31             	xor    %ebx,0x31(%rcx)
  e1:	59                   	pop    %rcx
  e2:	31 9f 9f 9f 59 02    	xor    %ebx,0x2599f9f(%rdi)
  e8:	01 00                	add    %eax,(%rax)
  ea:	01 01                	add    %eax,(%rcx)
  ec:	e9 03 00 00 05       	jmp    50000f4 <terminal_row+0x4ef908c>
  f1:	00 08                	add    %cl,(%rax)
  f3:	00 4a 00             	add    %cl,0x0(%rdx)
  f6:	00 00                	add    %al,(%rax)
  f8:	01 01                	add    %eax,(%rcx)
  fa:	01 fb                	add    %edi,%ebx
  fc:	0e                   	(bad)
  fd:	0d 00 01 01 01       	or     $0x1010100,%eax
 102:	01 00                	add    %eax,(%rax)
 104:	00 00                	add    %al,(%rax)
 106:	01 00                	add    %eax,(%rax)
 108:	00 01                	add    %al,(%rcx)
 10a:	01 01                	add    %eax,(%rcx)
 10c:	1f                   	(bad)
 10d:	04 00                	add    $0x0,%al
 10f:	00 00                	add    %al,(%rax)
 111:	00 2b                	add    %ch,(%rbx)
 113:	00 00                	add    %al,(%rax)
 115:	00 57 00             	add    %dl,0x0(%rdi)
 118:	00 00                	add    %al,(%rax)
 11a:	7e 00                	jle    11c <code_segment+0x114>
 11c:	00 00                	add    %al,(%rax)
 11e:	02 01                	add    (%rcx),%al
 120:	1f                   	(bad)
 121:	02 0f                	add    (%rdi),%cl
 123:	06                   	(bad)
 124:	51                   	push   %rcx
 125:	00 00                	add    %al,(%rax)
 127:	00 01                	add    %al,(%rcx)
 129:	51                   	push   %rcx
 12a:	00 00                	add    %al,(%rax)
 12c:	00 01                	add    %al,(%rcx)
 12e:	b6 00                	mov    $0x0,%dh
 130:	00 00                	add    %al,(%rax)
 132:	01 bc 00 00 00 02 c5 	add    %edi,-0x3afe0000(%rax,%rax,1)
 139:	00 00                	add    %al,(%rax)
 13b:	00 02                	add    %al,(%rdx)
 13d:	d2 00                	rolb   %cl,(%rax)
 13f:	00 00                	add    %al,(%rax)
 141:	03 05 1f 00 09 02    	add    0x209001f(%rip),%eax        # 2090166 <terminal_row+0x1f890fe>
 147:	40 02 10             	rex add (%rax),%dl
 14a:	00 00                	add    %al,(%rax)
 14c:	00 00                	add    %al,(%rax)
 14e:	00 03                	add    %al,(%rbx)
 150:	17                   	(bad)
 151:	01 05 05 13 05 12    	add    %eax,0x12051305(%rip)        # 1205145c <terminal_row+0x11f4a3f4>
 157:	06                   	(bad)
 158:	01 05 05 06 ad 05    	add    %eax,0x5ad0605(%rip)        # 5ad0763 <terminal_row+0x59c96fb>
 15e:	24 00                	and    $0x0,%al
 160:	02 04 01             	add    (%rcx,%rax,1),%al
 163:	06                   	(bad)
 164:	03 0a                	add    (%rdx),%ecx
 166:	01 05 15 03 7a 58    	add    %eax,0x587a0315(%rip)        # 587a0481 <MAGIC+0x3ccc547f>
 16c:	54                   	push   %rsp
 16d:	05 05 06 ae 05       	add    $0x5ae0605,%eax
 172:	24 00                	and    $0x0,%al
 174:	02 04 01             	add    (%rcx,%rax,1),%al
 177:	06                   	(bad)
 178:	1a 05 14 00 02 04    	sbb    0x4020014(%rip),%al        # 4020192 <terminal_row+0x3f1912a>
 17e:	01 03                	add    %eax,(%rbx)
 180:	78 4a                	js     1cc <code_segment+0x1c4>
 182:	05 05 06 76 05       	add    $0x5760605,%eax
 187:	24 00                	and    $0x0,%al
 189:	02 04 01             	add    (%rcx,%rax,1),%al
 18c:	06                   	(bad)
 18d:	18 05 15 03 7a 58    	sbb    %al,0x587a0315(%rip)        # 587a04a8 <MAGIC+0x3ccc54a6>
 193:	05 05 06 af 05       	add    $0x5af0605,%eax
 198:	09 01                	or     %eax,(%rcx)
 19a:	05 19 00 02 04       	add    $0x4020019,%eax
 19f:	01 01                	add    %eax,(%rcx)
 1a1:	05 1d 00 02 04       	add    $0x402001d,%eax
 1a6:	01 59 00             	add    %ebx,0x0(%rcx)
 1a9:	02 04 01             	add    (%rcx,%rax,1),%al
 1ac:	06                   	(bad)
 1ad:	74 05                	je     1b4 <code_segment+0x1ac>
 1af:	0d 06 91 13 05       	or     $0x5139106,%eax
 1b4:	24 00                	and    $0x0,%al
 1b6:	02 04 01             	add    (%rcx,%rax,1),%al
 1b9:	06                   	(bad)
 1ba:	01 05 2b 00 02 04    	add    %eax,0x402002b(%rip)        # 40201eb <terminal_row+0x3f19183>
 1c0:	03 06                	add    (%rsi),%eax
 1c2:	3a 05 1d 00 02 04    	cmp    0x402001d(%rip),%al        # 40201e5 <terminal_row+0x3f1917d>
 1c8:	01 01                	add    %eax,(%rcx)
 1ca:	05 0d 13 13 05       	add    $0x513130d,%eax
 1cf:	24 00                	and    $0x0,%al
 1d1:	02 04 01             	add    (%rcx,%rax,1),%al
 1d4:	06                   	(bad)
 1d5:	4a 05 2b 00 02 04    	rex.WX add $0x402002b,%rax
 1db:	03 06                	add    (%rsi),%eax
 1dd:	48 05 1d 00 02 04    	add    $0x402001d,%rax
 1e3:	01 01                	add    %eax,(%rcx)
 1e5:	05 28 00 02 04       	add    $0x4020028,%eax
 1ea:	02 57 05             	add    0x5(%rdi),%dl
 1ed:	19 00                	sbb    %eax,(%rax)
 1ef:	02 04 01             	add    (%rcx,%rax,1),%al
 1f2:	01 05 01 06 ce 05    	add    %eax,0x5ce0601(%rip)        # 5ce07f9 <terminal_row+0x5bd9791>
 1f8:	4d 06                	rex.WRB (bad)
 1fa:	3f                   	(bad)
 1fb:	05 05 13 04 02       	add    $0x2041305,%eax
 200:	05 17 03 6e 01       	add    $0x16e0317,%eax
 205:	05 05 13 05 24       	add    $0x24051305,%eax
 20a:	06                   	(bad)
 20b:	01 05 17 3c 04 01    	add    %eax,0x1043c17(%rip)        # 1043e28 <terminal_row+0xf3cdc0>
 211:	05 01 03 12 90       	add    $0x90120301,%eax
 216:	05 5f 06 4d 05       	add    $0x54d065f,%eax
 21b:	05 13 13 04 02       	add    $0x2041313,%eax
 220:	05 18 03 6c 01       	add    $0x16c0318,%eax
 225:	05 05 13 06 01       	add    $0x1061305,%eax
 22a:	04 01                	add    $0x1,%al
 22c:	05 14 03 13 01       	add    $0x1130314,%eax
 231:	04 02                	add    $0x2,%al
 233:	05 21 03 6d 4a       	add    $0x4a6d0321,%eax
 238:	3c 4a                	cmp    $0x4a,%al
 23a:	04 01                	add    $0x1,%al
 23c:	05 14 03 13 01       	add    $0x1130314,%eax
 241:	04 02                	add    $0x2,%al
 243:	05 21 03 6d 4a       	add    $0x4a6d0321,%eax
 248:	04 01                	add    $0x1,%al
 24a:	05 14 03 13 2e       	add    $0x2e130314,%eax
 24f:	04 02                	add    $0x2,%al
 251:	05 21 03 6d 3c       	add    $0x3c6d0321,%eax
 256:	74 04                	je     25c <code_segment+0x254>
 258:	01 05 01 03 14 4a    	add    %eax,0x4a140301(%rip)        # 4a14055f <MAGIC+0x2e66555d>
 25e:	05 1f 06 23 05       	add    $0x523061f,%eax
 263:	05 13 15 05 09       	add    $0x9051513,%eax
 268:	01 05 19 00 02 04    	add    %eax,0x4020019(%rip)        # 4020287 <terminal_row+0x3f1921f>
 26e:	01 01                	add    %eax,(%rcx)
 270:	05 1a 00 02 04       	add    $0x402001a,%eax
 275:	01 08                	add    %ecx,(%rax)
 277:	e5 00                	in     $0x0,%eax
 279:	02 04 01             	add    (%rcx,%rax,1),%al
 27c:	06                   	(bad)
 27d:	74 05                	je     284 <code_segment+0x27c>
 27f:	0d 06 08 83 05       	or     $0x5830806,%eax
 284:	3b 06                	cmp    (%rsi),%eax
 286:	01 05 1a 00 02 04    	add    %eax,0x402001a(%rip)        # 40202a6 <terminal_row+0x3f1923e>
 28c:	01 3b                	add    %edi,(%rbx)
 28e:	05 2d 4b 05 28       	add    $0x28054b2d,%eax
 293:	00 02                	add    %al,(%rdx)
 295:	04 03                	add    $0x3,%al
 297:	06                   	(bad)
 298:	73 05                	jae    29f <code_segment+0x297>
 29a:	1a 00                	sbb    (%rax),%al
 29c:	02 04 01             	add    (%rcx,%rax,1),%al
 29f:	01 05 2c 00 02 04    	add    %eax,0x402002c(%rip)        # 40202d1 <terminal_row+0x3f19269>
 2a5:	02 57 05             	add    0x5(%rdi),%dl
 2a8:	19 00                	sbb    %eax,(%rax)
 2aa:	02 04 01             	add    (%rcx,%rax,1),%al
 2ad:	01 00                	add    %eax,(%rax)
 2af:	02 04 01             	add    (%rcx,%rax,1),%al
 2b2:	06                   	(bad)
 2b3:	4a 00 02             	rex.WX add %al,(%rdx)
 2b6:	04 01                	add    $0x1,%al
 2b8:	c8 05 01 1a          	enter  $0x105,$0x1a
 2bc:	05 21 06 bc 05       	add    $0x5bc0621,%eax
 2c1:	05 13 15 05 09       	add    $0x9051513,%eax
 2c6:	01 05 16 00 02 04    	add    %eax,0x4020016(%rip)        # 40202e2 <terminal_row+0x3f1927a>
 2cc:	01 01                	add    %eax,(%rcx)
 2ce:	04 02                	add    $0x2,%al
 2d0:	05 21 06 03 57       	add    $0x57030621,%eax
 2d5:	01 08                	add    %ecx,(%rax)
 2d7:	20 08                	and    %cl,(%rax)
 2d9:	c8 04 01 05          	enter  $0x104,$0x5
 2dd:	09 06                	or     %eax,(%rsi)
 2df:	03 2a                	add    (%rdx),%ebp
 2e1:	01 04 02             	add    %eax,(%rdx,%rax,1)
 2e4:	05 18 03 55 01       	add    $0x1550318,%eax
 2e9:	05 05 13 06 01       	add    $0x1061305,%eax
 2ee:	04 01                	add    $0x1,%al
 2f0:	05 38 00 02 04       	add    $0x4020038,%eax
 2f5:	01 03                	add    %eax,(%rbx)
 2f7:	2a 01                	sub    (%rcx),%al
 2f9:	05 24 00 02 04       	add    $0x4020024,%eax
 2fe:	03 06                	add    (%rsi),%eax
 300:	3b 05 16 00 02 04    	cmp    0x4020016(%rip),%eax        # 402031c <terminal_row+0x3f192b4>
 306:	01 01                	add    %eax,(%rcx)
 308:	05 09 13 04 02       	add    $0x2041309,%eax
 30d:	05 18 03 55 01       	add    $0x1550318,%eax
 312:	05 05 13 06 01       	add    $0x1061305,%eax
 317:	04 01                	add    $0x1,%al
 319:	05 16 00 02 04       	add    $0x4020016,%eax
 31e:	01 03                	add    %eax,(%rbx)
 320:	29 01                	sub    %eax,(%rcx)
 322:	05 38 00 02 04       	add    $0x4020038,%eax
 327:	01 4b 05             	add    %ecx,0x5(%rbx)
 32a:	24 00                	and    $0x0,%al
 32c:	02 04 03             	add    (%rbx,%rax,1),%al
 32f:	06                   	(bad)
 330:	49 05 16 00 02 04    	rex.WB add $0x4020016,%rax
 336:	01 01                	add    %eax,(%rcx)
 338:	05 01 06 85 05       	add    $0x5850601,%eax
 33d:	1e                   	(bad)
 33e:	06                   	(bad)
 33f:	cb                   	lret
 340:	05 05 13 13 15       	add    $0x15131305,%eax
 345:	04 02                	add    $0x2,%al
 347:	05 21 06 03 4c       	add    $0x4c030621,%eax
 34c:	74 ac                	je     2fa <code_segment+0x2f2>
 34e:	04 01                	add    $0x1,%al
 350:	05 05 03 34 01       	add    $0x1340305,%eax
 355:	05 06 06 03 5d       	add    $0x5d030606,%eax
 35a:	74 05                	je     361 <code_segment+0x359>
 35c:	05 13 13 04 02       	add    $0x2041313,%eax
 361:	05 18 03 6c 01       	add    $0x16c0318,%eax
 366:	05 05 13 05 21       	add    $0x21051305,%eax
 36b:	06                   	(bad)
 36c:	01 04 01             	add    %eax,(%rcx,%rax,1)
 36f:	05 14 03 13 3c       	add    $0x3c130314,%eax
 374:	04 02                	add    $0x2,%al
 376:	05 21 03 6d 4a       	add    $0x4a6d0321,%eax
 37b:	3c 04                	cmp    $0x4,%al
 37d:	01 05 14 03 13 01    	add    %eax,0x1130314(%rip)        # 1130697 <terminal_row+0x102962f>
 383:	04 02                	add    $0x2,%al
 385:	05 21 03 6d 4a       	add    $0x4a6d0321,%eax
 38a:	04 01                	add    $0x1,%al
 38c:	05 14 03 13 74       	add    $0x74130314,%eax
 391:	04 02                	add    $0x2,%al
 393:	05 21 03 6d 3c       	add    $0x3c6d0321,%eax
 398:	3c 4a                	cmp    $0x4a,%al
 39a:	04 01                	add    $0x1,%al
 39c:	05 05 06 03 37       	add    $0x37030605,%eax
 3a1:	01 05 07 06 01 05    	add    %eax,0x5010607(%rip)        # 50109ae <terminal_row+0x4f09946>
 3a7:	09 06                	or     %eax,(%rsi)
 3a9:	08 75 05             	or     %dh,0x5(%rbp)
 3ac:	19 06                	sbb    %eax,(%rsi)
 3ae:	01 05 09 06 ae 05    	add    %eax,0x5ae0609(%rip)        # 5ae09bd <terminal_row+0x59d9955>
 3b4:	0c 06                	or     $0x6,%al
 3b6:	01 05 0b 4a 05 1e    	add    %eax,0x1e054a0b(%rip)        # 1e054dc7 <MAGIC+0x2579dc5>
 3bc:	03 75 08             	add    0x8(%rbp),%esi
 3bf:	12 05 16 03 0c 20    	adc    0x200c0316(%rip),%al        # 200c06db <MAGIC+0x45e56d9>
 3c5:	05 1e 03 74 58       	add    $0x5874031e,%eax
 3ca:	05 11 06 03 0d       	add    $0xd030611,%eax
 3cf:	9e                   	sahf
 3d0:	05 32 00 02 04       	add    $0x4020032,%eax
 3d5:	03 57 05             	add    0x5(%rdi),%edx
 3d8:	20 00                	and    %al,(%rax)
 3da:	02 04 01             	add    (%rcx,%rax,1),%al
 3dd:	3c 04                	cmp    $0x4,%al
 3df:	02 05 21 06 03 45    	add    0x45030621(%rip),%al        # 45030a06 <MAGIC+0x29555a04>
 3e5:	58                   	pop    %rax
 3e6:	08 2e                	or     %ch,(%rsi)
 3e8:	04 01                	add    $0x1,%al
 3ea:	05 09 06 03 2a       	add    $0x2a030609,%eax
 3ef:	01 04 02             	add    %eax,(%rdx,%rax,1)
 3f2:	05 18 03 55 01       	add    $0x1550318,%eax
 3f7:	05 05 13 06 01       	add    $0x1061305,%eax
 3fc:	04 01                	add    $0x1,%al
 3fe:	05 38 00 02 04       	add    $0x4020038,%eax
 403:	01 03                	add    %eax,(%rbx)
 405:	2a 01                	sub    (%rcx),%al
 407:	05 24 00 02 04       	add    $0x4020024,%eax
 40c:	03 06                	add    (%rsi),%eax
 40e:	3b 05 16 00 02 04    	cmp    0x4020016(%rip),%eax        # 402042a <terminal_row+0x3f193c2>
 414:	01 01                	add    %eax,(%rcx)
 416:	05 09 13 04 02       	add    $0x2041309,%eax
 41b:	05 18 03 55 01       	add    $0x1550318,%eax
 420:	05 05 13 06 01       	add    $0x1061305,%eax
 425:	04 01                	add    $0x1,%al
 427:	05 16 00 02 04       	add    $0x4020016,%eax
 42c:	01 03                	add    %eax,(%rbx)
 42e:	29 01                	sub    %eax,(%rcx)
 430:	05 38 00 02 04       	add    $0x4020038,%eax
 435:	01 4b 05             	add    %ecx,0x5(%rbx)
 438:	24 00                	and    $0x0,%al
 43a:	02 04 03             	add    (%rbx,%rax,1),%al
 43d:	06                   	(bad)
 43e:	49 05 16 00 02 04    	rex.WB add $0x4020016,%rax
 444:	01 01                	add    %eax,(%rcx)
 446:	00 02                	add    %al,(%rdx)
 448:	04 01                	add    $0x1,%al
 44a:	06                   	(bad)
 44b:	82                   	(bad)
 44c:	05 0d 06 03 17       	add    $0x1703060d,%eax
 451:	01 05 1a 06 01 ac    	add    %eax,-0x53fef9e6(%rip)        # ffffffffac010a71 <MAGIC+0xffffffff90535a6f>
 457:	05 01 15 05 34       	add    $0x34051501,%eax
 45c:	06                   	(bad)
 45d:	31 05 05 14 05 09    	xor    %eax,0x9051405(%rip)        # 9051868 <terminal_row+0x8f4a800>
 463:	01 05 19 00 02 04    	add    %eax,0x4020019(%rip)        # 4020482 <terminal_row+0x3f1941a>
 469:	01 01                	add    %eax,(%rcx)
 46b:	05 34 06 56 05       	add    $0x5560634,%eax
 470:	09 06                	or     %eax,(%rsi)
 472:	af                   	scas   %es:(%rdi),%eax
 473:	05 19 00 02 04       	add    $0x4020019,%eax
 478:	01 06                	add    %eax,(%rsi)
 47a:	49 05 09 4b 05 22    	rex.WB add $0x22054b09,%rax
 480:	00 02                	add    %al,(%rdx)
 482:	04 03                	add    $0x3,%al
 484:	06                   	(bad)
 485:	57                   	push   %rdi
 486:	05 19 00 02 04       	add    $0x4020019,%eax
 48b:	01 01                	add    %eax,(%rcx)
 48d:	05 01 06 5b 66       	add    $0x665b0601,%eax
 492:	05 2f 06 85 05       	add    $0x585062f,%eax
 497:	05 13 05 2f 06       	add    $0x62f0513,%eax
 49c:	11 05 05 bb 05 06    	adc    %eax,0x605bb05(%rip)        # 605bfa7 <terminal_row+0x5f54f3f>
 4a2:	06                   	(bad)
 4a3:	03 77 58             	add    0x58(%rdi),%esi
 4a6:	05 05 14 05 09       	add    $0x9051405,%eax
 4ab:	01 05 19 00 02 04    	add    %eax,0x4020019(%rip)        # 40204ca <terminal_row+0x3f19462>
 4b1:	01 01                	add    %eax,(%rcx)
 4b3:	05 09 e5 05 19       	add    $0x1905e509,%eax
 4b8:	00 02                	add    %al,(%rdx)
 4ba:	04 01                	add    $0x1,%al
 4bc:	06                   	(bad)
 4bd:	3b 05 09 4b 05 22    	cmp    0x22054b09(%rip),%eax        # 22054fcc <MAGIC+0x6579fca>
 4c3:	00 02                	add    %al,(%rdx)
 4c5:	04 03                	add    $0x3,%al
 4c7:	06                   	(bad)
 4c8:	57                   	push   %rdi
 4c9:	05 19 00 02 04       	add    $0x4020019,%eax
 4ce:	01 01                	add    %eax,(%rcx)
 4d0:	05 01 06 60 02       	add    $0x2600601,%eax
 4d5:	06                   	(bad)
 4d6:	00 01                	add    %al,(%rcx)
 4d8:	01 4f 00             	add    %ecx,0x0(%rdi)
 4db:	00 00                	add    %al,(%rax)
 4dd:	05 00 08 00 2e       	add    $0x2e000800,%eax
 4e2:	00 00                	add    %al,(%rax)
 4e4:	00 01                	add    %al,(%rcx)
 4e6:	01 01                	add    %eax,(%rcx)
 4e8:	fb                   	sti
 4e9:	0e                   	(bad)
 4ea:	0d 00 01 01 01       	or     $0x1010100,%eax
 4ef:	01 00                	add    %eax,(%rax)
 4f1:	00 00                	add    %al,(%rax)
 4f3:	01 00                	add    %eax,(%rax)
 4f5:	00 01                	add    %al,(%rcx)
 4f7:	01 01                	add    %eax,(%rcx)
 4f9:	1f                   	(bad)
 4fa:	02 00                	add    (%rax),%al
 4fc:	00 00                	add    %al,(%rax)
 4fe:	00 24 00             	add    %ah,(%rax,%rax,1)
 501:	00 00                	add    %al,(%rax)
 503:	02 01                	add    (%rcx),%al
 505:	1f                   	(bad)
 506:	02 0f                	add    (%rdi),%cl
 508:	02 e2                	add    %dl,%ah
 50a:	00 00                	add    %al,(%rax)
 50c:	00 01                	add    %al,(%rcx)
 50e:	e2 00                	loop   510 <code_segment+0x508>
 510:	00 00                	add    %al,(%rax)
 512:	01 05 17 00 09 02    	add    %eax,0x2090017(%rip)        # 209052f <terminal_row+0x1f894c7>
 518:	d0 04 10             	rolb   (%rax,%rdx,1)
 51b:	00 00                	add    %al,(%rax)
 51d:	00 00                	add    %al,(%rax)
 51f:	00 15 05 05 13 05    	add    %dl,0x5130505(%rip)        # 5130a2a <terminal_row+0x50299c2>
 525:	0a 01                	or     (%rcx),%al
 527:	02 02                	add    (%rdx),%al
 529:	00 01                	add    %al,(%rcx)
 52b:	01 4e 00             	add    %ecx,0x0(%rsi)
 52e:	00 00                	add    %al,(%rax)
 530:	05 00 08 00 2e       	add    $0x2e000800,%eax
 535:	00 00                	add    %al,(%rax)
 537:	00 01                	add    %al,(%rcx)
 539:	01 01                	add    %eax,(%rcx)
 53b:	fb                   	sti
 53c:	0e                   	(bad)
 53d:	0d 00 01 01 01       	or     $0x1010100,%eax
 542:	01 00                	add    %eax,(%rax)
 544:	00 00                	add    %al,(%rax)
 546:	01 00                	add    %eax,(%rax)
 548:	00 01                	add    %al,(%rcx)
 54a:	01 01                	add    %eax,(%rcx)
 54c:	1f                   	(bad)
 54d:	02 00                	add    (%rax),%al
 54f:	00 00                	add    %al,(%rax)
 551:	00 2b                	add    %ch,(%rbx)
 553:	00 00                	add    %al,(%rax)
 555:	00 02                	add    %al,(%rdx)
 557:	01 1f                	add    %ebx,(%rdi)
 559:	02 0f                	add    (%rdi),%cl
 55b:	02 eb                	add    %bl,%ch
 55d:	00 00                	add    %al,(%rax)
 55f:	00 01                	add    %al,(%rcx)
 561:	eb 00                	jmp    563 <code_segment+0x55b>
 563:	00 00                	add    %al,(%rax)
 565:	01 00                	add    %eax,(%rax)
 567:	09 02                	or     %eax,(%rdx)
 569:	d2 04 10             	rolb   %cl,(%rax,%rdx,1)
 56c:	00 00                	add    %al,(%rax)
 56e:	00 00                	add    %al,(%rax)
 570:	00 19                	add    %bl,(%rcx)
 572:	83 3d 3d 3d 3d 3f 5a 	cmpl   $0x5a,0x3f3d3d3d(%rip)        # 3f3d42b6 <MAGIC+0x238f92b4>
 579:	02 02                	add    (%rdx),%al
 57b:	00 01                	add    %al,(%rcx)
 57d:	01 70 00             	add    %esi,0x0(%rax)
 580:	00 00                	add    %al,(%rax)
 582:	05 00 08 00 37       	add    $0x37000800,%eax
 587:	00 00                	add    %al,(%rax)
 589:	00 01                	add    %al,(%rcx)
 58b:	01 01                	add    %eax,(%rcx)
 58d:	fb                   	sti
 58e:	0e                   	(bad)
 58f:	0d 00 01 01 01       	or     $0x1010100,%eax
 594:	01 00                	add    %eax,(%rax)
 596:	00 00                	add    %al,(%rax)
 598:	01 00                	add    %eax,(%rax)
 59a:	00 01                	add    %al,(%rcx)
 59c:	01 01                	add    %eax,(%rcx)
 59e:	1f                   	(bad)
 59f:	03 04 01             	add    (%rcx,%rax,1),%eax
 5a2:	00 00                	add    %al,(%rax)
 5a4:	2d 01 00 00 57       	sub    $0x57000001,%eax
 5a9:	00 00                	add    %al,(%rax)
 5ab:	00 02                	add    %al,(%rdx)
 5ad:	01 1f                	add    %ebx,(%rdi)
 5af:	02 0f                	add    (%rdi),%cl
 5b1:	03 fb                	add    %ebx,%edi
 5b3:	00 00                	add    %al,(%rax)
 5b5:	00 01                	add    %al,(%rcx)
 5b7:	fb                   	sti
 5b8:	00 00                	add    %al,(%rax)
 5ba:	00 01                	add    %al,(%rcx)
 5bc:	bc 00 00 00 02       	mov    $0x2000000,%esp
 5c1:	05 20 00 09 02       	add    $0x2090020,%eax
 5c6:	f0 04 10             	lock add $0x10,%al
 5c9:	00 00                	add    %al,(%rax)
 5cb:	00 00                	add    %al,(%rax)
 5cd:	00 14 05 02 13 13 05 	add    %dl,0x5131302(,%rax,1)
 5d4:	09 01                	or     %eax,(%rcx)
 5d6:	06                   	(bad)
 5d7:	11 2f                	adc    %ebp,(%rdi)
 5d9:	58                   	pop    %rax
 5da:	05 03 06 91 05       	add    $0x5910603,%eax
 5df:	06                   	(bad)
 5e0:	06                   	(bad)
 5e1:	01 05 09 06 49 05    	add    %eax,0x5490609(%rip)        # 5490bf0 <terminal_row+0x5389b88>
 5e7:	02 bc 05 01 06 13 02 	add    0x2130601(%rbp,%rax,1),%bh
 5ee:	01 00                	add    %eax,(%rax)
 5f0:	01 01                	add    %eax,(%rcx)
 5f2:	5a                   	pop    %rdx
 5f3:	00 00                	add    %al,(%rax)
 5f5:	00 05 00 08 00 2e    	add    %al,0x2e000800(%rip)        # 2e000dfb <MAGIC+0x12525df9>
 5fb:	00 00                	add    %al,(%rax)
 5fd:	00 01                	add    %al,(%rcx)
 5ff:	01 01                	add    %eax,(%rcx)
 601:	fb                   	sti
 602:	0e                   	(bad)
 603:	0d 00 01 01 01       	or     $0x1010100,%eax
 608:	01 00                	add    %eax,(%rax)
 60a:	00 00                	add    %al,(%rax)
 60c:	01 00                	add    %eax,(%rax)
 60e:	00 01                	add    %al,(%rcx)
 610:	01 01                	add    %eax,(%rcx)
 612:	1f                   	(bad)
 613:	02 00                	add    (%rax),%al
 615:	00 00                	add    %al,(%rax)
 617:	00 2b                	add    %ch,(%rbx)
 619:	00 00                	add    %al,(%rax)
 61b:	00 02                	add    %al,(%rdx)
 61d:	01 1f                	add    %ebx,(%rdi)
 61f:	02 0f                	add    (%rdi),%cl
 621:	02 34 01             	add    (%rcx,%rax,1),%dh
 624:	00 00                	add    %al,(%rax)
 626:	01 34 01             	add    %esi,(%rcx,%rax,1)
 629:	00 00                	add    %al,(%rax)
 62b:	01 00                	add    %eax,(%rax)
 62d:	09 02                	or     %eax,(%rdx)
 62f:	8d 05 10 00 00 00    	lea    0x10(%rip),%eax        # 645 <code_segment+0x63d>
 635:	00 00                	add    %al,(%rax)
 637:	15 21 02 01 00       	adc    $0x10221,%eax
 63c:	01 01                	add    %eax,(%rcx)
 63e:	00 09                	add    %cl,(%rcx)
 640:	02 97 05 10 00 00    	add    0x1005(%rdi),%dl
 646:	00 00                	add    %al,(%rax)
 648:	00 1a                	add    %bl,(%rdx)
 64a:	21 02                	and    %eax,(%rdx)
 64c:	01 00                	add    %eax,(%rax)
 64e:	01 01                	add    %eax,(%rcx)

Disassembly of section .debug_line_str:

0000000000000000 <.debug_line_str>:
   0:	2f                   	(bad)
   1:	68 6f 6d 65 2f       	push   $0x2f656d6f
   6:	61                   	(bad)
   7:	64 69 74 68 79 61 2f 	imul   $0x6f442f61,%fs:0x79(%rax,%rbp,2),%esi
   e:	44 6f 
  10:	63 75 6d             	movsxd 0x6d(%rbp),%esi
  13:	65 6e                	outsb  %gs:(%rsi),(%dx)
  15:	74 73                	je     8a <code_segment+0x82>
  17:	2f                   	(bad)
  18:	41                   	rex.B
  19:	64 69 4f 53 2f 41 64 	imul   $0x6964412f,%fs:0x53(%rdi),%ecx
  20:	69 
  21:	4f 53                	rex.WRXB push %r11
  23:	2f                   	(bad)
  24:	6b 65 72 6e          	imul   $0x6e,0x72(%rbp),%esp
  28:	65 6c                	gs insb (%dx),%es:(%rdi)
  2a:	00 61 72             	add    %ah,0x72(%rcx)
  2d:	63 68 2f             	movsxd 0x2f(%rax),%ebp
  30:	78 38                	js     6a <code_segment+0x62>
  32:	36 5f                	ss pop %rdi
  34:	36 34 00             	ss xor $0x0,%al
  37:	63 72 74             	movsxd 0x74(%rdx),%esi
  3a:	69 2e 53 00 62 6f    	imul   $0x6f620053,(%rsi),%ebp
  40:	6f                   	outsl  %ds:(%rsi),(%dx)
  41:	74 2e                	je     71 <code_segment+0x69>
  43:	53                   	push   %rbx
  44:	00 61 72             	add    %ah,0x72(%rcx)
  47:	63 68 2f             	movsxd 0x2f(%rax),%ebp
  4a:	78 38                	js     84 <code_segment+0x7c>
  4c:	36 5f                	ss pop %rdi
  4e:	36 34 2f             	ss xor $0x2f,%al
  51:	74 74                	je     c7 <code_segment+0xbf>
  53:	79 2e                	jns    83 <code_segment+0x7b>
  55:	63 00                	movsxd (%rax),%eax
  57:	2f                   	(bad)
  58:	75 73                	jne    cd <code_segment+0xc5>
  5a:	72 2f                	jb     8b <code_segment+0x83>
  5c:	6c                   	insb   (%dx),%es:(%rdi)
  5d:	69 62 2f 67 63 63 2f 	imul   $0x2f636367,0x2f(%rdx),%esp
  64:	78 38                	js     9e <code_segment+0x96>
  66:	36 5f                	ss pop %rdi
  68:	36 34 2d             	ss xor $0x2d,%al
  6b:	65 6c                	gs insb (%dx),%es:(%rdi)
  6d:	66 2f                	data16 (bad)
  6f:	31 34 2e             	xor    %esi,(%rsi,%rbp,1)
  72:	32 2e                	xor    (%rsi),%ch
  74:	30 2f                	xor    %ch,(%rdi)
  76:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%rsi),%ebp
  7d:	00 2f                	add    %ch,(%rdi)
  7f:	68 6f 6d 65 2f       	push   $0x2f656d6f
  84:	61                   	(bad)
  85:	64 69 74 68 79 61 2f 	imul   $0x6f442f61,%fs:0x79(%rax,%rbp,2),%esi
  8c:	44 6f 
  8e:	63 75 6d             	movsxd 0x6d(%rbp),%esi
  91:	65 6e                	outsb  %gs:(%rsi),(%dx)
  93:	74 73                	je     108 <code_segment+0x100>
  95:	2f                   	(bad)
  96:	41                   	rex.B
  97:	64 69 4f 53 2f 41 64 	imul   $0x6964412f,%fs:0x53(%rdi),%ecx
  9e:	69 
  9f:	4f 53                	rex.WRXB push %r11
  a1:	2f                   	(bad)
  a2:	73 79                	jae    11d <code_segment+0x115>
  a4:	73 72                	jae    118 <code_segment+0x110>
  a6:	6f                   	outsl  %ds:(%rsi),(%dx)
  a7:	6f                   	outsl  %ds:(%rsi),(%dx)
  a8:	74 2f                	je     d9 <code_segment+0xd1>
  aa:	75 73                	jne    11f <code_segment+0x117>
  ac:	72 2f                	jb     dd <code_segment+0xd5>
  ae:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%rsi),%ebp
  b5:	00 76 67             	add    %dh,0x67(%rsi)
  b8:	61                   	(bad)
  b9:	2e 68 00 73 74 64    	cs push $0x64747300
  bf:	64 65 66 2e 68 00 73 	fs gs cs pushw $0x7300
  c6:	74 64                	je     12c <code_segment+0x124>
  c8:	69 6e 74 2d 67 63 63 	imul   $0x6363672d,0x74(%rsi),%ebp
  cf:	2e 68 00 73 74 72    	cs push $0x72747300
  d5:	69 6e 67 2e 68 00 6b 	imul   $0x6b00682e,0x67(%rsi),%ebp
  dc:	65 72 6e             	gs jb  14d <code_segment+0x145>
  df:	65 6c                	gs insb (%dx),%es:(%rdi)
  e1:	2f                   	(bad)
  e2:	6b 65 72 6e          	imul   $0x6e,0x72(%rbp),%esp
  e6:	65 6c                	gs insb (%dx),%es:(%rdi)
  e8:	2e 63 00             	cs movsxd (%rax),%eax
  eb:	62                   	(bad)
  ec:	6f                   	outsl  %ds:(%rsi),(%dx)
  ed:	6f                   	outsl  %ds:(%rsi),(%dx)
  ee:	74 36                	je     126 <code_segment+0x11e>
  f0:	34 2e                	xor    $0x2e,%al
  f2:	53                   	push   %rbx
  f3:	00 73 74             	add    %dh,0x74(%rbx)
  f6:	72 69                	jb     161 <code_segment+0x159>
  f8:	6e                   	outsb  %ds:(%rsi),(%dx)
  f9:	67 2f                	addr32 (bad)
  fb:	73 74                	jae    171 <code_segment+0x169>
  fd:	72 6c                	jb     16b <code_segment+0x163>
  ff:	65 6e                	outsb  %gs:(%rsi),(%dx)
 101:	2e 63 00             	cs movsxd (%rax),%eax
 104:	2f                   	(bad)
 105:	68 6f 6d 65 2f       	push   $0x2f656d6f
 10a:	61                   	(bad)
 10b:	64 69 74 68 79 61 2f 	imul   $0x6f442f61,%fs:0x79(%rax,%rbp,2),%esi
 112:	44 6f 
 114:	63 75 6d             	movsxd 0x6d(%rbp),%esi
 117:	65 6e                	outsb  %gs:(%rsi),(%dx)
 119:	74 73                	je     18e <code_segment+0x186>
 11b:	2f                   	(bad)
 11c:	41                   	rex.B
 11d:	64 69 4f 53 2f 41 64 	imul   $0x6964412f,%fs:0x53(%rdi),%ecx
 124:	69 
 125:	4f 53                	rex.WRXB push %r11
 127:	2f                   	(bad)
 128:	6c                   	insb   (%dx),%es:(%rdi)
 129:	69 62 63 00 73 74 72 	imul   $0x72747300,0x63(%rdx),%esp
 130:	69 6e 67 00 63 72 74 	imul   $0x74726300,0x67(%rsi),%ebp
 137:	6e                   	outsb  %ds:(%rsi),(%dx)
 138:	2e 53                	cs push %rbx
	...

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
   0:	1f                   	(bad)
   1:	00 00                	add    %al,(%rax)
   3:	00 05 00 01 08 00    	add    %al,0x80100(%rip)        # 80109 <code_segment+0x80101>
   9:	00 00                	add    %al,(%rax)
   b:	00 01                	add    %al,(%rcx)
   d:	00 00                	add    %al,(%rax)
   f:	00 00                	add    %al,(%rax)
  11:	0c 00                	or     $0x0,%al
  13:	00 00                	add    %al,(%rax)
  15:	00 00                	add    %al,(%rax)
  17:	00 00                	add    %al,(%rax)
  19:	13 00                	adc    (%rax),%eax
  1b:	00 00                	add    %al,(%rax)
  1d:	3e 00 00             	ds add %al,(%rax)
  20:	00 01                	add    %al,(%rcx)
  22:	80 36 00             	xorb   $0x0,(%rsi)
  25:	00 00                	add    %al,(%rax)
  27:	05 00 01 08 12       	add    $0x12080100,%eax
  2c:	00 00                	add    %al,(%rax)
  2e:	00 01                	add    %al,(%rcx)
  30:	60                   	(bad)
  31:	00 00                	add    %al,(%rax)
  33:	00 3d 01 10 00 00    	add    %bh,0x1001(%rip)        # 103a <code_segment+0x1032>
  39:	00 00                	add    %al,(%rax)
  3b:	00 82 02 4a 00 00    	add    %al,0x4a02(%rdx)
  41:	00 13                	add    %dl,(%rbx)
  43:	00 00                	add    %al,(%rax)
  45:	00 3e                	add    %bh,(%rsi)
  47:	00 00                	add    %al,(%rax)
  49:	00 01                	add    %al,(%rcx)
  4b:	80 02 5d             	addb   $0x5d,(%rdx)
  4e:	00 00                	add    %al,(%rax)
  50:	00 38                	add    %bh,(%rax)
  52:	3d 01 10 00 00       	cmp    $0x1001,%eax
  57:	00 00                	add    %al,(%rax)
  59:	00 24 03             	add    %ah,(%rbx,%rax,1)
  5c:	00 75 07             	add    %dh,0x7(%rbp)
  5f:	00 00                	add    %al,(%rax)
  61:	05 00 01 08 3a       	add    $0x3a080100,%eax
  66:	00 00                	add    %al,(%rax)
  68:	00 21                	add    %ah,(%rcx)
  6a:	69 03 00 00 1d 45    	imul   $0x451d0000,(%rbx),%eax
  70:	00 00                	add    %al,(%rax)
  72:	00 00                	add    %al,(%rax)
  74:	00 00                	add    %al,(%rax)
  76:	00 40 02             	add    %al,0x2(%rax)
  79:	10 00                	adc    %al,(%rax)
  7b:	00 00                	add    %al,(%rax)
  7d:	00 00                	add    %al,(%rax)
  7f:	87 02                	xchg   %eax,(%rdx)
  81:	00 00                	add    %al,(%rax)
  83:	00 00                	add    %al,(%rax)
  85:	00 00                	add    %al,(%rax)
  87:	ec                   	in     (%dx),%al
  88:	00 00                	add    %al,(%rax)
  8a:	00 03                	add    %al,(%rbx)
  8c:	08 05 a8 02 00 00    	or     %al,0x2a8(%rip)        # 33a <code_segment+0x332>
  92:	0d 97 00 00 00       	or     $0x97,%eax
  97:	03 d6                	add    %esi,%edx
  99:	17                   	(bad)
  9a:	46 00 00             	rex.RX add %r8b,(%rax)
  9d:	00 0e                	add    %cl,(%rsi)
  9f:	35 00 00 00 03       	xor    $0x3000000,%eax
  a4:	08 07                	or     %al,(%rdi)
  a6:	73 01                	jae    a9 <code_segment+0xa1>
  a8:	00 00                	add    %al,(%rax)
  aa:	22 04 05 69 6e 74 00 	and    0x746e69(,%rax,1),%al
  b1:	03 08                	add    (%rax),%ecx
  b3:	05 a3 02 00 00       	add    $0x2a3,%eax
  b8:	03 10                	add    (%rax),%edx
  ba:	04 13                	add    $0x13,%al
  bc:	03 00                	add    (%rax),%eax
  be:	00 03                	add    %al,(%rbx)
  c0:	01 06                	add    %eax,(%rsi)
  c2:	57                   	push   %rdi
  c3:	01 00                	add    %eax,(%rax)
  c5:	00 03                	add    %al,(%rbx)
  c7:	02 05 bb 02 00 00    	add    0x2bb(%rip),%al        # 388 <code_segment+0x380>
  cd:	0d 2b 02 00 00       	or     $0x22b,%eax
  d2:	04 2e                	add    $0x2e,%al
  d4:	18 7c 00 00          	sbb    %bh,0x0(%rax,%rax,1)
  d8:	00 03                	add    %al,(%rbx)
  da:	01 08                	add    %ecx,(%rax)
  dc:	55                   	push   %rbp
  dd:	01 00                	add    %eax,(%rax)
  df:	00 0d c5 02 00 00    	add    %cl,0x2c5(%rip)        # 3aa <code_segment+0x3a2>
  e5:	04 31                	add    $0x31,%al
  e7:	19 8f 00 00 00 03    	sbb    %ecx,0x3000000(%rdi)
  ed:	02 07                	add    (%rdi),%al
  ef:	85 01                	test   %eax,(%rcx)
  f1:	00 00                	add    %al,(%rax)
  f3:	03 04 07             	add    (%rdi,%rax,1),%eax
  f6:	78 01                	js     f9 <code_segment+0xf1>
  f8:	00 00                	add    %al,(%rax)
  fa:	23 eb                	and    %ebx,%ebp
  fc:	00 00                	add    %al,(%rax)
  fe:	00 07                	add    %al,(%rdi)
 100:	04 96                	add    $0x96,%al
 102:	00 00                	add    %al,(%rax)
 104:	00 02                	add    %al,(%rdx)
 106:	06                   	(bad)
 107:	06                   	(bad)
 108:	10 01                	adc    %al,(%rcx)
 10a:	00 00                	add    %al,(%rax)
 10c:	02 49 03             	add    0x3(%rcx),%cl
 10f:	00 00                	add    %al,(%rax)
 111:	00 02                	add    %al,(%rdx)
 113:	e4 01                	in     $0x1,%al
 115:	00 00                	add    %al,(%rax)
 117:	01 02                	add    %eax,(%rdx)
 119:	1f                   	(bad)
 11a:	03 00                	add    (%rax),%eax
 11c:	00 02                	add    %al,(%rdx)
 11e:	02 94 02 00 00 03 02 	add    0x2030000(%rdx,%rax,1),%dl
 125:	98                   	cwtl
 126:	01 00                	add    %eax,(%rax)
 128:	00 04 02             	add    %al,(%rdx,%rax,1)
 12b:	ae                   	scas   %es:(%rdi),%al
 12c:	00 00                	add    %al,(%rax)
 12e:	00 05 02 33 02 00    	add    %al,0x23302(%rip)        # 23436 <code_segment+0x2342e>
 134:	00 06                	add    %al,(%rsi)
 136:	02 1c 01             	add    (%rcx,%rax,1),%bl
 139:	00 00                	add    %al,(%rax)
 13b:	07                   	(bad)
 13c:	02 07                	add    (%rdi),%al
 13e:	02 00                	add    (%rax),%al
 140:	00 08                	add    %cl,(%rax)
 142:	02 b1 01 00 00 09    	add    0x9000001(%rcx),%dh
 148:	02 ca                	add    %dl,%cl
 14a:	00 00                	add    %al,(%rax)
 14c:	00 0a                	add    %cl,(%rdx)
 14e:	02 43 02             	add    0x2(%rbx),%al
 151:	00 00                	add    %al,(%rax)
 153:	0b 02                	or     (%rdx),%eax
 155:	f3 01 00             	repz add %eax,(%rax)
 158:	00 0c 02             	add    %cl,(%rdx,%rax,1)
 15b:	58                   	pop    %rax
 15c:	02 00                	add    (%rax),%al
 15e:	00 0d 02 de 02 00    	add    %cl,0x2de02(%rip)        # 2df66 <code_segment+0x2df5e>
 164:	00 0e                	add    %cl,(%rsi)
 166:	02 70 02             	add    0x2(%rax),%dh
 169:	00 00                	add    %al,(%rax)
 16b:	0f 00 14 b1          	lldt   (%rcx,%rsi,4)
 16f:	02 00                	add    (%rax),%al
 171:	00 0a                	add    %cl,(%rdx)
 173:	41 00 00             	add    %al,(%r8)
 176:	00 50 14             	add    %dl,0x14(%rax)
 179:	1b 02                	sbb    (%rdx),%eax
 17b:	00 00                	add    %al,(%rax)
 17d:	0c 41                	or     $0x41,%al
 17f:	00 00                	add    %al,(%rax)
 181:	00 19                	add    %bl,(%rcx)
 183:	15 e0 00 00 00       	adc    $0xe0,%eax
 188:	0e                   	(bad)
 189:	18 36                	sbb    %dh,(%rsi)
 18b:	01 00                	add    %eax,(%rax)
 18d:	00 16                	add    %dl,(%rsi)
 18f:	83 00 00             	addl   $0x0,(%rax)
 192:	00 0e                	add    %cl,(%rsi)
 194:	31 01                	xor    %eax,(%rcx)
 196:	00 00                	add    %al,(%rax)
 198:	08 06                	or     %al,(%rsi)
 19a:	03 00                	add    (%rax),%eax
 19c:	00 11                	add    %dl,(%rcx)
 19e:	0f 35                	sysexitl
 1a0:	00 00                	add    %al,(%rax)
 1a2:	00 09                	add    %cl,(%rcx)
 1a4:	03 68 70             	add    0x70(%rax),%ebp
 1a7:	10 00                	adc    %al,(%rax)
 1a9:	00 00                	add    %al,(%rax)
 1ab:	00 00                	add    %al,(%rax)
 1ad:	08 fa                	or     %bh,%dl
 1af:	00 00                	add    %al,(%rax)
 1b1:	00 12                	add    %dl,(%rdx)
 1b3:	0f 35                	sysexitl
 1b5:	00 00                	add    %al,(%rax)
 1b7:	00 09                	add    %cl,(%rcx)
 1b9:	03 60 70             	add    0x70(%rax),%esp
 1bc:	10 00                	adc    %al,(%rax)
 1be:	00 00                	add    %al,(%rax)
 1c0:	00 00                	add    %al,(%rax)
 1c2:	08 c6                	or     %al,%dh
 1c4:	01 00                	add    %eax,(%rax)
 1c6:	00 13                	add    %dl,(%rbx)
 1c8:	10 70 00             	adc    %dh,0x0(%rax)
 1cb:	00 00                	add    %al,(%rax)
 1cd:	09 03                	or     %eax,(%rbx)
 1cf:	58                   	pop    %rax
 1d0:	70 10                	jo     1e2 <code_segment+0x1da>
 1d2:	00 00                	add    %al,(%rax)
 1d4:	00 00                	add    %al,(%rax)
 1d6:	00 08                	add    %cl,(%rax)
 1d8:	9e                   	sahf
 1d9:	00 00                	add    %al,(%rax)
 1db:	00 15 12 31 01 00    	add    %dl,0x13112(%rip)        # 132f3 <code_segment+0x132eb>
 1e1:	00 09                	add    %cl,(%rcx)
 1e3:	03 50 70             	add    0x70(%rax),%edx
 1e6:	10 00                	adc    %al,(%rax)
 1e8:	00 00                	add    %al,(%rax)
 1ea:	00 00                	add    %al,(%rax)
 1ec:	24 15                	and    $0x15,%al
 1ee:	01 00                	add    %eax,(%rax)
 1f0:	00 05 10 08 35 00    	add    %al,0x350810(%rip)        # 350a06 <terminal_row+0x24999e>
 1f6:	00 00                	add    %al,(%rax)
 1f8:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
 1f9:	01 00                	add    %eax,(%rax)
 1fb:	00 25 a5 01 00 00    	add    %ah,0x1a5(%rip)        # 3a6 <code_segment+0x39e>
 201:	00 16                	add    %dl,(%rsi)
 203:	b1 01                	mov    $0x1,%cl
 205:	00 00                	add    %al,(%rax)
 207:	03 01                	add    (%rcx),%eax
 209:	06                   	(bad)
 20a:	5e                   	pop    %rsi
 20b:	01 00                	add    %eax,(%rax)
 20d:	00 0e                	add    %cl,(%rsi)
 20f:	aa                   	stos   %al,%es:(%rdi)
 210:	01 00                	add    %eax,(%rax)
 212:	00 09                	add    %cl,(%rcx)
 214:	71 00                	jno    216 <code_segment+0x20e>
 216:	00 00                	add    %al,(%rax)
 218:	6c                   	insb   (%dx),%es:(%rdi)
 219:	90                   	nop
 21a:	04 10                	add    $0x10,%al
 21c:	00 00                	add    %al,(%rax)
 21e:	00 00                	add    %al,(%rax)
 220:	00 37                	add    %dh,(%rdi)
 222:	00 00                	add    %al,(%rax)
 224:	00 00                	add    %al,(%rax)
 226:	00 00                	add    %al,(%rax)
 228:	00 01                	add    %al,(%rcx)
 22a:	9c                   	pushf
 22b:	6a 02                	push   $0x2
 22d:	00 00                	add    %al,(%rax)
 22f:	17                   	(bad)
 230:	7f 00                	jg     232 <code_segment+0x22a>
 232:	00 00                	add    %al,(%rax)
 234:	6c                   	insb   (%dx),%es:(%rdi)
 235:	28 a5 01 00 00 12    	sub    %ah,0x12000001(%rbp)
 23b:	00 00                	add    %al,(%rax)
 23d:	00 0c 00             	add    %cl,(%rax,%rax,1)
 240:	00 00                	add    %al,(%rax)
 242:	26 6a 02             	es push $0x2
 245:	00 00                	add    %al,(%rax)
 247:	a1 04 10 00 00 00 00 	movabs 0x1004,%eax
 24e:	00 00 
 250:	a1 04 10 00 00 00 00 	movabs 0x2000000000001004,%eax
 257:	00 20 
 259:	00 00                	add    %al,(%rax)
 25b:	00 00                	add    %al,(%rax)
 25d:	00 00                	add    %al,(%rax)
 25f:	00 01                	add    %al,(%rcx)
 261:	6d                   	insl   (%dx),%es:(%rdi)
 262:	05 55 02 00 00       	add    $0x255,%eax
 267:	01 74 02 00          	add    %esi,0x0(%rdx,%rax,1)
 26b:	00 2f                	add    %ch,(%rdi)
 26d:	00 00                	add    %al,(%rax)
 26f:	00 2b                	add    %ch,(%rbx)
 271:	00 00                	add    %al,(%rax)
 273:	00 01                	add    %al,(%rcx)
 275:	80 02 00             	addb   $0x0,(%rdx)
 278:	00 43 00             	add    %al,0x0(%rbx)
 27b:	00 00                	add    %al,(%rax)
 27d:	41 00 00             	add    %al,(%r8)
 280:	00 0f                	add    %cl,(%rdi)
 282:	8c 02                	mov    %es,(%rdx)
 284:	00 00                	add    %al,(%rax)
 286:	a1 04 10 00 00 00 00 	movabs 0x2000000000001004,%eax
 28d:	00 20 
 28f:	00 00                	add    %al,(%rax)
 291:	00 00                	add    %al,(%rax)
 293:	00 00                	add    %al,(%rax)
 295:	00 04 8d 02 00 00 51 	add    %al,0x51000002(,%rcx,4)
 29c:	00 00                	add    %al,(%rax)
 29e:	00 4b 00             	add    %cl,0x0(%rbx)
 2a1:	00 00                	add    %al,(%rax)
 2a3:	18 bc 04 10 00 00 00 	sbb    %bh,0x10(%rsp,%rax,1)
 2aa:	00 00                	add    %al,(%rax)
 2ac:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
 2ad:	02 00                	add    (%rax),%al
 2af:	00 00                	add    %al,(%rax)
 2b1:	00 19                	add    %bl,(%rcx)
 2b3:	a1 04 10 00 00 00 00 	movabs 0x8f00000000001004,%eax
 2ba:	00 8f 
 2bc:	01 00                	add    %eax,(%rax)
 2be:	00 1a                	add    %bl,(%rdx)
 2c0:	01 55 02             	add    %edx,0x2(%rbp)
 2c3:	73 00                	jae    2c5 <code_segment+0x2bd>
 2c5:	00 00                	add    %al,(%rax)
 2c7:	10 d5                	adc    %dl,%ch
 2c9:	01 00                	add    %eax,(%rax)
 2cb:	00 64 a5 02          	add    %ah,0x2(%rbp,%riz,4)
 2cf:	00 00                	add    %al,(%rax)
 2d1:	05 f5 00 00 00       	add    $0xf5,%eax
 2d6:	01 64 22 a5          	add    %esp,-0x5b(%rdx,%riz,1)
 2da:	01 00                	add    %eax,(%rax)
 2dc:	00 05 26 02 00 00    	add    %al,0x226(%rip)        # 508 <code_segment+0x500>
 2e2:	01 64 2f 35          	add    %esp,0x35(%rdi,%rbp,1)
 2e6:	00 00                	add    %al,(%rax)
 2e8:	00 1b                	add    %bl,(%rbx)
 2ea:	1c 69                	sbb    $0x69,%al
 2ec:	00 66 10             	add    %ah,0x10(%rsi)
 2ef:	35 00 00 00 18       	xor    $0x18000000,%eax
 2f4:	7d 04                	jge    2fa <code_segment+0x2f2>
 2f6:	10 00                	adc    %al,(%rax)
 2f8:	00 00                	add    %al,(%rax)
 2fa:	00 00                	add    %al,(%rax)
 2fc:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
 2fd:	02 00                	add    (%rax),%al
 2ff:	00 00                	add    %al,(%rax)
 301:	00 10                	add    %dl,(%rax)
 303:	86 00                	xchg   %al,(%rax)
 305:	00 00                	add    %al,(%rax)
 307:	4d cf                	rex.WRB iretq
 309:	02 00                	add    (%rax),%al
 30b:	00 11                	add    %dl,(%rcx)
 30d:	63 00                	movsxd (%rax),%eax
 30f:	4d 1c aa             	rex.WRB sbb $0xaa,%al
 312:	01 00                	add    %eax,(%rax)
 314:	00 06                	add    %al,(%rsi)
 316:	50                   	push   %rax
 317:	01 00                	add    %eax,(%rax)
 319:	00 4e 09             	add    %cl,0x9(%rsi)
 31c:	4d 00 00             	rex.WRB add %r8b,(%r8)
 31f:	00 06                	add    %al,(%rsi)
 321:	c0 00 00             	rolb   $0x0,(%rax)
 324:	00 4f 13             	add    %cl,0x13(%rdi)
 327:	7c 00                	jl     329 <code_segment+0x321>
 329:	00 00                	add    %al,(%rax)
 32b:	00 27                	add    %ah,(%rdi)
 32d:	3b 01                	cmp    (%rcx),%eax
 32f:	00 00                	add    %al,(%rax)
 331:	01 43 06             	add    %eax,0x6(%rbx)
 334:	01 f3                	add    %esi,%ebx
 336:	02 00                	add    (%rax),%al
 338:	00 06                	add    %al,(%rsi)
 33a:	64 00 00             	add    %al,%fs:(%rax)
 33d:	00 44 10 31          	add    %al,0x31(%rax,%rdx,1)
 341:	01 00                	add    %eax,(%rax)
 343:	00 1b                	add    %bl,(%rbx)
 345:	1c 78                	sbb    $0x78,%al
 347:	00 47 0d             	add    %al,0xd(%rdi)
 34a:	4d 00 00             	rex.WRB add %r8b,(%r8)
 34d:	00 00                	add    %al,(%rax)
 34f:	00 09                	add    %cl,(%rcx)
 351:	ce                   	(bad)
 352:	02 00                	add    (%rax),%al
 354:	00 35 e0 02 10 00    	add    %dh,0x1002e0(%rip)        # 10063a <_fini+0xab>
 35a:	00 00                	add    %al,(%rax)
 35c:	00 00                	add    %al,(%rax)
 35e:	65 00 00             	add    %al,%gs:(%rax)
 361:	00 00                	add    %al,(%rax)
 363:	00 00                	add    %al,(%rax)
 365:	00 01                	add    %al,(%rcx)
 367:	9c                   	pushf
 368:	6e                   	outsb  %ds:(%rsi),(%dx)
 369:	03 00                	add    (%rax),%eax
 36b:	00 1d 50 01 00 00    	add    %bl,0x150(%rip)        # 4c1 <code_segment+0x4b9>
 371:	35 1a 4d 00 00       	xor    $0x4d1a,%eax
 376:	00 01                	add    %al,(%rcx)
 378:	55                   	push   %rbp
 379:	15 64 00 00 00       	adc    $0x64,%eax
 37e:	36 10 31             	ss adc %dh,(%rcx)
 381:	01 00                	add    %eax,(%rax)
 383:	00 1e                	add    %bl,(%rsi)
 385:	e0 02                	loopne 389 <code_segment+0x381>
 387:	10 00                	adc    %al,(%rax)
 389:	00 00                	add    %al,(%rax)
 38b:	00 00                	add    %al,(%rax)
 38d:	64 00 00             	add    %al,%fs:(%rax)
 390:	00 00                	add    %al,(%rax)
 392:	00 00                	add    %al,(%rax)
 394:	00 0a                	add    %cl,(%rdx)
 396:	79 00                	jns    398 <code_segment+0x390>
 398:	39 0d 4d 00 00 00    	cmp    %ecx,0x4d(%rip)        # 3eb <code_segment+0x3e3>
 39e:	7b 00                	jnp    3a0 <code_segment+0x398>
 3a0:	00 00                	add    %al,(%rax)
 3a2:	75 00                	jne    3a4 <code_segment+0x39c>
 3a4:	00 00                	add    %al,(%rax)
 3a6:	1e                   	(bad)
 3a7:	00 03                	add    %al,(%rbx)
 3a9:	10 00                	adc    %al,(%rax)
 3ab:	00 00                	add    %al,(%rax)
 3ad:	00 00                	add    %al,(%rax)
 3af:	33 00                	xor    (%rax),%eax
 3b1:	00 00                	add    %al,(%rax)
 3b3:	00 00                	add    %al,(%rax)
 3b5:	00 00                	add    %al,(%rax)
 3b7:	0a 78 00             	or     0x0(%rax),%bh
 3ba:	3a 11                	cmp    (%rcx),%dl
 3bc:	4d 00 00             	rex.WRB add %r8b,(%r8)
 3bf:	00 99 00 00 00 93    	add    %bl,-0x6d000000(%rcx)
 3c5:	00 00                	add    %al,(%rax)
 3c7:	00 00                	add    %al,(%rax)
 3c9:	00 00                	add    %al,(%rax)
 3cb:	10 2f                	adc    %ch,(%rdi)
 3cd:	03 00                	add    (%rax),%eax
 3cf:	00 2f                	add    %ch,(%rdi)
 3d1:	ae                   	scas   %es:(%rdi),%al
 3d2:	03 00                	add    (%rax),%eax
 3d4:	00 05 c0 00 00 00    	add    %al,0xc0(%rip)        # 49a <code_segment+0x492>
 3da:	01 2f                	add    %ebp,(%rdi)
 3dc:	28 7c 00 00          	sub    %bh,0x0(%rax,%rax,1)
 3e0:	00 05 59 03 00 00    	add    %al,0x359(%rip)        # 73f <code_segment+0x737>
 3e6:	01 2f                	add    %ebp,(%rdi)
 3e8:	3b 70 00             	cmp    0x0(%rax),%esi
 3eb:	00 00                	add    %al,(%rax)
 3ed:	11 78 00             	adc    %edi,0x0(%rax)
 3f0:	2f                   	(bad)
 3f1:	53                   	push   %rbx
 3f2:	35 00 00 00 11       	xor    $0x11000000,%eax
 3f7:	79 00                	jns    3f9 <code_segment+0x3f1>
 3f9:	2f                   	(bad)
 3fa:	5d                   	pop    %rbp
 3fb:	35 00 00 00 06       	xor    $0x6000000,%eax
 400:	43 03 00             	rex.XB add (%r8),%eax
 403:	00 30                	add    %dh,(%rax)
 405:	12 41 00             	adc    0x0(%rcx),%al
 408:	00 00                	add    %al,(%rax)
 40a:	00 09                	add    %cl,(%rcx)
 40c:	f4                   	hlt
 40d:	02 00                	add    (%rax),%al
 40f:	00 2a                	add    %ch,(%rdx)
 411:	b0 02                	mov    $0x2,%al
 413:	10 00                	adc    %al,(%rax)
 415:	00 00                	add    %al,(%rax)
 417:	00 00                	add    %al,(%rax)
 419:	0d 00 00 00 00       	or     $0x0,%eax
 41e:	00 00                	add    %al,(%rax)
 420:	00 01                	add    %al,(%rcx)
 422:	9c                   	pushf
 423:	27                   	(bad)
 424:	04 00                	add    $0x0,%al
 426:	00 1d 0a 01 00 00    	add    %bl,0x10a(%rip)        # 536 <code_segment+0x52e>
 42c:	2a 27                	sub    (%rdi),%ah
 42e:	9d                   	popf
 42f:	00 00                	add    %al,(%rax)
 431:	00 01                	add    %al,(%rcx)
 433:	55                   	push   %rbp
 434:	17                   	(bad)
 435:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
 436:	01 00                	add    %eax,(%rax)
 438:	00 2a                	add    %ch,(%rdx)
 43a:	42 9d                	rex.X popf
 43c:	00 00                	add    %al,(%rax)
 43e:	00 de                	add    %bl,%dh
 440:	00 00                	add    %al,(%rax)
 442:	00 da                	add    %bl,%dl
 444:	00 00                	add    %al,(%rax)
 446:	00 28                	add    %ch,(%rax)
 448:	ab                   	stos   %eax,%es:(%rdi)
 449:	04 00                	add    $0x0,%al
 44b:	00 b0 02 10 00 00    	add    %dh,0x1002(%rax)
 451:	00 00                	add    %al,(%rax)
 453:	00 02                	add    %al,(%rdx)
 455:	b0 02                	mov    $0x2,%al
 457:	10 00                	adc    %al,(%rax)
 459:	00 00                	add    %al,(%rax)
 45b:	00 00                	add    %al,(%rax)
 45d:	0c 00                	or     $0x0,%al
 45f:	00 00                	add    %al,(%rax)
 461:	00 00                	add    %al,(%rax)
 463:	00 00                	add    %al,(%rax)
 465:	01 2b                	add    %ebp,(%rbx)
 467:	16                   	(bad)
 468:	01 ba 04 00 00 ee    	add    %edi,-0x11fffffc(%rdx)
 46e:	00 00                	add    %al,(%rax)
 470:	00 ec                	add    %ch,%ah
 472:	00 00                	add    %al,(%rax)
 474:	00 01                	add    %al,(%rcx)
 476:	c6 04 00 00          	movb   $0x0,(%rax,%rax,1)
 47a:	f6 00 00             	testb  $0x0,(%rax)
 47d:	00 f4                	add    %dh,%ah
 47f:	00 00                	add    %al,(%rax)
 481:	00 00                	add    %al,(%rax)
 483:	00 09                	add    %cl,(%rcx)
 485:	80 02 00             	addb   $0x0,(%rdx)
 488:	00 18                	add    %bl,(%rax)
 48a:	40 02 10             	rex add (%rax),%dl
 48d:	00 00                	add    %al,(%rax)
 48f:	00 00                	add    %al,(%rax)
 491:	00 6e 00             	add    %ch,0x0(%rsi)
 494:	00 00                	add    %al,(%rax)
 496:	00 00                	add    %al,(%rax)
 498:	00 00                	add    %al,(%rax)
 49a:	01 9c 83 04 00 00 07 	add    %ebx,0x7000004(%rbx,%rax,4)
 4a1:	2d 00 00 00 0a       	sub    $0xa000000,%eax
 4a6:	79 00                	jns    4a8 <code_segment+0x4a0>
 4a8:	21 10                	and    %edx,(%rax)
 4aa:	35 00 00 00 fe       	xor    $0xfe000000,%eax
 4af:	00 00                	add    %al,(%rax)
 4b1:	00 fc                	add    %bh,%ah
 4b3:	00 00                	add    %al,(%rax)
 4b5:	00 07                	add    %al,(%rdi)
 4b7:	3a 00                	cmp    (%rax),%al
 4b9:	00 00                	add    %al,(%rax)
 4bb:	0a 78 00             	or     0x0(%rax),%bh
 4be:	22 14 35 00 00 00 07 	and    0x7000000(,%rsi,1),%dl
 4c5:	01 00                	add    %eax,(%rax)
 4c7:	00 05 01 00 00 07    	add    %al,0x7000001(%rip)        # 70004ce <terminal_row+0x6ef9466>
 4cd:	47 00 00             	rex.RXB add %r8b,(%r8)
 4d0:	00 06                	add    %al,(%rsi)
 4d2:	43 03 00             	rex.XB add (%r8),%eax
 4d5:	00 23                	add    %ah,(%rbx)
 4d7:	1a 41 00             	sbb    0x0(%rcx),%al
 4da:	00 00                	add    %al,(%rax)
 4dc:	00 00                	add    %al,(%rax)
 4de:	00 00                	add    %al,(%rax)
 4e0:	1f                   	(bad)
 4e1:	31 01                	xor    %eax,(%rcx)
 4e3:	00 00                	add    %al,(%rax)
 4e5:	1d 18 83 00 00       	sbb    $0x8318,%eax
 4ea:	00 ab 04 00 00 05    	add    %ch,0x5000004(%rbx)
 4f0:	c0 00 00             	rolb   $0x0,(%rax)
 4f3:	00 02                	add    %al,(%rdx)
 4f5:	1d 30 7c 00 00       	sbb    $0x7c30,%eax
 4fa:	00 05 59 03 00 00    	add    %al,0x359(%rip)        # 859 <code_segment+0x851>
 500:	02 1d 43 70 00 00    	add    0x7043(%rip),%bl        # 7549 <code_segment+0x7541>
 506:	00 00                	add    %al,(%rax)
 508:	1f                   	(bad)
 509:	63 01                	movsxd (%rcx),%eax
 50b:	00 00                	add    %al,(%rax)
 50d:	19 17                	sbb    %edx,(%rdi)
 50f:	70 00                	jo     511 <code_segment+0x509>
 511:	00 00                	add    %al,(%rax)
 513:	d3 04 00             	roll   %cl,(%rax,%rax,1)
 516:	00 05 0a 01 00 00    	add    %al,0x10a(%rip)        # 626 <code_segment+0x61e>
 51c:	02 19                	add    (%rcx),%bl
 51e:	36 9d                	ss popf
 520:	00 00                	add    %al,(%rax)
 522:	00 05 a6 01 00 00    	add    %al,0x1a6(%rip)        # 6ce <code_segment+0x6c6>
 528:	02 19                	add    (%rcx),%bl
 52a:	51                   	push   %rcx
 52b:	9d                   	popf
 52c:	00 00                	add    %al,(%rax)
 52e:	00 00                	add    %al,(%rax)
 530:	12 6e 03             	adc    0x3(%rsi),%ch
 533:	00 00                	add    %al,(%rax)
 535:	c0 02 10             	rolb   $0x10,(%rdx)
 538:	00 00                	add    %al,(%rax)
 53a:	00 00                	add    %al,(%rax)
 53c:	00 20                	add    %ah,(%rax)
 53e:	00 00                	add    %al,(%rax)
 540:	00 00                	add    %al,(%rax)
 542:	00 00                	add    %al,(%rax)
 544:	00 01                	add    %al,(%rcx)
 546:	9c                   	pushf
 547:	53                   	push   %rbx
 548:	05 00 00 20 78       	add    $0x78200000,%eax
 54d:	03 00                	add    (%rax),%eax
 54f:	00 01                	add    %al,(%rcx)
 551:	55                   	push   %rbp
 552:	01 84 03 00 00 12 01 	add    %eax,0x1120000(%rbx,%rax,1)
 559:	00 00                	add    %al,(%rax)
 55b:	0e                   	(bad)
 55c:	01 00                	add    %eax,(%rax)
 55e:	00 01                	add    %al,(%rcx)
 560:	90                   	nop
 561:	03 00                	add    (%rax),%eax
 563:	00 28                	add    %ch,(%rax)
 565:	01 00                	add    %eax,(%rax)
 567:	00 24 01             	add    %ah,(%rcx,%rax,1)
 56a:	00 00                	add    %al,(%rax)
 56c:	20 99 03 00 00 01    	and    %bl,0x1000003(%rcx)
 572:	52                   	push   %rdx
 573:	04 a2                	add    $0xa2,%al
 575:	03 00                	add    (%rax),%eax
 577:	00 3e                	add    %bh,(%rsi)
 579:	01 00                	add    %eax,(%rax)
 57b:	00 3a                	add    %bh,(%rdx)
 57d:	01 00                	add    %eax,(%rax)
 57f:	00 0b                	add    %cl,(%rbx)
 581:	83 04 00 00          	addl   $0x0,(%rax,%rax,1)
 585:	c0 02 10             	rolb   $0x10,(%rdx)
 588:	00 00                	add    %al,(%rax)
 58a:	00 00                	add    %al,(%rax)
 58c:	00 03                	add    %al,(%rbx)
 58e:	57                   	push   %rdi
 58f:	00 00                	add    %al,(%rax)
 591:	00 31                	add    %dh,(%rcx)
 593:	1e                   	(bad)
 594:	01 92 04 00 00 60    	add    %edx,0x60000004(%rdx)
 59a:	01 00                	add    %eax,(%rax)
 59c:	00 5e 01             	add    %bl,0x1(%rsi)
 59f:	00 00                	add    %al,(%rax)
 5a1:	01 9e 04 00 00 6a    	add    %ebx,0x6a000004(%rsi)
 5a7:	01 00                	add    %eax,(%rax)
 5a9:	00 68 01             	add    %ch,0x1(%rax)
 5ac:	00 00                	add    %al,(%rax)
 5ae:	00 00                	add    %al,(%rax)
 5b0:	12 cf                	adc    %bh,%cl
 5b2:	02 00                	add    (%rax),%al
 5b4:	00 50 03             	add    %dl,0x3(%rax)
 5b7:	10 00                	adc    %al,(%rax)
 5b9:	00 00                	add    %al,(%rax)
 5bb:	00 00                	add    %al,(%rax)
 5bd:	44 00 00             	add    %r8b,(%rax)
 5c0:	00 00                	add    %al,(%rax)
 5c2:	00 00                	add    %al,(%rax)
 5c4:	00 01                	add    %al,(%rcx)
 5c6:	9c                   	pushf
 5c7:	ca 05 00             	lret   $0x5
 5ca:	00 29                	add    %ch,(%rcx)
 5cc:	dc 02                	faddl  (%rdx)
 5ce:	00 00                	add    %al,(%rax)
 5d0:	00 80 0b 00 0f e7    	add    %al,-0x18f0fff5(%rax)
 5d6:	02 00                	add    (%rax),%al
 5d8:	00 50 03             	add    %dl,0x3(%rax)
 5db:	10 00                	adc    %al,(%rax)
 5dd:	00 00                	add    %al,(%rax)
 5df:	00 00                	add    %al,(%rax)
 5e1:	43 00 00             	rex.XB add %al,(%r8)
 5e4:	00 00                	add    %al,(%rax)
 5e6:	00 00                	add    %al,(%rax)
 5e8:	00 04 e8             	add    %al,(%rax,%rbp,8)
 5eb:	02 00                	add    (%rax),%al
 5ed:	00 7e 01             	add    %bh,0x1(%rsi)
 5f0:	00 00                	add    %al,(%rax)
 5f2:	72 01                	jb     5f5 <code_segment+0x5ed>
 5f4:	00 00                	add    %al,(%rax)
 5f6:	0b 83 04 00 00 80    	or     -0x7ffffffc(%rbx),%eax
 5fc:	03 10                	add    (%rax),%edx
 5fe:	00 00                	add    %al,(%rax)
 600:	00 00                	add    %al,(%rax)
 602:	00 02                	add    %al,(%rdx)
 604:	6c                   	insb   (%dx),%es:(%rdi)
 605:	00 00                	add    %al,(%rax)
 607:	00 48 3a             	add    %cl,0x3a(%rax)
 60a:	01 92 04 00 00 d0    	add    %edx,-0x2ffffffc(%rdx)
 610:	01 00                	add    %eax,(%rax)
 612:	00 cc                	add    %cl,%ah
 614:	01 00                	add    %eax,(%rax)
 616:	00 01                	add    %al,(%rcx)
 618:	9e                   	sahf
 619:	04 00                	add    $0x0,%al
 61b:	00 e7                	add    %ah,%bh
 61d:	01 00                	add    %eax,(%rax)
 61f:	00 e3                	add    %ah,%bl
 621:	01 00                	add    %eax,(%rax)
 623:	00 00                	add    %al,(%rax)
 625:	00 00                	add    %al,(%rax)
 627:	12 a5 02 00 00 a0    	adc    -0x5ffffffe(%rbp),%ah
 62d:	03 10                	add    (%rax),%edx
 62f:	00 00                	add    %al,(%rax)
 631:	00 00                	add    %al,(%rax)
 633:	00 c0                	add    %al,%al
 635:	00 00                	add    %al,(%rax)
 637:	00 00                	add    %al,(%rax)
 639:	00 00                	add    %al,(%rax)
 63b:	00 01                	add    %al,(%rcx)
 63d:	9c                   	pushf
 63e:	2f                   	(bad)
 63f:	07                   	(bad)
 640:	00 00                	add    %al,(%rax)
 642:	01 af 02 00 00 0a    	add    %ebp,0xa000002(%rdi)
 648:	02 00                	add    (%rax),%al
 64a:	00 06                	add    %al,(%rsi)
 64c:	02 00                	add    (%rax),%al
 64e:	00 13                	add    %dl,(%rbx)
 650:	b8 02 00 00 04       	mov    $0x4000002,%eax
 655:	c3                   	ret
 656:	02 00                	add    (%rax),%al
 658:	00 20                	add    %ah,(%rax)
 65a:	02 00                	add    (%rax),%al
 65c:	00 1c 02             	add    %bl,(%rdx,%rax,1)
 65f:	00 00                	add    %al,(%rax)
 661:	2a 6e 03             	sub    0x3(%rsi),%ch
 664:	00 00                	add    %al,(%rax)
 666:	b9 03 10 00 00       	mov    $0x1003,%ecx
 66b:	00 00                	add    %al,(%rax)
 66d:	00 00                	add    %al,(%rax)
 66f:	7c 00                	jl     671 <code_segment+0x669>
 671:	00 00                	add    %al,(%rax)
 673:	01 52 05             	add    %edx,0x5(%rdx)
 676:	84 06                	test   %al,(%rsi)
 678:	00 00                	add    %al,(%rax)
 67a:	0c 78                	or     $0x78,%al
 67c:	03 00                	add    (%rax),%eax
 67e:	00 01                	add    %al,(%rcx)
 680:	84 03                	test   %al,(%rbx)
 682:	00 00                	add    %al,(%rax)
 684:	34 02                	xor    $0x2,%al
 686:	00 00                	add    %al,(%rax)
 688:	32 02                	xor    (%rdx),%al
 68a:	00 00                	add    %al,(%rax)
 68c:	01 90 03 00 00 46    	add    %edx,0x46000003(%rax)
 692:	02 00                	add    (%rax),%al
 694:	00 44 02 00          	add    %al,0x0(%rdx,%rax,1)
 698:	00 01                	add    %al,(%rcx)
 69a:	99                   	cltd
 69b:	03 00                	add    (%rax),%eax
 69d:	00 50 02             	add    %dl,0x2(%rax)
 6a0:	00 00                	add    %al,(%rax)
 6a2:	4e 02 00             	rex.WRX add (%rax),%r8b
 6a5:	00 07                	add    %al,(%rdi)
 6a7:	7c 00                	jl     6a9 <code_segment+0x6a1>
 6a9:	00 00                	add    %al,(%rax)
 6ab:	04 a2                	add    $0xa2,%al
 6ad:	03 00                	add    (%rax),%eax
 6af:	00 5a 02             	add    %bl,0x2(%rdx)
 6b2:	00 00                	add    %al,(%rax)
 6b4:	58                   	pop    %rax
 6b5:	02 00                	add    (%rax),%al
 6b7:	00 0b                	add    %cl,(%rbx)
 6b9:	83 04 00 00          	addl   $0x0,(%rax,%rax,1)
 6bd:	b9 03 10 00 00       	mov    $0x1003,%ecx
 6c2:	00 00                	add    %al,(%rax)
 6c4:	00 03                	add    %al,(%rbx)
 6c6:	87 00                	xchg   %eax,(%rax)
 6c8:	00 00                	add    %al,(%rax)
 6ca:	31 1e                	xor    %ebx,(%rsi)
 6cc:	0c 92                	or     $0x92,%al
 6ce:	04 00                	add    $0x0,%al
 6d0:	00 01                	add    %al,(%rcx)
 6d2:	9e                   	sahf
 6d3:	04 00                	add    $0x0,%al
 6d5:	00 6c 02 00          	add    %ch,0x0(%rdx,%rax,1)
 6d9:	00 6a 02             	add    %ch,0x2(%rdx)
 6dc:	00 00                	add    %al,(%rax)
 6de:	00 00                	add    %al,(%rax)
 6e0:	00 2b                	add    %ch,(%rbx)
 6e2:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
 6e3:	02 00                	add    (%rax),%al
 6e5:	00 a1 00 00 00 01    	add    %ah,0x1000000(%rcx)
 6eb:	4d 06                	rex.WRB (bad)
 6ed:	0c af                	or     $0xaf,%al
 6ef:	02 00                	add    (%rax),%al
 6f1:	00 07                	add    %al,(%rdi)
 6f3:	a1 00 00 00 04 b8 02 	movabs 0x2b804000000,%eax
 6fa:	00 00 
 6fc:	7e 02                	jle    700 <code_segment+0x6f8>
 6fe:	00 00                	add    %al,(%rax)
 700:	7c 02                	jl     704 <code_segment+0x6fc>
 702:	00 00                	add    %al,(%rax)
 704:	13 c3                	adc    %ebx,%eax
 706:	02 00                	add    (%rax),%al
 708:	00 2c cf             	add    %ch,(%rdi,%rcx,8)
 70b:	02 00                	add    (%rax),%al
 70d:	00 2d 04 10 00 00    	add    %ch,0x1004(%rip)        # 1717 <code_segment+0x170f>
 713:	00 00                	add    %al,(%rax)
 715:	00 26                	add    %ah,(%rsi)
 717:	00 00                	add    %al,(%rax)
 719:	00 00                	add    %al,(%rax)
 71b:	00 00                	add    %al,(%rax)
 71d:	00 01                	add    %al,(%rcx)
 71f:	5d                   	pop    %rbp
 720:	0d 18 07 00 00       	or     $0x718,%eax
 725:	13 dc                	adc    %esp,%ebx
 727:	02 00                	add    (%rax),%al
 729:	00 0f                	add    %cl,(%rdi)
 72b:	e7 02                	out    %eax,$0x2
 72d:	00 00                	add    %al,(%rax)
 72f:	2d 04 10 00 00       	sub    $0x1004,%eax
 734:	00 00                	add    %al,(%rax)
 736:	00 26                	add    %ah,(%rsi)
 738:	00 00                	add    %al,(%rax)
 73a:	00 00                	add    %al,(%rax)
 73c:	00 00                	add    %al,(%rax)
 73e:	00 04 e8             	add    %al,(%rax,%rbp,8)
 741:	02 00                	add    (%rax),%al
 743:	00 90 02 00 00 86    	add    %dl,-0x79fffffe(%rax)
 749:	02 00                	add    (%rax),%al
 74b:	00 0b                	add    %cl,(%rbx)
 74d:	83 04 00 00          	addl   $0x0,(%rax,%rax,1)
 751:	40 04 10             	rex add $0x10,%al
 754:	00 00                	add    %al,(%rax)
 756:	00 00                	add    %al,(%rax)
 758:	00 02                	add    %al,(%rdx)
 75a:	ac                   	lods   %ds:(%rsi),%al
 75b:	00 00                	add    %al,(%rax)
 75d:	00 48 3a             	add    %cl,0x3a(%rax)
 760:	01 92 04 00 00 da    	add    %edx,-0x25fffffc(%rdx)
 766:	02 00                	add    (%rax),%al
 768:	00 d6                	add    %dl,%dh
 76a:	02 00                	add    (%rax),%al
 76c:	00 0c 9e             	add    %cl,(%rsi,%rbx,4)
 76f:	04 00                	add    $0x0,%al
 771:	00 00                	add    %al,(%rax)
 773:	00 00                	add    %al,(%rax)
 775:	19 25 04 10 00 00    	sbb    %esp,0x1004(%rip)        # 177f <code_segment+0x1777>
 77b:	00 00                	add    %al,(%rax)
 77d:	00 f3                	add    %dh,%bl
 77f:	02 00                	add    (%rax),%al
 781:	00 1a                	add    %bl,(%rdx)
 783:	01 55 02             	add    %edx,0x2(%rbp)
 786:	75 00                	jne    788 <code_segment+0x780>
 788:	00 00                	add    %al,(%rax)
 78a:	00 00                	add    %al,(%rax)
 78c:	2d 6a 02 00 00       	sub    $0x26a,%eax
 791:	60                   	(bad)
 792:	04 10                	add    $0x10,%al
 794:	00 00                	add    %al,(%rax)
 796:	00 00                	add    %al,(%rax)
 798:	00 29                	add    %ch,(%rcx)
 79a:	00 00                	add    %al,(%rax)
 79c:	00 00                	add    %al,(%rax)
 79e:	00 00                	add    %al,(%rax)
 7a0:	00 01                	add    %al,(%rcx)
 7a2:	9c                   	pushf
 7a3:	01 74 02 00          	add    %esi,0x0(%rdx,%rax,1)
 7a7:	00 f3                	add    %dh,%bl
 7a9:	02 00                	add    (%rax),%al
 7ab:	00 ed                	add    %ch,%ch
 7ad:	02 00                	add    (%rax),%al
 7af:	00 01                	add    %al,(%rcx)
 7b1:	80 02 00             	addb   $0x0,(%rdx)
 7b4:	00 12                	add    %dl,(%rdx)
 7b6:	03 00                	add    (%rax),%eax
 7b8:	00 0c 03             	add    %cl,(%rbx,%rax,1)
 7bb:	00 00                	add    %al,(%rax)
 7bd:	2e 8c 02             	cs mov %es,(%rdx)
 7c0:	00 00                	add    %al,(%rax)
 7c2:	bc 00 00 00 04       	mov    $0x4000000,%esp
 7c7:	8d 02                	lea    (%rdx),%eax
 7c9:	00 00                	add    %al,(%rax)
 7cb:	33 03                	xor    (%rbx),%eax
 7cd:	00 00                	add    %al,(%rax)
 7cf:	2b 03                	sub    (%rbx),%eax
 7d1:	00 00                	add    %al,(%rax)
 7d3:	00 00                	add    %al,(%rax)
 7d5:	00 68 00             	add    %ch,0x0(%rax)
 7d8:	00 00                	add    %al,(%rax)
 7da:	05 00 01 08 eb       	add    $0xeb080100,%eax
 7df:	02 00                	add    (%rax),%al
 7e1:	00 02                	add    %al,(%rdx)
 7e3:	69 03 00 00 1d db    	imul   $0xdb1d0000,(%rbx),%eax
 7e9:	00 00                	add    %al,(%rax)
 7eb:	00 00                	add    %al,(%rax)
 7ed:	00 00                	add    %al,(%rax)
 7ef:	00 d0                	add    %dl,%al
 7f1:	04 10                	add    $0x10,%al
 7f3:	00 00                	add    %al,(%rax)
 7f5:	00 00                	add    %al,(%rax)
 7f7:	00 02                	add    %al,(%rdx)
 7f9:	00 00                	add    %al,(%rax)
 7fb:	00 00                	add    %al,(%rax)
 7fd:	00 00                	add    %al,(%rax)
 7ff:	00 d9                	add    %bl,%cl
 801:	04 00                	add    $0x0,%al
 803:	00 01                	add    %al,(%rcx)
 805:	08 05 a8 02 00 00    	or     %al,0x2a8(%rip)        # ab3 <code_segment+0xaab>
 80b:	01 08                	add    %ecx,(%rax)
 80d:	07                   	(bad)
 80e:	73 01                	jae    811 <code_segment+0x809>
 810:	00 00                	add    %al,(%rax)
 812:	03 04 05 69 6e 74 00 	add    0x746e69(,%rax,1),%eax
 819:	01 08                	add    %ecx,(%rax)
 81b:	05 a3 02 00 00       	add    $0x2a3,%eax
 820:	01 10                	add    %edx,(%rax)
 822:	04 13                	add    $0x13,%al
 824:	03 00                	add    (%rax),%eax
 826:	00 04 b6             	add    %al,(%rsi,%rsi,4)
 829:	03 00                	add    (%rax),%eax
 82b:	00 01                	add    %al,(%rcx)
 82d:	04 06                	add    $0x6,%al
 82f:	d0 04 10             	rolb   (%rax,%rdx,1)
 832:	00 00                	add    %al,(%rax)
 834:	00 00                	add    %al,(%rax)
 836:	00 02                	add    %al,(%rdx)
 838:	00 00                	add    %al,(%rax)
 83a:	00 00                	add    %al,(%rax)
 83c:	00 00                	add    %al,(%rax)
 83e:	00 01                	add    %al,(%rcx)
 840:	9c                   	pushf
 841:	00 24 00             	add    %ah,(%rax,%rax,1)
 844:	00 00                	add    %al,(%rax)
 846:	05 00 01 08 2e       	add    $0x2e080100,%eax
 84b:	03 00                	add    (%rax),%eax
 84d:	00 01                	add    %al,(%rcx)
 84f:	2c 05                	sub    $0x5,%al
 851:	00 00                	add    %al,(%rax)
 853:	d2 04 10             	rolb   %cl,(%rax,%rdx,1)
 856:	00 00                	add    %al,(%rax)
 858:	00 00                	add    %al,(%rax)
 85a:	00 1e                	add    %bl,(%rsi)
 85c:	c2 03 00             	ret    $0x3
 85f:	00 13                	add    %dl,(%rbx)
 861:	00 00                	add    %al,(%rax)
 863:	00 3e                	add    %bh,(%rsi)
 865:	00 00                	add    %al,(%rax)
 867:	00 01                	add    %al,(%rcx)
 869:	80 b1 00 00 00 05 00 	xorb   $0x0,0x5000000(%rcx)
 870:	01 08                	add    %ecx,(%rax)
 872:	42 03 00             	rex.X add (%rax),%eax
 875:	00 02                	add    %al,(%rdx)
 877:	69 03 00 00 1d f4    	imul   $0xf41d0000,(%rbx),%eax
 87d:	00 00                	add    %al,(%rax)
 87f:	00 04 01             	add    %al,(%rcx,%rax,1)
 882:	00 00                	add    %al,(%rax)
 884:	f0 04 10             	lock add $0x10,%al
 887:	00 00                	add    %al,(%rax)
 889:	00 00                	add    %al,(%rax)
 88b:	00 21                	add    %ah,(%rcx)
 88d:	00 00                	add    %al,(%rax)
 88f:	00 00                	add    %al,(%rax)
 891:	00 00                	add    %al,(%rax)
 893:	00 7e 05             	add    %bh,0x5(%rsi)
 896:	00 00                	add    %al,(%rax)
 898:	01 08                	add    %ecx,(%rax)
 89a:	05 a8 02 00 00       	add    $0x2a8,%eax
 89f:	03 97 00 00 00 02    	add    0x2000000(%rdi),%edx
 8a5:	d6                   	(bad)
 8a6:	17                   	(bad)
 8a7:	41 00 00             	add    %al,(%r8)
 8aa:	00 01                	add    %al,(%rcx)
 8ac:	08 07                	or     %al,(%rdi)
 8ae:	73 01                	jae    8b1 <code_segment+0x8a9>
 8b0:	00 00                	add    %al,(%rax)
 8b2:	04 04                	add    $0x4,%al
 8b4:	05 69 6e 74 00       	add    $0x746e69,%eax
 8b9:	01 08                	add    %ecx,(%rax)
 8bb:	05 a3 02 00 00       	add    $0x2a3,%eax
 8c0:	01 10                	add    %edx,(%rax)
 8c2:	04 13                	add    $0x13,%al
 8c4:	03 00                	add    (%rax),%eax
 8c6:	00 05 15 01 00 00    	add    %al,0x115(%rip)        # 9e1 <code_segment+0x9d9>
 8cc:	01 03                	add    %eax,(%rbx)
 8ce:	08 35 00 00 00 f0    	or     %dh,-0x10000000(%rip)        # fffffffff00008d4 <CHECKSUM+0xbadb8d9>
 8d4:	04 10                	add    $0x10,%al
 8d6:	00 00                	add    %al,(%rax)
 8d8:	00 00                	add    %al,(%rax)
 8da:	00 21                	add    %ah,(%rcx)
 8dc:	00 00                	add    %al,(%rax)
 8de:	00 00                	add    %al,(%rax)
 8e0:	00 00                	add    %al,(%rax)
 8e2:	00 01                	add    %al,(%rcx)
 8e4:	9c                   	pushf
 8e5:	a2 00 00 00 06 73 74 	movabs %al,0x72747306000000
 8ec:	72 00 
 8ee:	01 03                	add    %eax,(%rbx)
 8f0:	1b a2 00 00 00 01    	sbb    0x1000000(%rdx),%esp
 8f6:	55                   	push   %rbp
 8f7:	07                   	(bad)
 8f8:	6c                   	insb   (%dx),%es:(%rdi)
 8f9:	65 6e                	outsb  %gs:(%rsi),(%dx)
 8fb:	00 01                	add    %al,(%rcx)
 8fd:	04 09                	add    $0x9,%al
 8ff:	35 00 00 00 71       	xor    $0x71000000,%eax
 904:	03 00                	add    (%rax),%eax
 906:	00 6b 03             	add    %ch,0x3(%rbx)
 909:	00 00                	add    %al,(%rax)
 90b:	00 08                	add    %cl,(%rax)
 90d:	08 af 00 00 00 01    	or     %ch,0x1000000(%rdi)
 913:	01 06                	add    %eax,(%rsi)
 915:	5e                   	pop    %rsi
 916:	01 00                	add    %eax,(%rax)
 918:	00 09                	add    %cl,(%rcx)
 91a:	a8 00                	test   $0x0,%al
 91c:	00 00                	add    %al,(%rax)
 91e:	00 1f                	add    %bl,(%rdi)
 920:	00 00                	add    %al,(%rax)
 922:	00 05 00 01 08 cd    	add    %al,-0x32f7ff00(%rip)        # ffffffffcd080a28 <MAGIC+0xffffffffb15a5a26>
 928:	03 00                	add    (%rax),%eax
 92a:	00 01                	add    %al,(%rcx)
 92c:	f2 05 00 00 d3 00    	repnz add $0xd30000,%eax
 932:	00 00                	add    %al,(%rax)
 934:	d7                   	xlat   %ds:(%rbx)
 935:	03 00                	add    (%rax),%eax
 937:	00 13                	add    %dl,(%rbx)
 939:	00 00                	add    %al,(%rax)
 93b:	00 3e                	add    %bh,(%rsi)
 93d:	00 00                	add    %al,(%rax)
 93f:	00 01                	add    %al,(%rcx)
 941:	80                   	.byte 0x80

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
   0:	01 11                	add    %edx,(%rcx)
   2:	00 10                	add    %dl,(%rax)
   4:	17                   	(bad)
   5:	55                   	push   %rbp
   6:	17                   	(bad)
   7:	03 0e                	add    (%rsi),%ecx
   9:	1b 0e                	sbb    (%rsi),%ecx
   b:	25 0e 13 05 00       	and    $0x5130e,%eax
  10:	00 00                	add    %al,(%rax)
  12:	01 11                	add    %edx,(%rcx)
  14:	01 10                	add    %edx,(%rax)
  16:	17                   	(bad)
  17:	11 01                	adc    %eax,(%rcx)
  19:	12 0f                	adc    (%rdi),%cl
  1b:	03 0e                	add    (%rsi),%ecx
  1d:	1b 0e                	sbb    (%rsi),%ecx
  1f:	25 0e 13 05 00       	and    $0x5130e,%eax
  24:	00 02                	add    %al,(%rdx)
  26:	2e 00 03             	cs add %al,(%rbx)
  29:	0e                   	(bad)
  2a:	3f                   	(bad)
  2b:	19 49 15             	sbb    %ecx,0x15(%rcx)
  2e:	11 01                	adc    %eax,(%rcx)
  30:	12 0f                	adc    (%rdi),%cl
  32:	00 00                	add    %al,(%rax)
  34:	03 3b                	add    (%rbx),%edi
  36:	00 00                	add    %al,(%rax)
  38:	00 00                	add    %al,(%rax)
  3a:	01 05 00 31 13 02    	add    %eax,0x2133100(%rip)        # 2133140 <terminal_row+0x202c0d8>
  40:	17                   	(bad)
  41:	b7 42                	mov    $0x42,%bh
  43:	17                   	(bad)
  44:	00 00                	add    %al,(%rax)
  46:	02 28                	add    (%rax),%ch
  48:	00 03                	add    %al,(%rbx)
  4a:	0e                   	(bad)
  4b:	1c 0b                	sbb    $0xb,%al
  4d:	00 00                	add    %al,(%rax)
  4f:	03 24 00             	add    (%rax,%rax,1),%esp
  52:	0b 0b                	or     (%rbx),%ecx
  54:	3e 0b 03             	ds or  (%rbx),%eax
  57:	0e                   	(bad)
  58:	00 00                	add    %al,(%rax)
  5a:	04 34                	add    $0x34,%al
  5c:	00 31                	add    %dh,(%rcx)
  5e:	13 02                	adc    (%rdx),%eax
  60:	17                   	(bad)
  61:	b7 42                	mov    $0x42,%bh
  63:	17                   	(bad)
  64:	00 00                	add    %al,(%rax)
  66:	05 05 00 03 0e       	add    $0xe030005,%eax
  6b:	3a 0b                	cmp    (%rbx),%cl
  6d:	3b 0b                	cmp    (%rbx),%ecx
  6f:	39 0b                	cmp    %ecx,(%rbx)
  71:	49 13 00             	adc    (%r8),%rax
  74:	00 06                	add    %al,(%rsi)
  76:	34 00                	xor    $0x0,%al
  78:	03 0e                	add    (%rsi),%ecx
  7a:	3a 21                	cmp    (%rcx),%ah
  7c:	01 3b                	add    %edi,(%rbx)
  7e:	0b 39                	or     (%rcx),%edi
  80:	0b 49 13             	or     0x13(%rcx),%ecx
  83:	00 00                	add    %al,(%rax)
  85:	07                   	(bad)
  86:	0b 01                	or     (%rcx),%eax
  88:	55                   	push   %rbp
  89:	17                   	(bad)
  8a:	00 00                	add    %al,(%rax)
  8c:	08 34 00             	or     %dh,(%rax,%rax,1)
  8f:	03 0e                	add    (%rsi),%ecx
  91:	3a 21                	cmp    (%rcx),%ah
  93:	01 3b                	add    %edi,(%rbx)
  95:	0b 39                	or     (%rcx),%edi
  97:	0b 49 13             	or     0x13(%rcx),%ecx
  9a:	02 18                	add    (%rax),%bl
  9c:	00 00                	add    %al,(%rax)
  9e:	09 2e                	or     %ebp,(%rsi)
  a0:	01 3f                	add    %edi,(%rdi)
  a2:	19 03                	sbb    %eax,(%rbx)
  a4:	0e                   	(bad)
  a5:	3a 21                	cmp    (%rcx),%ah
  a7:	01 3b                	add    %edi,(%rbx)
  a9:	0b 39                	or     (%rcx),%edi
  ab:	21 06                	and    %eax,(%rsi)
  ad:	27                   	(bad)
  ae:	19 11                	sbb    %edx,(%rcx)
  b0:	01 12                	add    %edx,(%rdx)
  b2:	07                   	(bad)
  b3:	40 18 7a 19          	sbb    %dil,0x19(%rdx)
  b7:	01 13                	add    %edx,(%rbx)
  b9:	00 00                	add    %al,(%rax)
  bb:	0a 34 00             	or     (%rax,%rax,1),%dh
  be:	03 08                	add    (%rax),%ecx
  c0:	3a 21                	cmp    (%rcx),%ah
  c2:	01 3b                	add    %edi,(%rbx)
  c4:	0b 39                	or     (%rcx),%edi
  c6:	0b 49 13             	or     0x13(%rcx),%ecx
  c9:	02 17                	add    (%rdi),%dl
  cb:	b7 42                	mov    $0x42,%bh
  cd:	17                   	(bad)
  ce:	00 00                	add    %al,(%rax)
  d0:	0b 1d 01 31 13 52    	or     0x52133101(%rip),%ebx        # 521331d7 <MAGIC+0x366581d5>
  d6:	01 b8 42 0b 55 17    	add    %edi,0x17550b42(%rax)
  dc:	58                   	pop    %rax
  dd:	21 01                	and    %eax,(%rcx)
  df:	59                   	pop    %rcx
  e0:	0b 57 0b             	or     0xb(%rdi),%edx
  e3:	00 00                	add    %al,(%rax)
  e5:	0c 05                	or     $0x5,%al
  e7:	00 31                	add    %dh,(%rcx)
  e9:	13 00                	adc    (%rax),%eax
  eb:	00 0d 16 00 03 0e    	add    %cl,0xe030016(%rip)        # e030107 <terminal_row+0xdf2909f>
  f1:	3a 0b                	cmp    (%rbx),%cl
  f3:	3b 0b                	cmp    (%rbx),%ecx
  f5:	39 0b                	cmp    %ecx,(%rbx)
  f7:	49 13 00             	adc    (%r8),%rax
  fa:	00 0e                	add    %cl,(%rsi)
  fc:	26 00 49 13          	es add %cl,0x13(%rcx)
 100:	00 00                	add    %al,(%rax)
 102:	0f 0b                	ud2
 104:	01 31                	add    %esi,(%rcx)
 106:	13 11                	adc    (%rcx),%edx
 108:	01 12                	add    %edx,(%rdx)
 10a:	07                   	(bad)
 10b:	00 00                	add    %al,(%rax)
 10d:	10 2e                	adc    %ch,(%rsi)
 10f:	01 3f                	add    %edi,(%rdi)
 111:	19 03                	sbb    %eax,(%rbx)
 113:	0e                   	(bad)
 114:	3a 21                	cmp    (%rcx),%ah
 116:	01 3b                	add    %edi,(%rbx)
 118:	0b 39                	or     (%rcx),%edi
 11a:	21 06                	and    %eax,(%rsi)
 11c:	27                   	(bad)
 11d:	19 20                	sbb    %esp,(%rax)
 11f:	21 01                	and    %eax,(%rcx)
 121:	01 13                	add    %edx,(%rbx)
 123:	00 00                	add    %al,(%rax)
 125:	11 05 00 03 08 3a    	adc    %eax,0x3a080300(%rip)        # 3a08042b <MAGIC+0x1e5a5429>
 12b:	21 01                	and    %eax,(%rcx)
 12d:	3b 0b                	cmp    (%rbx),%ecx
 12f:	39 0b                	cmp    %ecx,(%rbx)
 131:	49 13 00             	adc    (%r8),%rax
 134:	00 12                	add    %dl,(%rdx)
 136:	2e 01 31             	cs add %esi,(%rcx)
 139:	13 11                	adc    (%rcx),%edx
 13b:	01 12                	add    %edx,(%rdx)
 13d:	07                   	(bad)
 13e:	40 18 7a 19          	sbb    %dil,0x19(%rdx)
 142:	01 13                	add    %edx,(%rbx)
 144:	00 00                	add    %al,(%rax)
 146:	13 34 00             	adc    (%rax,%rax,1),%esi
 149:	31 13                	xor    %edx,(%rbx)
 14b:	00 00                	add    %al,(%rax)
 14d:	14 34                	adc    $0x34,%al
 14f:	00 03                	add    %al,(%rbx)
 151:	0e                   	(bad)
 152:	3a 21                	cmp    (%rcx),%ah
 154:	01 3b                	add    %edi,(%rbx)
 156:	0b 39                	or     (%rcx),%edi
 158:	21 15 49 13 1c 0b    	and    %edx,0xb1c1349(%rip)        # b1c14a7 <terminal_row+0xb0ba43f>
 15e:	00 00                	add    %al,(%rax)
 160:	15 34 00 03 0e       	adc    $0xe030034,%eax
 165:	3a 21                	cmp    (%rcx),%ah
 167:	01 3b                	add    %edi,(%rbx)
 169:	0b 39                	or     (%rcx),%edi
 16b:	0b 49 13             	or     0x13(%rcx),%ecx
 16e:	1c 21                	sbb    $0x21,%al
 170:	80 80 2e 00 00 16 0f 	addb   $0xf,0x1600002e(%rax)
 177:	00 0b                	add    %cl,(%rbx)
 179:	21 08                	and    %ecx,(%rax)
 17b:	49 13 00             	adc    (%r8),%rax
 17e:	00 17                	add    %dl,(%rdi)
 180:	05 00 03 0e 3a       	add    $0x3a0e0300,%eax
 185:	21 01                	and    %eax,(%rcx)
 187:	3b 0b                	cmp    (%rbx),%ecx
 189:	39 0b                	cmp    %ecx,(%rbx)
 18b:	49 13 02             	adc    (%r10),%rax
 18e:	17                   	(bad)
 18f:	b7 42                	mov    $0x42,%bh
 191:	17                   	(bad)
 192:	00 00                	add    %al,(%rax)
 194:	18 48 00             	sbb    %cl,0x0(%rax)
 197:	7d 01                	jge    19a <code_segment+0x192>
 199:	7f 13                	jg     1ae <code_segment+0x1a6>
 19b:	00 00                	add    %al,(%rax)
 19d:	19 48 01             	sbb    %ecx,0x1(%rax)
 1a0:	7d 01                	jge    1a3 <code_segment+0x19b>
 1a2:	7f 13                	jg     1b7 <code_segment+0x1af>
 1a4:	00 00                	add    %al,(%rax)
 1a6:	1a 49 00             	sbb    0x0(%rcx),%cl
 1a9:	02 18                	add    (%rax),%bl
 1ab:	7e 18                	jle    1c5 <code_segment+0x1bd>
 1ad:	00 00                	add    %al,(%rax)
 1af:	1b 0b                	sbb    (%rbx),%ecx
 1b1:	01 00                	add    %eax,(%rax)
 1b3:	00 1c 34             	add    %bl,(%rsp,%rsi,1)
 1b6:	00 03                	add    %al,(%rbx)
 1b8:	08 3a                	or     %bh,(%rdx)
 1ba:	21 01                	and    %eax,(%rcx)
 1bc:	3b 0b                	cmp    (%rbx),%ecx
 1be:	39 0b                	cmp    %ecx,(%rbx)
 1c0:	49 13 00             	adc    (%r8),%rax
 1c3:	00 1d 05 00 03 0e    	add    %bl,0xe030005(%rip)        # e0301ce <terminal_row+0xdf29166>
 1c9:	3a 21                	cmp    (%rcx),%ah
 1cb:	01 3b                	add    %edi,(%rbx)
 1cd:	0b 39                	or     (%rcx),%edi
 1cf:	0b 49 13             	or     0x13(%rcx),%ecx
 1d2:	02 18                	add    (%rax),%bl
 1d4:	00 00                	add    %al,(%rax)
 1d6:	1e                   	(bad)
 1d7:	0b 01                	or     (%rcx),%eax
 1d9:	11 01                	adc    %eax,(%rcx)
 1db:	12 07                	adc    (%rdi),%al
 1dd:	00 00                	add    %al,(%rax)
 1df:	1f                   	(bad)
 1e0:	2e 01 03             	cs add %eax,(%rbx)
 1e3:	0e                   	(bad)
 1e4:	3a 21                	cmp    (%rcx),%ah
 1e6:	02 3b                	add    (%rbx),%bh
 1e8:	0b 39                	or     (%rcx),%edi
 1ea:	0b 27                	or     (%rdi),%esp
 1ec:	19 49 13             	sbb    %ecx,0x13(%rcx)
 1ef:	20 21                	and    %ah,(%rcx)
 1f1:	03 01                	add    (%rcx),%eax
 1f3:	13 00                	adc    (%rax),%eax
 1f5:	00 20                	add    %ah,(%rax)
 1f7:	05 00 31 13 02       	add    $0x2133100,%eax
 1fc:	18 00                	sbb    %al,(%rax)
 1fe:	00 21                	add    %ah,(%rcx)
 200:	11 01                	adc    %eax,(%rcx)
 202:	25 0e 13 0b 03       	and    $0x30b130e,%eax
 207:	1f                   	(bad)
 208:	1b 1f                	sbb    (%rdi),%ebx
 20a:	11 01                	adc    %eax,(%rcx)
 20c:	12 07                	adc    (%rdi),%al
 20e:	10 17                	adc    %dl,(%rdi)
 210:	00 00                	add    %al,(%rax)
 212:	22 24 00             	and    (%rax,%rax,1),%ah
 215:	0b 0b                	or     (%rbx),%ecx
 217:	3e 0b 03             	ds or  (%rbx),%eax
 21a:	08 00                	or     %al,(%rax)
 21c:	00 23                	add    %ah,(%rbx)
 21e:	04 01                	add    $0x1,%al
 220:	03 0e                	add    (%rsi),%ecx
 222:	3e 0b 0b             	ds or  (%rbx),%ecx
 225:	0b 49 13             	or     0x13(%rcx),%ecx
 228:	3a 0b                	cmp    (%rbx),%cl
 22a:	3b 0b                	cmp    (%rbx),%ecx
 22c:	39 0b                	cmp    %ecx,(%rbx)
 22e:	01 13                	add    %edx,(%rbx)
 230:	00 00                	add    %al,(%rax)
 232:	24 2e                	and    $0x2e,%al
 234:	01 3f                	add    %edi,(%rdi)
 236:	19 03                	sbb    %eax,(%rbx)
 238:	0e                   	(bad)
 239:	3a 0b                	cmp    (%rbx),%cl
 23b:	3b 0b                	cmp    (%rbx),%ecx
 23d:	39 0b                	cmp    %ecx,(%rbx)
 23f:	27                   	(bad)
 240:	19 49 13             	sbb    %ecx,0x13(%rcx)
 243:	3c 19                	cmp    $0x19,%al
 245:	01 13                	add    %edx,(%rbx)
 247:	00 00                	add    %al,(%rax)
 249:	25 05 00 49 13       	and    $0x13490005,%eax
 24e:	00 00                	add    %al,(%rax)
 250:	26 1d 01 31 13 52    	es sbb $0x52133101,%eax
 256:	01 b8 42 0b 11 01    	add    %edi,0x1110b42(%rax)
 25c:	12 07                	adc    (%rdi),%al
 25e:	58                   	pop    %rax
 25f:	0b 59 0b             	or     0xb(%rcx),%ebx
 262:	57                   	push   %rdi
 263:	0b 01                	or     (%rcx),%eax
 265:	13 00                	adc    (%rax),%eax
 267:	00 27                	add    %ah,(%rdi)
 269:	2e 01 3f             	cs add %edi,(%rdi)
 26c:	19 03                	sbb    %eax,(%rbx)
 26e:	0e                   	(bad)
 26f:	3a 0b                	cmp    (%rbx),%cl
 271:	3b 0b                	cmp    (%rbx),%ecx
 273:	39 0b                	cmp    %ecx,(%rbx)
 275:	20 0b                	and    %cl,(%rbx)
 277:	01 13                	add    %edx,(%rbx)
 279:	00 00                	add    %al,(%rax)
 27b:	28 1d 01 31 13 52    	sub    %bl,0x52133101(%rip)        # 52133382 <MAGIC+0x36658380>
 281:	01 b8 42 0b 11 01    	add    %edi,0x1110b42(%rax)
 287:	12 07                	adc    (%rdi),%al
 289:	58                   	pop    %rax
 28a:	0b 59 0b             	or     0xb(%rcx),%ebx
 28d:	57                   	push   %rdi
 28e:	0b 00                	or     (%rax),%eax
 290:	00 29                	add    %ch,(%rcx)
 292:	34 00                	xor    $0x0,%al
 294:	31 13                	xor    %edx,(%rbx)
 296:	1c 06                	sbb    $0x6,%al
 298:	00 00                	add    %al,(%rax)
 29a:	2a 1d 01 31 13 52    	sub    0x52133101(%rip),%bl        # 521333a1 <MAGIC+0x3665839f>
 2a0:	01 b8 42 0b 55 17    	add    %edi,0x17550b42(%rax)
 2a6:	58                   	pop    %rax
 2a7:	0b 59 0b             	or     0xb(%rcx),%ebx
 2aa:	57                   	push   %rdi
 2ab:	0b 01                	or     (%rcx),%eax
 2ad:	13 00                	adc    (%rax),%eax
 2af:	00 2b                	add    %ch,(%rbx)
 2b1:	1d 01 31 13 55       	sbb    $0x55133101,%eax
 2b6:	17                   	(bad)
 2b7:	58                   	pop    %rax
 2b8:	0b 59 0b             	or     0xb(%rcx),%ebx
 2bb:	57                   	push   %rdi
 2bc:	0b 00                	or     (%rax),%eax
 2be:	00 2c 1d 01 31 13 11 	add    %ch,0x11133101(,%rbx,1)
 2c5:	01 12                	add    %edx,(%rdx)
 2c7:	07                   	(bad)
 2c8:	58                   	pop    %rax
 2c9:	0b 59 0b             	or     0xb(%rcx),%ebx
 2cc:	57                   	push   %rdi
 2cd:	0b 01                	or     (%rcx),%eax
 2cf:	13 00                	adc    (%rax),%eax
 2d1:	00 2d 2e 01 31 13    	add    %ch,0x1331012e(%rip)        # 13310405 <terminal_row+0x1320939d>
 2d7:	11 01                	adc    %eax,(%rcx)
 2d9:	12 07                	adc    (%rdi),%al
 2db:	40 18 7a 19          	sbb    %dil,0x19(%rdx)
 2df:	00 00                	add    %al,(%rax)
 2e1:	2e 0b 01             	cs or  (%rcx),%eax
 2e4:	31 13                	xor    %edx,(%rbx)
 2e6:	55                   	push   %rbp
 2e7:	17                   	(bad)
 2e8:	00 00                	add    %al,(%rax)
 2ea:	00 01                	add    %al,(%rcx)
 2ec:	24 00                	and    $0x0,%al
 2ee:	0b 0b                	or     (%rbx),%ecx
 2f0:	3e 0b 03             	ds or  (%rbx),%eax
 2f3:	0e                   	(bad)
 2f4:	00 00                	add    %al,(%rax)
 2f6:	02 11                	add    (%rcx),%dl
 2f8:	01 25 0e 13 0b 03    	add    %esp,0x30b130e(%rip)        # 30b160c <terminal_row+0x2faa5a4>
 2fe:	1f                   	(bad)
 2ff:	1b 1f                	sbb    (%rdi),%ebx
 301:	11 01                	adc    %eax,(%rcx)
 303:	12 07                	adc    (%rdi),%al
 305:	10 17                	adc    %dl,(%rdi)
 307:	00 00                	add    %al,(%rax)
 309:	03 24 00             	add    (%rax,%rax,1),%esp
 30c:	0b 0b                	or     (%rbx),%ecx
 30e:	3e 0b 03             	ds or  (%rbx),%eax
 311:	08 00                	or     %al,(%rax)
 313:	00 04 2e             	add    %al,(%rsi,%rbp,1)
 316:	00 3f                	add    %bh,(%rdi)
 318:	19 03                	sbb    %eax,(%rbx)
 31a:	0e                   	(bad)
 31b:	3a 0b                	cmp    (%rbx),%cl
 31d:	3b 0b                	cmp    (%rbx),%ecx
 31f:	39 0b                	cmp    %ecx,(%rbx)
 321:	27                   	(bad)
 322:	19 11                	sbb    %edx,(%rcx)
 324:	01 12                	add    %edx,(%rdx)
 326:	07                   	(bad)
 327:	40 18 7a 19          	sbb    %dil,0x19(%rdx)
 32b:	00 00                	add    %al,(%rax)
 32d:	00 01                	add    %al,(%rcx)
 32f:	11 00                	adc    %eax,(%rax)
 331:	10 17                	adc    %dl,(%rdi)
 333:	11 01                	adc    %eax,(%rcx)
 335:	12 0f                	adc    (%rdi),%cl
 337:	03 0e                	add    (%rsi),%ecx
 339:	1b 0e                	sbb    (%rsi),%ecx
 33b:	25 0e 13 05 00       	and    $0x5130e,%eax
 340:	00 00                	add    %al,(%rax)
 342:	01 24 00             	add    %esp,(%rax,%rax,1)
 345:	0b 0b                	or     (%rbx),%ecx
 347:	3e 0b 03             	ds or  (%rbx),%eax
 34a:	0e                   	(bad)
 34b:	00 00                	add    %al,(%rax)
 34d:	02 11                	add    (%rcx),%dl
 34f:	01 25 0e 13 0b 03    	add    %esp,0x30b130e(%rip)        # 30b1663 <terminal_row+0x2faa5fb>
 355:	1f                   	(bad)
 356:	1b 1f                	sbb    (%rdi),%ebx
 358:	11 01                	adc    %eax,(%rcx)
 35a:	12 07                	adc    (%rdi),%al
 35c:	10 17                	adc    %dl,(%rdi)
 35e:	00 00                	add    %al,(%rax)
 360:	03 16                	add    (%rsi),%edx
 362:	00 03                	add    %al,(%rbx)
 364:	0e                   	(bad)
 365:	3a 0b                	cmp    (%rbx),%cl
 367:	3b 0b                	cmp    (%rbx),%ecx
 369:	39 0b                	cmp    %ecx,(%rbx)
 36b:	49 13 00             	adc    (%r8),%rax
 36e:	00 04 24             	add    %al,(%rsp)
 371:	00 0b                	add    %cl,(%rbx)
 373:	0b 3e                	or     (%rsi),%edi
 375:	0b 03                	or     (%rbx),%eax
 377:	08 00                	or     %al,(%rax)
 379:	00 05 2e 01 3f 19    	add    %al,0x193f012e(%rip)        # 193f04ad <terminal_row+0x192e9445>
 37f:	03 0e                	add    (%rsi),%ecx
 381:	3a 0b                	cmp    (%rbx),%cl
 383:	3b 0b                	cmp    (%rbx),%ecx
 385:	39 0b                	cmp    %ecx,(%rbx)
 387:	27                   	(bad)
 388:	19 49 13             	sbb    %ecx,0x13(%rcx)
 38b:	11 01                	adc    %eax,(%rcx)
 38d:	12 07                	adc    (%rdi),%al
 38f:	40 18 7a 19          	sbb    %dil,0x19(%rdx)
 393:	01 13                	add    %edx,(%rbx)
 395:	00 00                	add    %al,(%rax)
 397:	06                   	(bad)
 398:	05 00 03 08 3a       	add    $0x3a080300,%eax
 39d:	0b 3b                	or     (%rbx),%edi
 39f:	0b 39                	or     (%rcx),%edi
 3a1:	0b 49 13             	or     0x13(%rcx),%ecx
 3a4:	02 18                	add    (%rax),%bl
 3a6:	00 00                	add    %al,(%rax)
 3a8:	07                   	(bad)
 3a9:	34 00                	xor    $0x0,%al
 3ab:	03 08                	add    (%rax),%ecx
 3ad:	3a 0b                	cmp    (%rbx),%cl
 3af:	3b 0b                	cmp    (%rbx),%ecx
 3b1:	39 0b                	cmp    %ecx,(%rbx)
 3b3:	49 13 02             	adc    (%r10),%rax
 3b6:	17                   	(bad)
 3b7:	b7 42                	mov    $0x42,%bh
 3b9:	17                   	(bad)
 3ba:	00 00                	add    %al,(%rax)
 3bc:	08 0f                	or     %cl,(%rdi)
 3be:	00 0b                	add    %cl,(%rbx)
 3c0:	0b 49 13             	or     0x13(%rcx),%ecx
 3c3:	00 00                	add    %al,(%rax)
 3c5:	09 26                	or     %esp,(%rsi)
 3c7:	00 49 13             	add    %cl,0x13(%rcx)
 3ca:	00 00                	add    %al,(%rax)
 3cc:	00 01                	add    %al,(%rcx)
 3ce:	11 00                	adc    %eax,(%rax)
 3d0:	10 17                	adc    %dl,(%rdi)
 3d2:	55                   	push   %rbp
 3d3:	17                   	(bad)
 3d4:	03 0e                	add    (%rsi),%ecx
 3d6:	1b 0e                	sbb    (%rsi),%ecx
 3d8:	25 0e 13 05 00       	and    $0x5130e,%eax
	...

Disassembly of section .debug_aranges:

0000000000000000 <.debug_aranges>:
   0:	3c 00                	cmp    $0x0,%al
   2:	00 00                	add    %al,(%rax)
   4:	02 00                	add    (%rax),%al
   6:	00 00                	add    %al,(%rax)
   8:	00 00                	add    %al,(%rax)
   a:	08 00                	or     %al,(%rax)
   c:	00 00                	add    %al,(%rax)
   e:	00 00                	add    %al,(%rax)
  10:	80 05 10 00 00 00 00 	addb   $0x0,0x10(%rip)        # 27 <code_segment+0x1f>
  17:	00 03                	add    %al,(%rbx)
  19:	00 00                	add    %al,(%rax)
  1b:	00 00                	add    %al,(%rax)
  1d:	00 00                	add    %al,(%rax)
  1f:	00 8f 05 10 00 00    	add    %cl,0x1005(%rdi)
  25:	00 00                	add    %al,(%rax)
  27:	00 03                	add    %al,(%rbx)
	...
  3d:	00 00                	add    %al,(%rax)
  3f:	00 2c 00             	add    %ch,(%rax,%rax,1)
  42:	00 00                	add    %al,(%rax)
  44:	02 00                	add    (%rax),%al
  46:	23 00                	and    (%rax),%eax
  48:	00 00                	add    %al,(%rax)
  4a:	08 00                	or     %al,(%rax)
  4c:	00 00                	add    %al,(%rax)
  4e:	00 00                	add    %al,(%rax)
  50:	3d 01 10 00 00       	cmp    $0x1001,%eax
  55:	00 00                	add    %al,(%rax)
  57:	00 02                	add    %al,(%rdx)
  59:	01 00                	add    %eax,(%rax)
	...
  6f:	00 2c 00             	add    %ch,(%rax,%rax,1)
  72:	00 00                	add    %al,(%rax)
  74:	02 00                	add    (%rax),%al
  76:	5d                   	pop    %rbp
  77:	00 00                	add    %al,(%rax)
  79:	00 08                	add    %cl,(%rax)
  7b:	00 00                	add    %al,(%rax)
  7d:	00 00                	add    %al,(%rax)
  7f:	00 40 02             	add    %al,0x2(%rax)
  82:	10 00                	adc    %al,(%rax)
  84:	00 00                	add    %al,(%rax)
  86:	00 00                	add    %al,(%rax)
  88:	87 02                	xchg   %eax,(%rdx)
	...
  9e:	00 00                	add    %al,(%rax)
  a0:	2c 00                	sub    $0x0,%al
  a2:	00 00                	add    %al,(%rax)
  a4:	02 00                	add    (%rax),%al
  a6:	d6                   	(bad)
  a7:	07                   	(bad)
  a8:	00 00                	add    %al,(%rax)
  aa:	08 00                	or     %al,(%rax)
  ac:	00 00                	add    %al,(%rax)
  ae:	00 00                	add    %al,(%rax)
  b0:	d0 04 10             	rolb   (%rax,%rdx,1)
  b3:	00 00                	add    %al,(%rax)
  b5:	00 00                	add    %al,(%rax)
  b7:	00 02                	add    %al,(%rdx)
	...
  cd:	00 00                	add    %al,(%rax)
  cf:	00 2c 00             	add    %ch,(%rax,%rax,1)
  d2:	00 00                	add    %al,(%rax)
  d4:	02 00                	add    (%rax),%al
  d6:	42 08 00             	rex.X or %al,(%rax)
  d9:	00 08                	add    %cl,(%rax)
  db:	00 00                	add    %al,(%rax)
  dd:	00 00                	add    %al,(%rax)
  df:	00 d2                	add    %dl,%dl
  e1:	04 10                	add    $0x10,%al
  e3:	00 00                	add    %al,(%rax)
  e5:	00 00                	add    %al,(%rax)
  e7:	00 1e                	add    %bl,(%rsi)
	...
  fd:	00 00                	add    %al,(%rax)
  ff:	00 2c 00             	add    %ch,(%rax,%rax,1)
 102:	00 00                	add    %al,(%rax)
 104:	02 00                	add    (%rax),%al
 106:	6a 08                	push   $0x8
 108:	00 00                	add    %al,(%rax)
 10a:	08 00                	or     %al,(%rax)
 10c:	00 00                	add    %al,(%rax)
 10e:	00 00                	add    %al,(%rax)
 110:	f0 04 10             	lock add $0x10,%al
 113:	00 00                	add    %al,(%rax)
 115:	00 00                	add    %al,(%rax)
 117:	00 21                	add    %ah,(%rcx)
	...
 12d:	00 00                	add    %al,(%rax)
 12f:	00 3c 00             	add    %bh,(%rax,%rax,1)
 132:	00 00                	add    %al,(%rax)
 134:	02 00                	add    (%rax),%al
 136:	1f                   	(bad)
 137:	09 00                	or     %eax,(%rax)
 139:	00 08                	add    %cl,(%rax)
 13b:	00 00                	add    %al,(%rax)
 13d:	00 00                	add    %al,(%rax)
 13f:	00 8d 05 10 00 00    	add    %cl,0x1005(%rbp)
 145:	00 00                	add    %al,(%rax)
 147:	00 02                	add    %al,(%rdx)
 149:	00 00                	add    %al,(%rax)
 14b:	00 00                	add    %al,(%rax)
 14d:	00 00                	add    %al,(%rax)
 14f:	00 97 05 10 00 00    	add    %dl,0x1005(%rdi)
 155:	00 00                	add    %al,(%rax)
 157:	00 02                	add    %al,(%rdx)
	...

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
   0:	61                   	(bad)
   1:	72 63                	jb     66 <code_segment+0x5e>
   3:	68 2f 78 38 36       	push   $0x3638782f
   8:	5f                   	pop    %rdi
   9:	36 34 2f             	ss xor $0x2f,%al
   c:	63 72 74             	movsxd 0x74(%rdx),%esi
   f:	69 2e 53 00 2f 68    	imul   $0x682f0053,(%rsi),%ebp
  15:	6f                   	outsl  %ds:(%rsi),(%dx)
  16:	6d                   	insl   (%dx),%es:(%rdi)
  17:	65 2f                	gs (bad)
  19:	61                   	(bad)
  1a:	64 69 74 68 79 61 2f 	imul   $0x6f442f61,%fs:0x79(%rax,%rbp,2),%esi
  21:	44 6f 
  23:	63 75 6d             	movsxd 0x6d(%rbp),%esi
  26:	65 6e                	outsb  %gs:(%rsi),(%dx)
  28:	74 73                	je     9d <code_segment+0x95>
  2a:	2f                   	(bad)
  2b:	41                   	rex.B
  2c:	64 69 4f 53 2f 41 64 	imul   $0x6964412f,%fs:0x53(%rdi),%ecx
  33:	69 
  34:	4f 53                	rex.WRXB push %r11
  36:	2f                   	(bad)
  37:	6b 65 72 6e          	imul   $0x6e,0x72(%rbp),%esp
  3b:	65 6c                	gs insb (%dx),%es:(%rdi)
  3d:	00 47 4e             	add    %al,0x4e(%rdi)
  40:	55                   	push   %rbp
  41:	20 41 53             	and    %al,0x53(%rcx)
  44:	20 32                	and    %dh,(%rdx)
  46:	2e 34 34             	cs xor $0x34,%al
  49:	00 61 72             	add    %ah,0x72(%rcx)
  4c:	63 68 2f             	movsxd 0x2f(%rax),%ebp
  4f:	78 38                	js     89 <code_segment+0x81>
  51:	36 5f                	ss pop %rdi
  53:	36 34 2f             	ss xor $0x2f,%al
  56:	62                   	(bad)
  57:	6f                   	outsl  %ds:(%rsi),(%dx)
  58:	6f                   	outsl  %ds:(%rsi),(%dx)
  59:	74 2e                	je     89 <code_segment+0x81>
  5b:	53                   	push   %rbx
  5c:	00 5f 73             	add    %bl,0x73(%rdi)
  5f:	74 61                	je     c2 <code_segment+0xba>
  61:	72 74                	jb     d7 <code_segment+0xcf>
  63:	00 76 69             	add    %dh,0x69(%rsi)
  66:	64 65 6f             	fs outsl %gs:(%rsi),(%dx)
  69:	5f                   	pop    %rdi
  6a:	6d                   	insl   (%dx),%es:(%rdi)
  6b:	65 6d                	gs insl (%dx),%es:(%rdi)
  6d:	6f                   	outsl  %ds:(%rsi),(%dx)
  6e:	72 79                	jb     e9 <code_segment+0xe1>
  70:	00 74 65 72          	add    %dh,0x72(%rbp,%riz,2)
  74:	6d                   	insl   (%dx),%es:(%rdi)
  75:	69 6e 61 6c 5f 77 72 	imul   $0x72775f6c,0x61(%rsi),%ebp
  7c:	69 74 65 73 74 72 69 	imul   $0x6e697274,0x73(%rbp,%riz,2),%esi
  83:	6e 
  84:	67 00 74 65 72       	add    %dh,0x72(%ebp,%eiz,2)
  89:	6d                   	insl   (%dx),%es:(%rdi)
  8a:	69 6e 61 6c 5f 70 75 	imul   $0x75705f6c,0x61(%rsi),%ebp
  91:	74 63                	je     f6 <code_segment+0xee>
  93:	68 61 72 00 73       	push   $0x73007261
  98:	69 7a 65 5f 74 00 74 	imul   $0x7400745f,0x65(%rdx),%edi
  9f:	65 72 6d             	gs jb  10f <code_segment+0x107>
  a2:	69 6e 61 6c 5f 62 75 	imul   $0x75625f6c,0x61(%rsi),%ebp
  a9:	66 66 65 72 00       	data16 data16 gs jb ae <code_segment+0xa6>
  ae:	56                   	push   %rsi
  af:	47                   	rex.RXB
  b0:	41 5f                	pop    %r15
  b2:	43                   	rex.XB
  b3:	4f                   	rex.WRXB
  b4:	4c                   	rex.WR
  b5:	4f 52                	rex.WRXB push %r10
  b7:	5f                   	pop    %rdi
  b8:	4d                   	rex.WRB
  b9:	41                   	rex.B
  ba:	47                   	rex.RXB
  bb:	45                   	rex.RB
  bc:	4e 54                	rex.WRX push %rsp
  be:	41 00 63 68          	add    %spl,0x68(%r11)
  c2:	61                   	(bad)
  c3:	72 61                	jb     126 <code_segment+0x11e>
  c5:	63 74 65 72          	movsxd 0x72(%rbp,%riz,2),%esi
  c9:	00 56 47             	add    %dl,0x47(%rsi)
  cc:	41 5f                	pop    %r15
  ce:	43                   	rex.XB
  cf:	4f                   	rex.WRXB
  d0:	4c                   	rex.WR
  d1:	4f 52                	rex.WRXB push %r10
  d3:	5f                   	pop    %rdi
  d4:	4c                   	rex.WR
  d5:	49                   	rex.WB
  d6:	47                   	rex.RXB
  d7:	48 54                	rex.W push %rsp
  d9:	5f                   	pop    %rdi
  da:	47 52                	rex.RXB push %r10
  dc:	45                   	rex.RB
  dd:	45                   	rex.RB
  de:	4e 00 56 47          	rex.WRX add %r10b,0x47(%rsi)
  e2:	41 5f                	pop    %r15
  e4:	4d                   	rex.WRB
  e5:	45                   	rex.RB
  e6:	4d                   	rex.WRB
  e7:	4f 52                	rex.WRXB push %r10
  e9:	59                   	pop    %rcx
  ea:	00 76 67             	add    %dh,0x67(%rsi)
  ed:	61                   	(bad)
  ee:	5f                   	pop    %rdi
  ef:	63 6f 6c             	movsxd 0x6c(%rdi),%ebp
  f2:	6f                   	outsl  %ds:(%rsi),(%dx)
  f3:	72 00                	jb     f5 <code_segment+0xed>
  f5:	64 61                	fs (bad)
  f7:	74 61                	je     15a <code_segment+0x152>
  f9:	00 74 65 72          	add    %dh,0x72(%rbp,%riz,2)
  fd:	6d                   	insl   (%dx),%es:(%rdi)
  fe:	69 6e 61 6c 5f 63 6f 	imul   $0x6f635f6c,0x61(%rsi),%ebp
 105:	6c                   	insb   (%dx),%es:(%rdi)
 106:	75 6d                	jne    175 <code_segment+0x16d>
 108:	6e                   	outsb  %ds:(%rsi),(%dx)
 109:	00 66 6f             	add    %ah,0x6f(%rsi)
 10c:	72 65                	jb     173 <code_segment+0x16b>
 10e:	67 72 6f             	addr32 jb 180 <code_segment+0x178>
 111:	75 6e                	jne    181 <code_segment+0x179>
 113:	64 00 73 74          	add    %dh,%fs:0x74(%rbx)
 117:	72 6c                	jb     185 <code_segment+0x17d>
 119:	65 6e                	outsb  %gs:(%rsi),(%dx)
 11b:	00 56 47             	add    %dl,0x47(%rsi)
 11e:	41 5f                	pop    %r15
 120:	43                   	rex.XB
 121:	4f                   	rex.WRXB
 122:	4c                   	rex.WR
 123:	4f 52                	rex.WRXB push %r10
 125:	5f                   	pop    %rdi
 126:	4c                   	rex.WR
 127:	49                   	rex.WB
 128:	47                   	rex.RXB
 129:	48 54                	rex.W push %rsp
 12b:	5f                   	pop    %rdi
 12c:	47 52                	rex.RXB push %r10
 12e:	45 59                	rex.RB pop %r9
 130:	00 76 67             	add    %dh,0x67(%rsi)
 133:	61                   	(bad)
 134:	5f                   	pop    %rdi
 135:	65 6e                	outsb  %gs:(%rsi),(%dx)
 137:	74 72                	je     1ab <code_segment+0x1a3>
 139:	79 00                	jns    13b <code_segment+0x133>
 13b:	74 65                	je     1a2 <code_segment+0x19a>
 13d:	72 6d                	jb     1ac <code_segment+0x1a4>
 13f:	69 6e 61 6c 5f 64 65 	imul   $0x65645f6c,0x61(%rsi),%ebp
 146:	6c                   	insb   (%dx),%es:(%rdi)
 147:	65 74 65             	gs je  1af <code_segment+0x1a7>
 14a:	5f                   	pop    %rdi
 14b:	6c                   	insb   (%dx),%es:(%rdi)
 14c:	61                   	(bad)
 14d:	73 74                	jae    1c3 <code_segment+0x1bb>
 14f:	5f                   	pop    %rdi
 150:	6c                   	insb   (%dx),%es:(%rdi)
 151:	69 6e 65 00 75 6e 73 	imul   $0x736e7500,0x65(%rsi),%ebp
 158:	69 67 6e 65 64 20 63 	imul   $0x63206465,0x6e(%rdi),%esp
 15f:	68 61 72 00 76       	push   $0x76007261
 164:	67 61                	addr32 (bad)
 166:	5f                   	pop    %rdi
 167:	65 6e                	outsb  %gs:(%rsi),(%dx)
 169:	74 72                	je     1dd <code_segment+0x1d5>
 16b:	79 5f                	jns    1cc <code_segment+0x1c4>
 16d:	63 6f 6c             	movsxd 0x6c(%rdi),%ebp
 170:	6f                   	outsl  %ds:(%rsi),(%dx)
 171:	72 00                	jb     173 <code_segment+0x16b>
 173:	6c                   	insb   (%dx),%es:(%rdi)
 174:	6f                   	outsl  %ds:(%rsi),(%dx)
 175:	6e                   	outsb  %ds:(%rsi),(%dx)
 176:	67 20 75 6e          	and    %dh,0x6e(%ebp)
 17a:	73 69                	jae    1e5 <code_segment+0x1dd>
 17c:	67 6e                	outsb  %ds:(%esi),(%dx)
 17e:	65 64 20 69 6e       	gs and %ch,%fs:0x6e(%rcx)
 183:	74 00                	je     185 <code_segment+0x17d>
 185:	73 68                	jae    1ef <code_segment+0x1e7>
 187:	6f                   	outsl  %ds:(%rsi),(%dx)
 188:	72 74                	jb     1fe <code_segment+0x1f6>
 18a:	20 75 6e             	and    %dh,0x6e(%rbp)
 18d:	73 69                	jae    1f8 <code_segment+0x1f0>
 18f:	67 6e                	outsb  %ds:(%esi),(%dx)
 191:	65 64 20 69 6e       	gs and %ch,%fs:0x6e(%rcx)
 196:	74 00                	je     198 <code_segment+0x190>
 198:	56                   	push   %rsi
 199:	47                   	rex.RXB
 19a:	41 5f                	pop    %r15
 19c:	43                   	rex.XB
 19d:	4f                   	rex.WRXB
 19e:	4c                   	rex.WR
 19f:	4f 52                	rex.WRXB push %r10
 1a1:	5f                   	pop    %rdi
 1a2:	52                   	push   %rdx
 1a3:	45                   	rex.RB
 1a4:	44 00 62 61          	add    %r12b,0x61(%rdx)
 1a8:	63 6b 67             	movsxd 0x67(%rbx),%ebp
 1ab:	72 6f                	jb     21c <code_segment+0x214>
 1ad:	75 6e                	jne    21d <code_segment+0x215>
 1af:	64 00 56 47          	add    %dl,%fs:0x47(%rsi)
 1b3:	41 5f                	pop    %r15
 1b5:	43                   	rex.XB
 1b6:	4f                   	rex.WRXB
 1b7:	4c                   	rex.WR
 1b8:	4f 52                	rex.WRXB push %r10
 1ba:	5f                   	pop    %rdi
 1bb:	4c                   	rex.WR
 1bc:	49                   	rex.WB
 1bd:	47                   	rex.RXB
 1be:	48 54                	rex.W push %rsp
 1c0:	5f                   	pop    %rdi
 1c1:	42                   	rex.X
 1c2:	4c 55                	rex.WR push %rbp
 1c4:	45 00 74 65 72       	add    %r14b,0x72(%r13,%riz,2)
 1c9:	6d                   	insl   (%dx),%es:(%rdi)
 1ca:	69 6e 61 6c 5f 63 6f 	imul   $0x6f635f6c,0x61(%rsi),%ebp
 1d1:	6c                   	insb   (%dx),%es:(%rdi)
 1d2:	6f                   	outsl  %ds:(%rsi),(%dx)
 1d3:	72 00                	jb     1d5 <code_segment+0x1cd>
 1d5:	74 65                	je     23c <code_segment+0x234>
 1d7:	72 6d                	jb     246 <code_segment+0x23e>
 1d9:	69 6e 61 6c 5f 77 72 	imul   $0x72775f6c,0x61(%rsi),%ebp
 1e0:	69 74 65 00 56 47 41 	imul   $0x5f414756,0x0(%rbp,%riz,2),%esi
 1e7:	5f 
 1e8:	43                   	rex.XB
 1e9:	4f                   	rex.WRXB
 1ea:	4c                   	rex.WR
 1eb:	4f 52                	rex.WRXB push %r10
 1ed:	5f                   	pop    %rdi
 1ee:	42                   	rex.X
 1ef:	4c 55                	rex.WR push %rbp
 1f1:	45 00 56 47          	add    %r10b,0x47(%r14)
 1f5:	41 5f                	pop    %r15
 1f7:	43                   	rex.XB
 1f8:	4f                   	rex.WRXB
 1f9:	4c                   	rex.WR
 1fa:	4f 52                	rex.WRXB push %r10
 1fc:	5f                   	pop    %rdi
 1fd:	4c                   	rex.WR
 1fe:	49                   	rex.WB
 1ff:	47                   	rex.RXB
 200:	48 54                	rex.W push %rsp
 202:	5f                   	pop    %rdi
 203:	52                   	push   %rdx
 204:	45                   	rex.RB
 205:	44 00 56 47          	add    %r10b,0x47(%rsi)
 209:	41 5f                	pop    %r15
 20b:	43                   	rex.XB
 20c:	4f                   	rex.WRXB
 20d:	4c                   	rex.WR
 20e:	4f 52                	rex.WRXB push %r10
 210:	5f                   	pop    %rdi
 211:	44                   	rex.R
 212:	41 52                	push   %r10
 214:	4b 5f                	rex.WXB pop %r15
 216:	47 52                	rex.RXB push %r10
 218:	45 59                	rex.RB pop %r9
 21a:	00 56 47             	add    %dl,0x47(%rsi)
 21d:	41 5f                	pop    %r15
 21f:	48                   	rex.W
 220:	45                   	rex.RB
 221:	49                   	rex.WB
 222:	47                   	rex.RXB
 223:	48 54                	rex.W push %rsp
 225:	00 73 69             	add    %dh,0x69(%rbx)
 228:	7a 65                	jp     28f <code_segment+0x287>
 22a:	00 75 69             	add    %dh,0x69(%rbp)
 22d:	6e                   	outsb  %ds:(%rsi),(%dx)
 22e:	74 38                	je     268 <code_segment+0x260>
 230:	5f                   	pop    %rdi
 231:	74 00                	je     233 <code_segment+0x22b>
 233:	56                   	push   %rsi
 234:	47                   	rex.RXB
 235:	41 5f                	pop    %r15
 237:	43                   	rex.XB
 238:	4f                   	rex.WRXB
 239:	4c                   	rex.WR
 23a:	4f 52                	rex.WRXB push %r10
 23c:	5f                   	pop    %rdi
 23d:	42 52                	rex.X push %rdx
 23f:	4f 57                	rex.WRXB push %r15
 241:	4e 00 56 47          	rex.WRX add %r10b,0x47(%rsi)
 245:	41 5f                	pop    %r15
 247:	43                   	rex.XB
 248:	4f                   	rex.WRXB
 249:	4c                   	rex.WR
 24a:	4f 52                	rex.WRXB push %r10
 24c:	5f                   	pop    %rdi
 24d:	4c                   	rex.WR
 24e:	49                   	rex.WB
 24f:	47                   	rex.RXB
 250:	48 54                	rex.W push %rsp
 252:	5f                   	pop    %rdi
 253:	43 59                	rex.XB pop %r9
 255:	41                   	rex.B
 256:	4e 00 56 47          	rex.WRX add %r10b,0x47(%rsi)
 25a:	41 5f                	pop    %r15
 25c:	43                   	rex.XB
 25d:	4f                   	rex.WRXB
 25e:	4c                   	rex.WR
 25f:	4f 52                	rex.WRXB push %r10
 261:	5f                   	pop    %rdi
 262:	4c                   	rex.WR
 263:	49                   	rex.WB
 264:	47                   	rex.RXB
 265:	48 54                	rex.W push %rsp
 267:	5f                   	pop    %rdi
 268:	4d                   	rex.WRB
 269:	41                   	rex.B
 26a:	47                   	rex.RXB
 26b:	45                   	rex.RB
 26c:	4e 54                	rex.WRX push %rsp
 26e:	41 00 56 47          	add    %dl,0x47(%r14)
 272:	41 5f                	pop    %r15
 274:	43                   	rex.XB
 275:	4f                   	rex.WRXB
 276:	4c                   	rex.WR
 277:	4f 52                	rex.WRXB push %r10
 279:	5f                   	pop    %rdi
 27a:	57                   	push   %rdi
 27b:	48                   	rex.W
 27c:	49 54                	rex.WB push %r12
 27e:	45 00 74 65 72       	add    %r14b,0x72(%r13,%riz,2)
 283:	6d                   	insl   (%dx),%es:(%rdi)
 284:	69 6e 61 6c 5f 69 6e 	imul   $0x6e695f6c,0x61(%rsi),%ebp
 28b:	69 74 69 61 6c 69 7a 	imul   $0x657a696c,0x61(%rcx,%rbp,2),%esi
 292:	65 
 293:	00 56 47             	add    %dl,0x47(%rsi)
 296:	41 5f                	pop    %r15
 298:	43                   	rex.XB
 299:	4f                   	rex.WRXB
 29a:	4c                   	rex.WR
 29b:	4f 52                	rex.WRXB push %r10
 29d:	5f                   	pop    %rdi
 29e:	43 59                	rex.XB pop %r9
 2a0:	41                   	rex.B
 2a1:	4e 00 6c 6f 6e       	rex.WRX add %r13b,0x6e(%rdi,%r13,2)
 2a6:	67 20 6c 6f 6e       	and    %ch,0x6e(%edi,%ebp,2)
 2ab:	67 20 69 6e          	and    %ch,0x6e(%ecx)
 2af:	74 00                	je     2b1 <code_segment+0x2a9>
 2b1:	56                   	push   %rsi
 2b2:	47                   	rex.RXB
 2b3:	41 5f                	pop    %r15
 2b5:	57                   	push   %rdi
 2b6:	49                   	rex.WB
 2b7:	44 54                	rex.R push %rsp
 2b9:	48 00 73 68          	rex.W add %sil,0x68(%rbx)
 2bd:	6f                   	outsl  %ds:(%rsi),(%dx)
 2be:	72 74                	jb     334 <code_segment+0x32c>
 2c0:	20 69 6e             	and    %ch,0x6e(%rcx)
 2c3:	74 00                	je     2c5 <code_segment+0x2bd>
 2c5:	75 69                	jne    330 <code_segment+0x328>
 2c7:	6e                   	outsb  %ds:(%rsi),(%dx)
 2c8:	74 31                	je     2fb <code_segment+0x2f3>
 2ca:	36 5f                	ss pop %rdi
 2cc:	74 00                	je     2ce <code_segment+0x2c6>
 2ce:	74 65                	je     335 <code_segment+0x32d>
 2d0:	72 6d                	jb     33f <code_segment+0x337>
 2d2:	69 6e 61 6c 5f 73 63 	imul   $0x63735f6c,0x61(%rsi),%ebp
 2d9:	72 6f                	jb     34a <code_segment+0x342>
 2db:	6c                   	insb   (%dx),%es:(%rdi)
 2dc:	6c                   	insb   (%dx),%es:(%rdi)
 2dd:	00 56 47             	add    %dl,0x47(%rsi)
 2e0:	41 5f                	pop    %r15
 2e2:	43                   	rex.XB
 2e3:	4f                   	rex.WRXB
 2e4:	4c                   	rex.WR
 2e5:	4f 52                	rex.WRXB push %r10
 2e7:	5f                   	pop    %rdi
 2e8:	4c                   	rex.WR
 2e9:	49                   	rex.WB
 2ea:	47                   	rex.RXB
 2eb:	48 54                	rex.W push %rsp
 2ed:	5f                   	pop    %rdi
 2ee:	42 52                	rex.X push %rdx
 2f0:	4f 57                	rex.WRXB push %r15
 2f2:	4e 00 74 65 72       	rex.WRX add %r14b,0x72(%rbp,%r12,2)
 2f7:	6d                   	insl   (%dx),%es:(%rdi)
 2f8:	69 6e 61 6c 5f 73 65 	imul   $0x65735f6c,0x61(%rsi),%ebp
 2ff:	74 63                	je     364 <code_segment+0x35c>
 301:	6f                   	outsl  %ds:(%rsi),(%dx)
 302:	6c                   	insb   (%dx),%es:(%rdi)
 303:	6f                   	outsl  %ds:(%rsi),(%dx)
 304:	72 00                	jb     306 <code_segment+0x2fe>
 306:	74 65                	je     36d <code_segment+0x365>
 308:	72 6d                	jb     377 <code_segment+0x36f>
 30a:	69 6e 61 6c 5f 72 6f 	imul   $0x6f725f6c,0x61(%rsi),%ebp
 311:	77 00                	ja     313 <code_segment+0x30b>
 313:	6c                   	insb   (%dx),%es:(%rdi)
 314:	6f                   	outsl  %ds:(%rsi),(%dx)
 315:	6e                   	outsb  %ds:(%rsi),(%dx)
 316:	67 20 64 6f 75       	and    %ah,0x75(%edi,%ebp,2)
 31b:	62                   	(bad)
 31c:	6c                   	insb   (%dx),%es:(%rdi)
 31d:	65 00 56 47          	add    %dl,%gs:0x47(%rsi)
 321:	41 5f                	pop    %r15
 323:	43                   	rex.XB
 324:	4f                   	rex.WRXB
 325:	4c                   	rex.WR
 326:	4f 52                	rex.WRXB push %r10
 328:	5f                   	pop    %rdi
 329:	47 52                	rex.RXB push %r10
 32b:	45                   	rex.RB
 32c:	45                   	rex.RB
 32d:	4e 00 74 65 72       	rex.WRX add %r14b,0x72(%rbp,%r12,2)
 332:	6d                   	insl   (%dx),%es:(%rdi)
 333:	69 6e 61 6c 5f 70 75 	imul   $0x75705f6c,0x61(%rsi),%ebp
 33a:	74 65                	je     3a1 <code_segment+0x399>
 33c:	6e                   	outsb  %ds:(%rsi),(%dx)
 33d:	74 72                	je     3b1 <code_segment+0x3a9>
 33f:	79 61                	jns    3a2 <code_segment+0x39a>
 341:	74 00                	je     343 <code_segment+0x33b>
 343:	69 6e 64 65 78 00 56 	imul   $0x56007865,0x64(%rsi),%ebp
 34a:	47                   	rex.RXB
 34b:	41 5f                	pop    %r15
 34d:	43                   	rex.XB
 34e:	4f                   	rex.WRXB
 34f:	4c                   	rex.WR
 350:	4f 52                	rex.WRXB push %r10
 352:	5f                   	pop    %rdi
 353:	42                   	rex.X
 354:	4c                   	rex.WR
 355:	41                   	rex.B
 356:	43                   	rex.XB
 357:	4b 00 63 68          	rex.WXB add %spl,0x68(%r11)
 35b:	61                   	(bad)
 35c:	72 61                	jb     3bf <code_segment+0x3b7>
 35e:	63 74 65 72          	movsxd 0x72(%rbp,%riz,2),%esi
 362:	5f                   	pop    %rdi
 363:	63 6f 6c             	movsxd 0x6c(%rdi),%ebp
 366:	6f                   	outsl  %ds:(%rsi),(%dx)
 367:	72 00                	jb     369 <code_segment+0x361>
 369:	47                   	rex.RXB
 36a:	4e 55                	rex.WRX push %rbp
 36c:	20 43 31             	and    %al,0x31(%rbx)
 36f:	31 20                	xor    %esp,(%rax)
 371:	31 34 2e             	xor    %esi,(%rsi,%rbp,1)
 374:	32 2e                	xor    (%rsi),%ch
 376:	30 20                	xor    %ah,(%rax)
 378:	2d 6d 74 75 6e       	sub    $0x6e75746d,%eax
 37d:	65 3d 67 65 6e 65    	gs cmp $0x656e6567,%eax
 383:	72 69                	jb     3ee <code_segment+0x3e6>
 385:	63 20                	movsxd (%rax),%esp
 387:	2d 6d 61 72 63       	sub    $0x6372616d,%eax
 38c:	68 3d 78 38 36       	push   $0x3638783d
 391:	2d 36 34 20 2d       	sub    $0x2d203436,%eax
 396:	67 20 2d 4f 32 20 2d 	and    %ch,0x2d20324f(%eip)        # 2d2035ec <MAGIC+0x117285ea>
 39d:	73 74                	jae    413 <code_segment+0x40b>
 39f:	64 3d 67 6e 75 31    	fs cmp $0x31756e67,%eax
 3a5:	31 20                	xor    %esp,(%rax)
 3a7:	2d 66 66 72 65       	sub    $0x65726666,%eax
 3ac:	65 73 74             	gs jae 423 <code_segment+0x41b>
 3af:	61                   	(bad)
 3b0:	6e                   	outsb  %ds:(%rsi),(%dx)
 3b1:	64 69 6e 67 00 6b 65 	imul   $0x72656b00,%fs:0x67(%rsi),%ebp
 3b8:	72 
 3b9:	6e                   	outsb  %ds:(%rsi),(%dx)
 3ba:	65 6c                	gs insb (%dx),%es:(%rdi)
 3bc:	5f                   	pop    %rdi
 3bd:	6d                   	insl   (%dx),%es:(%rdi)
 3be:	61                   	(bad)
 3bf:	69 6e 00 61 72 63 68 	imul   $0x68637261,0x0(%rsi),%ebp
 3c6:	2f                   	(bad)
 3c7:	78 38                	js     401 <code_segment+0x3f9>
 3c9:	36 5f                	ss pop %rdi
 3cb:	36 34 2f             	ss xor $0x2f,%al
 3ce:	62                   	(bad)
 3cf:	6f                   	outsl  %ds:(%rsi),(%dx)
 3d0:	6f                   	outsl  %ds:(%rsi),(%dx)
 3d1:	74 36                	je     409 <code_segment+0x401>
 3d3:	34 2e                	xor    $0x2e,%al
 3d5:	53                   	push   %rbx
 3d6:	00 61 72             	add    %ah,0x72(%rcx)
 3d9:	63 68 2f             	movsxd 0x2f(%rax),%ebp
 3dc:	78 38                	js     416 <code_segment+0x40e>
 3de:	36 5f                	ss pop %rdi
 3e0:	36 34 2f             	ss xor $0x2f,%al
 3e3:	63 72 74             	movsxd 0x74(%rdx),%esi
 3e6:	6e                   	outsb  %ds:(%rsi),(%dx)
 3e7:	2e 53                	cs push %rbx
	...

Disassembly of section .debug_rnglists:

0000000000000000 <.debug_rnglists>:
   0:	1d 00 00 00 05       	sbb    $0x5000000,%eax
   5:	00 08                	add    %cl,(%rax)
   7:	00 00                	add    %al,(%rax)
   9:	00 00                	add    %al,(%rax)
   b:	00 07                	add    %al,(%rdi)
   d:	80 05 10 00 00 00 00 	addb   $0x0,0x10(%rip)        # 24 <code_segment+0x1c>
  14:	00 03                	add    %al,(%rbx)
  16:	07                   	(bad)
  17:	8f 05 10 00 00 00    	pop    0x10(%rip)        # 2d <code_segment+0x25>
  1d:	00 00                	add    %al,(%rax)
  1f:	03 00                	add    (%rax),%eax
  21:	a2 00 00 00 05 00 08 	movabs %al,0x80005000000
  28:	00 00 
  2a:	00 00                	add    %al,(%rax)
  2c:	00 04 0b             	add    %al,(%rbx,%rcx,1)
  2f:	10 04 20             	adc    %al,(%rax,%riz,1)
  32:	24 04                	and    $0x4,%al
  34:	2b 30                	sub    (%rax),%esi
  36:	04 3b                	add    $0x3b,%al
  38:	6d                   	insl   (%dx),%es:(%rdi)
  39:	00 04 0b             	add    %al,(%rbx,%rcx,1)
  3c:	10 04 20             	adc    %al,(%rax,%riz,1)
  3f:	24 04                	and    $0x4,%al
  41:	2b 30                	sub    (%rax),%esi
  43:	04 40                	add    $0x40,%al
  45:	60                   	(bad)
  46:	00 04 0b             	add    %al,(%rbx,%rcx,1)
  49:	10 04 20             	adc    %al,(%rax,%riz,1)
  4c:	24 04                	and    $0x4,%al
  4e:	2b 30                	sub    (%rax),%esi
  50:	04 50                	add    $0x50,%al
  52:	53                   	push   %rbx
  53:	04 53                	add    $0x53,%al
  55:	5b                   	pop    %rbx
  56:	00 04 80             	add    %al,(%rax,%rax,4)
  59:	01 80 01 04 84 01    	add    %eax,0x1840401(%rax)
  5f:	8b 01                	mov    (%rcx),%eax
  61:	04 8f                	add    $0x8f,%al
  63:	01 91 01 04 94 01    	add    %edx,0x1940401(%rcx)
  69:	9f                   	lahf
  6a:	01 00                	add    %eax,(%rax)
  6c:	04 90                	add    $0x90,%al
  6e:	02 c0                	add    %al,%al
  70:	02 04 c0             	add    (%rax,%rax,8),%al
  73:	02 c0                	add    %al,%al
  75:	02 04 c3             	add    (%rbx,%rax,8),%al
  78:	02 c3                	add    %bl,%al
  7a:	02 00                	add    (%rax),%al
  7c:	04 e7                	add    $0xe7,%al
  7e:	02 f2                	add    %dl,%dh
  80:	02 04 f9             	add    (%rcx,%rdi,8),%al
  83:	02 98 03 00 04 e7    	add    -0x18fbfffd(%rax),%bl
  89:	02 f2                	add    %dl,%dh
  8b:	02 04 f9             	add    (%rcx,%rdi,8),%al
  8e:	02 fc                	add    %ah,%bh
  90:	02 04 80             	add    (%rax,%rax,4),%al
  93:	03 83 03 04 87 03    	add    0x3870403(%rbx),%eax
  99:	8e 03                	mov    (%rbx),%es
  9b:	04 91                	add    $0x91,%al
  9d:	03 98 03 00 04 d1    	add    -0x2efbfffd(%rax),%ebx
  a3:	03 d6                	add    %esi,%edx
  a5:	03 04 e0             	add    (%rax,%riz,8),%eax
  a8:	03 9e 04 00 04 ed    	add    -0x12fbfffc(%rsi),%ebx
  ae:	03 80 04 04 80 04    	add    0x4800404(%rax),%eax
  b4:	80 04 04 83          	addb   $0x83,(%rsp,%rax,1)
  b8:	04 83                	add    $0x83,%al
  ba:	04 00                	add    $0x0,%al
  bc:	04 a0                	add    $0xa0,%al
  be:	04 a5                	add    $0xa5,%al
  c0:	04 04                	add    $0x4,%al
  c2:	b0 04                	mov    $0x4,%al
  c4:	c2 04 00             	ret    $0x4
  c7:	1d 00 00 00 05       	sbb    $0x5000000,%eax
  cc:	00 08                	add    %cl,(%rax)
  ce:	00 00                	add    %al,(%rax)
  d0:	00 00                	add    %al,(%rax)
  d2:	00 07                	add    %al,(%rdi)
  d4:	8d 05 10 00 00 00    	lea    0x10(%rip),%eax        # ea <code_segment+0xe2>
  da:	00 00                	add    %al,(%rax)
  dc:	02 07                	add    (%rdi),%al
  de:	97                   	xchg   %eax,%edi
  df:	05 10 00 00 00       	add    $0x10,%eax
  e4:	00 00                	add    %al,(%rax)
  e6:	02 00                	add    (%rax),%al

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 47 4e             	sub    %al,0x4e(%rdi)
   8:	55                   	push   %rbp
   9:	29 20                	sub    %esp,(%rax)
   b:	31 34 2e             	xor    %esi,(%rsi,%rbp,1)
   e:	32 2e                	xor    (%rsi),%ch
  10:	30 00                	xor    %al,(%rax)

Disassembly of section .debug_loclists:

0000000000000000 <.debug_loclists>:
   0:	5b                   	pop    %rbx
   1:	03 00                	add    (%rax),%eax
   3:	00 05 00 08 00 00    	add    %al,0x800(%rip)        # 809 <code_segment+0x801>
	...
  11:	00 04 d0             	add    %al,(%rax,%rdx,8)
  14:	04 e0                	add    $0xe0,%al
  16:	04 01                	add    $0x1,%al
  18:	55                   	push   %rbp
  19:	04 e0                	add    $0xe0,%al
  1b:	04 ea                	add    $0xea,%al
  1d:	04 01                	add    $0x1,%al
  1f:	53                   	push   %rbx
  20:	04 ea                	add    $0xea,%al
  22:	04 87                	add    $0x87,%al
  24:	05 04 a3 01 55       	add    $0x5501a304,%eax
  29:	9f                   	lahf
  2a:	00 00                	add    %al,(%rax)
  2c:	00 00                	add    %al,(%rax)
  2e:	00 04 e1             	add    %al,(%rcx,%riz,8)
  31:	04 ea                	add    $0xea,%al
  33:	04 01                	add    $0x1,%al
  35:	53                   	push   %rbx
  36:	04 ea                	add    $0xea,%al
  38:	04 87                	add    $0x87,%al
  3a:	05 04 a3 01 55       	add    $0x5501a304,%eax
  3f:	9f                   	lahf
  40:	00 00                	add    %al,(%rax)
  42:	00 04 e1             	add    %al,(%rcx,%riz,8)
  45:	04 ea                	add    $0xea,%al
  47:	04 01                	add    $0x1,%al
  49:	50                   	push   %rax
  4a:	00 03                	add    %al,(%rbx)
  4c:	00 00                	add    %al,(%rax)
  4e:	00 00                	add    %al,(%rax)
  50:	01 04 e1             	add    %eax,(%rcx,%riz,8)
  53:	04 ea                	add    $0xea,%al
  55:	04 02                	add    $0x2,%al
  57:	30 9f 04 ea 04 f7    	xor    %bl,-0x8fb15fc(%rdi)
  5d:	04 07                	add    $0x7,%al
  5f:	73 00                	jae    61 <code_segment+0x59>
  61:	a3 01 55 1c 9f 04 f7 	movabs %eax,0xfc04f7049f1c5501
  68:	04 fc 
  6a:	04 08                	add    $0x8,%al
  6c:	a3 01 55 20 73 00 22 	movabs %eax,0x9f220073205501
  73:	9f 00 
  75:	04 00                	add    $0x0,%al
  77:	00 01                	add    %al,(%rcx)
  79:	01 00                	add    %eax,(%rax)
  7b:	04 a0                	add    $0xa0,%al
  7d:	01 b8 01 01 55 04    	add    %edi,0x4550101(%rax)
  83:	b8 01 f3 01 01       	mov    $0x101f301,%eax
  88:	54                   	push   %rsp
  89:	04 f3                	add    $0xf3,%al
  8b:	01 f7                	add    %esi,%edi
  8d:	01 03                	add    %eax,(%rbx)
  8f:	74 01                	je     92 <code_segment+0x8a>
  91:	9f                   	lahf
  92:	00 00                	add    %al,(%rax)
  94:	00 00                	add    %al,(%rax)
  96:	00 00                	add    %al,(%rax)
  98:	01 04 b8             	add    %eax,(%rax,%rdi,4)
  9b:	01 c7                	add    %eax,%edi
  9d:	01 02                	add    %eax,(%rdx)
  9f:	30 9f 04 e0 01 e7    	xor    %bl,-0x18fe1ffc(%rdi)
  a5:	01 15 70 00 74 01    	add    %edx,0x1740070(%rip)        # 174011b <terminal_row+0x16390b3>
  ab:	08 20                	or     %ah,(%rax)
  ad:	24 08                	and    $0x8,%al
  af:	20 26                	and    %ah,(%rsi)
  b1:	08 a0 1e 1c 47 3f    	or     %ah,0x3f471c1e(%rax)
  b7:	24 1c                	and    $0x1c,%al
  b9:	31 25 9f 04 e7 01    	xor    %esp,0x1e7049f(%rip)        # 1e7055e <terminal_row+0x1d694f6>
  bf:	ee                   	out    %al,(%dx)
  c0:	01 17                	add    %edx,(%rdi)
  c2:	70 00                	jo     c4 <code_segment+0xbc>
  c4:	74 01                	je     c7 <code_segment+0xbf>
  c6:	08 20                	or     %ah,(%rax)
  c8:	24 08                	and    $0x8,%al
  ca:	20 26                	and    %ah,(%rsi)
  cc:	08 a0 1e 1c 0c 02    	or     %ah,0x20c1c1e(%rax)
  d2:	80 0b 00             	orb    $0x0,(%rbx)
  d5:	1c 31                	sbb    $0x31,%al
  d7:	25 9f 00 00 00       	and    $0x9f,%eax
  dc:	00 00                	add    %al,(%rax)
  de:	04 70                	add    $0x70,%al
  e0:	73 01                	jae    e3 <code_segment+0xdb>
  e2:	54                   	push   %rsp
  e3:	04 73                	add    $0x73,%al
  e5:	7d 04                	jge    eb <code_segment+0xe3>
  e7:	a3 01 54 9f 00 02 04 	movabs %eax,0x70040402009f5401
  ee:	04 70 
  f0:	70 01                	jo     f3 <code_segment+0xeb>
  f2:	55                   	push   %rbp
  f3:	00 02                	add    %al,(%rdx)
  f5:	04 04                	add    $0x4,%al
  f7:	70 70                	jo     169 <code_segment+0x161>
  f9:	01 54 00 02          	add    %edx,0x2(%rax,%rax,1)
  fd:	00 04 3b             	add    %al,(%rbx,%rdi,1)
 100:	3b 02                	cmp    (%rdx),%eax
 102:	30 9f 00 00 00 04    	xor    %bl,0x4000000(%rdi)
 108:	3b 47 02             	cmp    0x2(%rdi),%eax
 10b:	30 9f 00 00 00 00    	xor    %bl,0x0(%rdi)
 111:	00 04 80             	add    %al,(%rax,%rax,4)
 114:	01 87 01 01 54 04    	add    %eax,0x4540101(%rdi)
 11a:	87 01                	xchg   %eax,(%rcx)
 11c:	a0 01 04 a3 01 54 9f 	movabs 0x9f5401a30401,%al
 123:	00 00 
 125:	00 00                	add    %al,(%rax)
 127:	00 04 80             	add    %al,(%rax,%rax,4)
 12a:	01 9b 01 01 51 04    	add    %ebx,0x4510101(%rbx)
 130:	9b                   	fwait
 131:	01 a0 01 04 a3 01    	add    %esp,0x1a30401(%rax)
 137:	51                   	push   %rcx
 138:	9f                   	lahf
 139:	00 02                	add    %al,(%rdx)
 13b:	00 00                	add    %al,(%rax)
 13d:	00 04 80             	add    %al,(%rax,%rax,4)
 140:	01 9b 01 09 72 00    	add    %ebx,0x720901(%rbx)
 146:	08 50 1e             	or     %dl,0x1e(%rax)
 149:	71 00                	jno    14b <code_segment+0x143>
 14b:	22 9f 04 9b 01 a0    	and    -0x5ffe64fc(%rdi),%bl
 151:	01 0a                	add    %ecx,(%rdx)
 153:	72 00                	jb     155 <code_segment+0x14d>
 155:	08 50 1e             	or     %dl,0x1e(%rax)
 158:	a3 01 51 22 9f 00 03 	movabs %eax,0x40503009f225101
 15f:	05 04 
 161:	80 01 80             	addb   $0x80,(%rcx)
 164:	01 01                	add    %eax,(%rcx)
 166:	55                   	push   %rbp
 167:	00 03                	add    %al,(%rbx)
 169:	05 04 80 01 80       	add    $0x80018004,%eax
 16e:	01 01                	add    %eax,(%rcx)
 170:	54                   	push   %rsp
 171:	00 04 00             	add    %al,(%rax,%rax,1)
 174:	00 01                	add    %al,(%rcx)
 176:	01 02                	add    %eax,(%rdx)
 178:	02 00                	add    (%rax),%al
 17a:	00 01                	add    %al,(%rcx)
 17c:	01 00                	add    %eax,(%rax)
 17e:	04 90                	add    $0x90,%al
 180:	02 a2 02 02 30 9f    	add    -0x60cffdfe(%rdx),%ah
 186:	04 c0                	add    $0xc0,%al
 188:	02 c3                	add    %bl,%al
 18a:	02 07                	add    (%rdi),%al
 18c:	70 80                	jo     10e <code_segment+0x106>
 18e:	e2 51                	loop   1e1 <code_segment+0x1d9>
 190:	31 25 9f 04 c3 02    	xor    %esp,0x2c3049f(%rip)        # 2c30635 <terminal_row+0x2b295cd>
 196:	c3                   	ret
 197:	02 09                	add    (%rcx),%cl
 199:	70 80                	jo     11b <code_segment+0x113>
 19b:	e2 51                	loop   1ee <code_segment+0x1e6>
 19d:	31 25 23 01 9f 04    	xor    %esp,0x49f0123(%rip)        # 49f02c6 <terminal_row+0x48e925e>
 1a3:	c3                   	ret
 1a4:	02 c7                	add    %bh,%al
 1a6:	02 07                	add    (%rdi),%al
 1a8:	70 82                	jo     12c <code_segment+0x124>
 1aa:	e2 51                	loop   1fd <code_segment+0x1f5>
 1ac:	31 25 9f 04 c7 02    	xor    %esp,0x2c7049f(%rip)        # 2c70651 <terminal_row+0x2b695e9>
 1b2:	cb                   	lret
 1b3:	02 07                	add    (%rdi),%al
 1b5:	70 fe                	jo     1b5 <code_segment+0x1ad>
 1b7:	e1 51                	loope  20a <code_segment+0x202>
 1b9:	31 25 9f 04 cb 02    	xor    %esp,0x2cb049f(%rip)        # 2cb065e <terminal_row+0x2ba95f6>
 1bf:	d4                   	(bad)
 1c0:	02 09                	add    (%rcx),%cl
 1c2:	70 fe                	jo     1c2 <code_segment+0x1ba>
 1c4:	e1 51                	loope  217 <code_segment+0x20f>
 1c6:	31 25 23 01 9f 00    	xor    %esp,0x9f0123(%rip)        # 9f02ef <terminal_row+0x8e9287>
 1cc:	02 04 03             	add    (%rbx,%rax,1),%al
 1cf:	05 04 c0 02 c0       	add    $0xc002c004,%eax
 1d4:	02 03                	add    (%rbx),%al
 1d6:	08 20                	or     %ah,(%rax)
 1d8:	9f                   	lahf
 1d9:	04 c3                	add    $0xc3,%al
 1db:	02 c3                	add    %bl,%al
 1dd:	02 03                	add    (%rbx),%al
 1df:	08 20                	or     %ah,(%rax)
 1e1:	9f                   	lahf
 1e2:	00 02                	add    %al,(%rdx)
 1e4:	04 03                	add    $0x3,%al
 1e6:	05 04 c0 02 c0       	add    $0xc002c004,%eax
 1eb:	02 09                	add    (%rcx),%cl
 1ed:	03 58 70             	add    0x70(%rax),%ebx
 1f0:	10 00                	adc    %al,(%rax)
 1f2:	00 00                	add    %al,(%rax)
 1f4:	00 00                	add    %al,(%rax)
 1f6:	04 c3                	add    $0xc3,%al
 1f8:	02 c3                	add    %bl,%al
 1fa:	02 09                	add    (%rcx),%cl
 1fc:	03 58 70             	add    0x70(%rax),%ebx
 1ff:	10 00                	adc    %al,(%rax)
	...
 209:	00 04 e0             	add    %al,(%rax,%riz,8)
 20c:	02 94 03 01 55 04 94 	add    -0x6bfbaaff(%rbx,%rax,1),%dl
 213:	03 a0 04 04 a3 01    	add    0x1a30404(%rax),%esp
 219:	55                   	push   %rbp
 21a:	9f                   	lahf
 21b:	00 03                	add    %al,(%rbx)
 21d:	00 00                	add    %al,(%rax)
 21f:	00 04 e0             	add    %al,(%rax,%riz,8)
 222:	02 94 03 01 55 04 94 	add    -0x6bfbaaff(%rbx,%rax,1),%dl
 229:	03 a0 04 04 a3 01    	add    0x1a30404(%rax),%esp
 22f:	55                   	push   %rbp
 230:	9f                   	lahf
 231:	00 00                	add    %al,(%rax)
 233:	00 04 f9             	add    %al,(%rcx,%rdi,8)
 236:	02 98 03 09 03 58    	add    0x58030903(%rax),%bl
 23c:	70 10                	jo     24e <code_segment+0x246>
	...
 246:	04 f9                	add    $0xf9,%al
 248:	02 98 03 01 54 00    	add    0x540103(%rax),%bl
 24e:	00 00                	add    %al,(%rax)
 250:	04 f9                	add    $0xf9,%al
 252:	02 98 03 01 52 00    	add    0x520103(%rax),%bl
 258:	02 00                	add    (%rax),%al
 25a:	04 f9                	add    $0xf9,%al
 25c:	02 98 03 09 72 00    	add    0x720903(%rax),%bl
 262:	08 50 1e             	or     %dl,0x1e(%rax)
 265:	74 00                	je     267 <code_segment+0x25f>
 267:	22 9f 00 03 00 04    	and    0x4000300(%rdi),%bl
 26d:	f9                   	stc
 26e:	02 83 03 09 03 58    	add    0x58030903(%rbx),%al
 274:	70 10                	jo     286 <code_segment+0x27e>
	...
 27e:	04 e0                	add    $0xe0,%al
 280:	03 9e 04 01 55 00    	add    0x550104(%rsi),%ebx
 286:	00 01                	add    %al,(%rcx)
 288:	01 02                	add    %eax,(%rdx)
 28a:	02 00                	add    (%rax),%al
 28c:	00 01                	add    %al,(%rcx)
 28e:	01 00                	add    %eax,(%rax)
 290:	04 80                	add    $0x80,%al
 292:	04 83                	add    $0x83,%al
 294:	04 07                	add    $0x7,%al
 296:	70 80                	jo     218 <code_segment+0x210>
 298:	e2 51                	loop   2eb <code_segment+0x2e3>
 29a:	31 25 9f 04 83 04    	xor    %esp,0x483049f(%rip)        # 483073f <terminal_row+0x47296d7>
 2a0:	83 04 09 70          	addl   $0x70,(%rcx,%rcx,1)
 2a4:	80 e2 51             	and    $0x51,%dl
 2a7:	31 25 23 01 9f 04    	xor    %esp,0x49f0123(%rip)        # 49f03d0 <terminal_row+0x48e9368>
 2ad:	83 04 87 04          	addl   $0x4,(%rdi,%rax,4)
 2b1:	07                   	(bad)
 2b2:	70 82                	jo     236 <code_segment+0x22e>
 2b4:	e2 51                	loop   307 <code_segment+0x2ff>
 2b6:	31 25 9f 04 87 04    	xor    %esp,0x487049f(%rip)        # 487075b <terminal_row+0x47696f3>
 2bc:	8b 04 07             	mov    (%rdi,%rax,1),%eax
 2bf:	70 fe                	jo     2bf <code_segment+0x2b7>
 2c1:	e1 51                	loope  314 <code_segment+0x30c>
 2c3:	31 25 9f 04 8b 04    	xor    %esp,0x48b049f(%rip)        # 48b0768 <terminal_row+0x47a9700>
 2c9:	93                   	xchg   %eax,%ebx
 2ca:	04 09                	add    $0x9,%al
 2cc:	70 fe                	jo     2cc <code_segment+0x2c4>
 2ce:	e1 51                	loope  321 <code_segment+0x319>
 2d0:	31 25 23 01 9f 00    	xor    %esp,0x9f0123(%rip)        # 9f03f9 <terminal_row+0x8e9391>
 2d6:	02 04 03             	add    (%rbx,%rax,1),%al
 2d9:	05 04 80 04 80       	add    $0x80048004,%eax
 2de:	04 03                	add    $0x3,%al
 2e0:	08 20                	or     %ah,(%rax)
 2e2:	9f                   	lahf
 2e3:	04 83                	add    $0x83,%al
 2e5:	04 83                	add    $0x83,%al
 2e7:	04 03                	add    $0x3,%al
 2e9:	08 20                	or     %ah,(%rax)
 2eb:	9f                   	lahf
 2ec:	00 00                	add    %al,(%rax)
 2ee:	00 00                	add    %al,(%rax)
 2f0:	00 00                	add    %al,(%rax)
 2f2:	00 04 a0             	add    %al,(%rax,%riz,4)
 2f5:	04 b0                	add    $0xb0,%al
 2f7:	04 01                	add    $0x1,%al
 2f9:	55                   	push   %rbp
 2fa:	04 b0                	add    $0xb0,%al
 2fc:	04 c4                	add    $0xc4,%al
 2fe:	04 04                	add    $0x4,%al
 300:	a3 01 55 9f 04 c4 04 	movabs %eax,0x4c904c4049f5501
 307:	c9 04 
 309:	01 55 00             	add    %edx,0x0(%rbp)
 30c:	00 00                	add    %al,(%rax)
 30e:	00 00                	add    %al,(%rax)
 310:	00 00                	add    %al,(%rax)
 312:	04 a0                	add    $0xa0,%al
 314:	04 b0                	add    $0xb0,%al
 316:	04 01                	add    $0x1,%al
 318:	54                   	push   %rsp
 319:	04 b0                	add    $0xb0,%al
 31b:	04 c4                	add    $0xc4,%al
 31d:	04 04                	add    $0x4,%al
 31f:	a3 01 54 9f 04 c4 04 	movabs %eax,0x4c904c4049f5401
 326:	c9 04 
 328:	01 54 00 03          	add    %edx,0x3(%rax,%rax,1)
 32c:	00 00                	add    %al,(%rax)
 32e:	00 00                	add    %al,(%rax)
 330:	01 00                	add    %eax,(%rax)
 332:	00 04 a0             	add    %al,(%rax,%riz,4)
 335:	04 b0                	add    $0xb0,%al
 337:	04 02                	add    $0x2,%al
 339:	30 9f 04 b0 04 b8    	xor    %bl,-0x47fb4ffc(%rdi)
 33f:	04 07                	add    $0x7,%al
 341:	79 00                	jns    343 <code_segment+0x33b>
 343:	a3 01 55 1c 9f 04 b8 	movabs %eax,0xbd04b8049f1c5501
 34a:	04 bd 
 34c:	04 08                	add    $0x8,%al
 34e:	a3 01 55 20 79 00 22 	movabs %eax,0x49f220079205501
 355:	9f 04 
 357:	c4                   	(bad)
 358:	04 c9                	add    $0xc9,%al
 35a:	04 02                	add    $0x2,%al
 35c:	30 9f 00 20 00 00    	xor    %bl,0x2000(%rdi)
 362:	00 05 00 08 00 00    	add    %al,0x800(%rip)        # b68 <code_segment+0xb60>
 368:	00 00                	add    %al,(%rax)
 36a:	00 02                	add    %al,(%rdx)
 36c:	00 00                	add    %al,(%rax)
 36e:	00 00                	add    %al,(%rax)
 370:	00 04 00             	add    %al,(%rax,%rax,1)
 373:	07                   	(bad)
 374:	02 30                	add    (%rax),%dh
 376:	9f                   	lahf
 377:	04 10                	add    $0x10,%al
 379:	1b 01                	sbb    (%rcx),%eax
 37b:	50                   	push   %rax
 37c:	04 1b                	add    $0x1b,%al
 37e:	21 02                	and    %eax,(%rdx)
 380:	30                   	.byte 0x30
 381:	9f                   	lahf
	...
