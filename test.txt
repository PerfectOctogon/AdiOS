
sysroot/boot/adios.kernel:     file format elf64-x86-64


Disassembly of section .text:

0000000000100000 <_start-0x13d>:
  100000:	02 b0 ad 1b 03 00    	add    0x31bad(%rax),%dh
  100006:	00 00                	add    %al,(%rax)
  100008:	fb                   	sti
  100009:	4f 52                	rex.WRXB push %r10
  10000b:	e4 0f                	in     $0xf,%al
  10000d:	1f                   	(bad)
  10000e:	40 00 b8 40 20 10 00 	add    %dil,0x102040(%rax)
  100015:	48 3d 40 20 10 00    	cmp    $0x102040,%rax
  10001b:	74 13                	je     100030 <data_segment+0x100020>
  10001d:	b8 00 00 00 00       	mov    $0x0,%eax
  100022:	48 85 c0             	test   %rax,%rax
  100025:	74 09                	je     100030 <data_segment+0x100020>
  100027:	bf 40 20 10 00       	mov    $0x102040,%edi
  10002c:	ff e0                	jmp    *%rax
  10002e:	66 90                	xchg   %ax,%ax
  100030:	c3                   	ret
  100031:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  100038:	00 00 00 00 
  10003c:	0f 1f 40 00          	nopl   0x0(%rax)
  100040:	be 40 20 10 00       	mov    $0x102040,%esi
  100045:	48 81 ee 40 20 10 00 	sub    $0x102040,%rsi
  10004c:	48 89 f0             	mov    %rsi,%rax
  10004f:	48 c1 ee 3f          	shr    $0x3f,%rsi
  100053:	48 c1 f8 03          	sar    $0x3,%rax
  100057:	48 01 c6             	add    %rax,%rsi
  10005a:	48 d1 fe             	sar    %rsi
  10005d:	74 11                	je     100070 <data_segment+0x100060>
  10005f:	b8 00 00 00 00       	mov    $0x0,%eax
  100064:	48 85 c0             	test   %rax,%rax
  100067:	74 07                	je     100070 <data_segment+0x100060>
  100069:	bf 40 20 10 00       	mov    $0x102040,%edi
  10006e:	ff e0                	jmp    *%rax
  100070:	c3                   	ret
  100071:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  100078:	00 00 00 00 
  10007c:	0f 1f 40 00          	nopl   0x0(%rax)
  100080:	80 3d 79 2f 00 00 00 	cmpb   $0x0,0x2f79(%rip)        # 103000 <__TMC_END__+0xfc0>
  100087:	75 77                	jne    100100 <data_segment+0x1000f0>
  100089:	55                   	push   %rbp
  10008a:	48 8b 05 77 2f 00 00 	mov    0x2f77(%rip),%rax        # 103008 <__TMC_END__+0xfc8>
  100091:	48 89 e5             	mov    %rsp,%rbp
  100094:	41 54                	push   %r12
  100096:	41 bc 30 20 10 00    	mov    $0x102030,%r12d
  10009c:	53                   	push   %rbx
  10009d:	bb 38 20 10 00       	mov    $0x102038,%ebx
  1000a2:	48 81 eb 30 20 10 00 	sub    $0x102030,%rbx
  1000a9:	48 c1 fb 03          	sar    $0x3,%rbx
  1000ad:	48 83 eb 01          	sub    $0x1,%rbx
  1000b1:	48 39 d8             	cmp    %rbx,%rax
  1000b4:	73 25                	jae    1000db <data_segment+0x1000cb>
  1000b6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
  1000bd:	00 00 00 
  1000c0:	48 83 c0 01          	add    $0x1,%rax
  1000c4:	48 89 05 3d 2f 00 00 	mov    %rax,0x2f3d(%rip)        # 103008 <__TMC_END__+0xfc8>
  1000cb:	41 ff 14 c4          	call   *(%r12,%rax,8)
  1000cf:	48 8b 05 32 2f 00 00 	mov    0x2f32(%rip),%rax        # 103008 <__TMC_END__+0xfc8>
  1000d6:	48 39 d8             	cmp    %rbx,%rax
  1000d9:	72 e5                	jb     1000c0 <data_segment+0x1000b0>
  1000db:	e8 30 ff ff ff       	call   100010 <data_segment+0x100000>
  1000e0:	b8 00 00 00 00       	mov    $0x0,%eax
  1000e5:	48 85 c0             	test   %rax,%rax
  1000e8:	74 0a                	je     1000f4 <data_segment+0x1000e4>
  1000ea:	bf 28 10 10 00       	mov    $0x101028,%edi
  1000ef:	e8 0c ff ef ff       	call   0 <ALIGN-0x1>
  1000f4:	5b                   	pop    %rbx
  1000f5:	41 5c                	pop    %r12
  1000f7:	c6 05 02 2f 00 00 01 	movb   $0x1,0x2f02(%rip)        # 103000 <__TMC_END__+0xfc0>
  1000fe:	5d                   	pop    %rbp
  1000ff:	c3                   	ret
  100100:	c3                   	ret
  100101:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  100108:	00 00 00 00 
  10010c:	0f 1f 40 00          	nopl   0x0(%rax)
  100110:	b8 00 00 00 00       	mov    $0x0,%eax
  100115:	48 85 c0             	test   %rax,%rax
  100118:	74 1e                	je     100138 <data_segment+0x100128>
  10011a:	55                   	push   %rbp
  10011b:	be 20 30 10 00       	mov    $0x103020,%esi
  100120:	bf 28 10 10 00       	mov    $0x101028,%edi
  100125:	48 89 e5             	mov    %rsp,%rbp
  100128:	e8 d3 fe ef ff       	call   0 <ALIGN-0x1>
  10012d:	5d                   	pop    %rbp
  10012e:	e9 0d ff ff ff       	jmp    100040 <data_segment+0x100030>
  100133:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  100138:	e9 03 ff ff ff       	jmp    100040 <data_segment+0x100030>

000000000010013d <_start>:
.type _start, @function
.extern long_mode_start

.code32
_start:
	movl $stack_top, %esp
  10013d:	bc 50 70 10 00       	mov    $0x107050,%esp
	# Call the global constructors.
	# call _init Not writing C++ code right now, so don't need to call the global constructors! (Also this doesn't really work right now)
	# Lets check for cpuid
	call checkcpuid
  100142:	e8 24 00 00 00       	call   10016b <checkcpuid>

	# Lets check for extended functionality
	call checkextfunc
  100147:	e8 37 00 00 00       	call   100183 <checkextfunc>

	# Now, lets set up page tables
	call setup_pagetables
  10014c:	e8 58 00 00 00       	call   1001a9 <setup_pagetables>

	# Now, we can enable paging
	call enable_pae_paging
  100151:	e8 9d 00 00 00       	call   1001f3 <enable_pae_paging>

0000000000100156 <load_gdt>:
	
	.code64
	load_gdt:
	lgdt .pointer
  100156:	0f 01 14 25 18 10 10 	lgdt   0x101018
  10015d:	00 
	movabsq $long_mode_start, %rax
  10015e:	48 b8 06 05 10 00 00 	movabs $0x100506,%rax
  100165:	00 00 00 
	// movabs
	call *%rax
  100168:	ff d0                	call   *%rax
	hlt
  10016a:	f4                   	hlt

000000000010016b <checkcpuid>:
.size _start, . - _start

.code32
# Check if CPUID exists
checkcpuid:
	pushf # Dump CPU flags into the stack
  10016b:	9c                   	pushf
	popl %eax # Pop the flags into the EAX register
  10016c:	58                   	pop    %rax
	movl %eax, %ecx # Storing a copy of these flags so we don't end up modifying the CPU flags
  10016d:	89 c1                	mov    %eax,%ecx
	xor $(1 << 21), %eax # Flipping the 21st bit. If we can flip this, we can use CPUID
  10016f:	35 00 00 20 00       	xor    $0x200000,%eax
	pushl %eax # Push the modified flags into the stack
  100174:	50                   	push   %rax
	popf # Put the modified flags into the CPU flags register
  100175:	9d                   	popf
	pushf # Lets check if the bit was flipped and restore the flags
  100176:	9c                   	pushf
	popl %eax
  100177:	58                   	pop    %rax
	pushl %ecx # ECX contains our original copy of our flags
  100178:	51                   	push   %rcx
	popf # Restore the flags
  100179:	9d                   	popf
	cmpl %eax, %ecx # Let's compare EAX and ECX
  10017a:	39 c1                	cmp    %eax,%ecx
	jz .nocpuid # If zero flag was set, then the bit was not flipped, so jump to nocpuid error
  10017c:	0f 84 a0 00 00 00    	je     100222 <.nocpuid>
	ret
  100182:	c3                   	ret

0000000000100183 <checkextfunc>:

# Check if extended functionality exists
checkextfunc:
	mov $0x80000000, %eax # Function number for querying extended functionality
  100183:	b8 00 00 00 80       	mov    $0x80000000,%eax
	cpuid
  100188:	0f a2                	cpuid
	cmp $0x80000001, %eax # Check if EAX got larger
  10018a:	3d 01 00 00 80       	cmp    $0x80000001,%eax
	jb .noextfunc
  10018f:	0f 82 91 00 00 00    	jb     100226 <.noextfunc>

	mov $0x80000001, %eax
  100195:	b8 01 00 00 80       	mov    $0x80000001,%eax
	cpuid # This will now store various CPU information into different registers
  10019a:	0f a2                	cpuid
	test $(1 << 29), %edx # Checking the 30th youngest bit of the EDX register to see if we have long mode support
  10019c:	f7 c2 00 00 00 20    	test   $0x20000000,%edx
	jz .nolongmode # If it's 0, we don't have long mode support
  1001a2:	0f 84 82 00 00 00    	je     10022a <.nolongmode>
	ret
  1001a8:	c3                   	ret

00000000001001a9 <setup_pagetables>:

setup_pagetables:
	# Temporarily disable paging
	mov %cr0, %eax
  1001a9:	0f 20 c0             	mov    %cr0,%rax
	and $~(1 << 31), %eax # Flipping the oldest bit in control register 0
  1001ac:	25 ff ff ff 7f       	and    $0x7fffffff,%eax
	mov %eax, %cr0
  1001b1:	0f 22 c0             	mov    %rax,%cr0

	movl $0x2003, 0x1000 # point to the PDPT with flags
  1001b4:	c7 05 00 10 00 00 03 	movl   $0x2003,0x1000(%rip)        # 1011be <gdt64_end+0x19c>
  1001bb:	20 00 00 
	movl $0x3003, 0x2000 # Move up 4 KB
  1001be:	c7 05 00 20 00 00 03 	movl   $0x3003,0x2000(%rip)        # 1021c8 <__TMC_END__+0x188>
  1001c5:	30 00 00 
	movl $0x4003, 0x3000 # We have now set up the page table, we need to fill it up
  1001c8:	c7 05 00 30 00 00 03 	movl   $0x4003,0x3000(%rip)        # 1031d2 <stack_bottom+0x182>
  1001cf:	40 00 00 
	xor %ecx, %ecx # Zero out ecx
  1001d2:	31 c9                	xor    %ecx,%ecx

00000000001001d4 <.idmap>:
	# Creating the identity map
	.idmap:
		mov $4096, %eax # move the page size to the EAX register
  1001d4:	b8 00 10 00 00       	mov    $0x1000,%eax
		mul %ecx # multiple current page index to eax. Beginning will be 0, of course. So, starting at index 0
  1001d9:	f7 e1                	mul    %ecx
		movl %edx, %eax # Bruh, so apparently mul stores result into edx ;-;, we we're moving it into eax
  1001db:	89 d0                	mov    %edx,%eax
		or $0x83, %eax # Setting flags
  1001dd:	0d 83 00 00 00       	or     $0x83,%eax
		movl %eax, 0x3000(,%ecx,8)
  1001e2:	89 04 cd 00 30 00 00 	mov    %eax,0x3000(,%rcx,8)
		inc %ecx
  1001e9:	41 81 f9 00 02 00 00 	cmp    $0x200,%r9d
		cmp $0x200, %ecx
		jne .idmap
  1001f0:	75 e2                	jne    1001d4 <.idmap>
	ret
  1001f2:	c3                   	ret

00000000001001f3 <enable_pae_paging>:
enable_pae_paging:
	mov $0x1000, %eax # Address of the PML4T
  1001f3:	b8 00 10 00 00       	mov    $0x1000,%eax
	mov %eax, %cr3 # Move this address to the control register 3
  1001f8:	0f 22 d8             	mov    %rax,%cr3

	mov %cr4, %eax # Enable PAE paging
  1001fb:	0f 20 e0             	mov    %cr4,%rax
	or $(1 << 5), %eax
  1001fe:	83 c8 20             	or     $0x20,%eax
	mov %eax, %cr4
  100201:	0f 22 e0             	mov    %rax,%cr4

0000000000100204 <.enter_long_mode>:

	# Now the cr3 register knows where our PML4T is
	.enter_long_mode:
		mov $0xC0000080, %ecx # Move model specific register into ECX
  100204:	b9 80 00 00 c0       	mov    $0xc0000080,%ecx
		rdmsr # Write the register value into EAX
  100209:	0f 32                	rdmsr
		or $(1 << 8), %eax # Set 8th bit, which is responsible for enabling long mode when we enable paging
  10020b:	0d 00 01 00 00       	or     $0x100,%eax
		wrmsr # Write to the model specific register
  100210:	0f 30                	wrmsr

0000000000100212 <.enable_paging>:
	
	.enable_paging:
		mov %cr0, %eax
  100212:	0f 20 c0             	mov    %cr0,%rax
		or $(1 << 31), %eax # Flipping the oldest bit in control register 0
  100215:	0d 00 00 00 80       	or     $0x80000000,%eax
		mov %eax, %cr0 # TO:DO PAGING NOT WORKING!!! CANNOT WRITE TO CR0
  10021a:	0f 22 c0             	mov    %rax,%cr0
	
	# Paging is now enabled !!!!!!!!! :D
	jmp load_gdt
  10021d:	e9 34 ff ff ff       	jmp    100156 <load_gdt>

0000000000100222 <.nocpuid>:

.nocpuid:
	movb $'C', %al
  100222:	b0 43                	mov    $0x43,%al
	jmp error
  100224:	eb 08                	jmp    10022e <error>

0000000000100226 <.noextfunc>:

.noextfunc:
	movb $'E', %al
  100226:	b0 45                	mov    $0x45,%al
	jmp error
  100228:	eb 04                	jmp    10022e <error>

000000000010022a <.nolongmode>:

.nolongmode:
	movb $'L', %al
  10022a:	b0 4c                	mov    $0x4c,%al
	jmp error
  10022c:	eb 00                	jmp    10022e <error>

000000000010022e <error>:

error:
    movl $0x4f524f45, 0xb8000
  10022e:	c7 05 00 80 0b 00 45 	movl   $0x4f524f45,0xb8000(%rip)        # 1b8238 <terminal_row+0xb11d8>
  100235:	4f 52 4f 
    movl $0x4f3a4f53, 0xb8004
  100238:	c7 05 04 80 0b 00 53 	movl   $0x4f3a4f53,0xb8004(%rip)        # 1b8246 <terminal_row+0xb11e6>
  10023f:	4f 3a 4f 
    movl $0x4f204f20, 0xb8008
  100242:	c7 05 08 80 0b 00 20 	movl   $0x4f204f20,0xb8008(%rip)        # 1b8254 <terminal_row+0xb11f4>
  100249:	4f 20 4f 
    mov %al, 0xb800a
  10024c:	a2 0a 80 0b 00 f4 66 	movabs %al,0xf2e66f4000b800a
  100253:	2e 0f 
  100255:	1f                   	(bad)
  100256:	84 00                	test   %al,(%rax)
  100258:	00 00                	add    %al,(%rax)
  10025a:	00 00                	add    %al,(%rax)
  10025c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000100260 <terminal_initialize>:
// Current pointer to the VGA buffer in memory
static uint16_t* terminal_buffer;

// Initialize the terminal
void terminal_initialize(void){
    while(1);
  100260:	eb fe                	jmp    100260 <terminal_initialize>
  100262:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  100269:	00 00 00 00 
  10026d:	0f 1f 00             	nopl   (%rax)

0000000000100270 <terminal_setcolor>:
	VGA_COLOR_LIGHT_BROWN = 14,
	VGA_COLOR_WHITE = 15,
};

static inline uint8_t vga_entry_color(enum vga_color foreground, enum vga_color background){
    return foreground | background << 4;
  100270:	48 8d 05 f9 ff ff ff 	lea    -0x7(%rip),%rax        # 100270 <terminal_setcolor>
  100277:	c1 e6 04             	shl    $0x4,%esi
  10027a:	49 bb 98 1d 00 00 00 	movabs $0x1d98,%r11
  100281:	00 00 00 
  100284:	48 ba 48 50 00 00 00 	movabs $0x5048,%rdx
  10028b:	00 00 00 
  10028e:	4c 01 d8             	add    %r11,%rax
  100291:	09 fe                	or     %edi,%esi
  100293:	40 88 34 10          	mov    %sil,(%rax,%rdx,1)
}

// Change the color of the terminal
void terminal_setcolor(enum vga_color foreground, enum vga_color background){
    terminal_color = vga_entry_color(foreground, background);
}
  100297:	c3                   	ret
  100298:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  10029f:	00 

00000000001002a0 <terminal_putentryat>:

// Put a character of color at (x,y) of the terminal buffer
void terminal_putentryat(unsigned char character, uint8_t character_color, size_t x, size_t y){
    const size_t index = y * VGA_WIDTH + x;
    terminal_buffer[index] = vga_entry(character, character_color);
  1002a0:	48 8d 04 89          	lea    (%rcx,%rcx,4),%rax
}

static inline uint16_t vga_entry(unsigned char character, uint8_t character_color){
    return (uint16_t) character | (uint16_t) character_color << 8;
  1002a4:	c1 e6 08             	shl    $0x8,%esi
  1002a7:	40 0f b6 ff          	movzbl %dil,%edi
  1002ab:	48 c1 e0 04          	shl    $0x4,%rax
  1002af:	09 fe                	or     %edi,%esi
  1002b1:	48 01 d0             	add    %rdx,%rax
  1002b4:	66 89 34 00          	mov    %si,(%rax,%rax,1)
}
  1002b8:	c3                   	ret
  1002b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000001002c0 <terminal_scroll>:
// Scroll on the terminal
void terminal_scroll(int line){
    uint16_t * video_memory = VGA_MEMORY;

    // Move each row up by one line
    for(int y = line; y < VGA_HEIGHT - 1; y++){
  1002c0:	48 63 f7             	movslq %edi,%rsi
  1002c3:	48 83 fe 17          	cmp    $0x17,%rsi
  1002c7:	77 5b                	ja     100324 <terminal_scroll+0x64>
  1002c9:	48 8d 0c b6          	lea    (%rsi,%rsi,4),%rcx
  1002cd:	48 c1 e1 05          	shl    $0x5,%rcx
  1002d1:	48 81 c1 40 81 0b 00 	add    $0xb8140,%rcx
  1002d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  1002df:	00 
        for(int x = 0; x < VGA_WIDTH; x++){
  1002e0:	48 8d 81 60 ff ff ff 	lea    -0xa0(%rcx),%rax
  1002e7:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  1002ee:	00 00 00 00 
  1002f2:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  1002f9:	00 00 00 00 
  1002fd:	0f 1f 00             	nopl   (%rax)
            video_memory[y * VGA_WIDTH + x] = video_memory[(y + 1) * VGA_WIDTH + x];
  100300:	0f b7 10             	movzwl (%rax),%edx
        for(int x = 0; x < VGA_WIDTH; x++){
  100303:	48 83 c0 02          	add    $0x2,%rax
            video_memory[y * VGA_WIDTH + x] = video_memory[(y + 1) * VGA_WIDTH + x];
  100307:	66 89 90 5e ff ff ff 	mov    %dx,-0xa2(%rax)
        for(int x = 0; x < VGA_WIDTH; x++){
  10030e:	48 39 c8             	cmp    %rcx,%rax
  100311:	75 ed                	jne    100300 <terminal_scroll+0x40>
    for(int y = line; y < VGA_HEIGHT - 1; y++){
  100313:	48 83 c6 01          	add    $0x1,%rsi
  100317:	48 81 c1 a0 00 00 00 	add    $0xa0,%rcx
  10031e:	48 83 fe 18          	cmp    $0x18,%rsi
  100322:	75 bc                	jne    1002e0 <terminal_scroll+0x20>
        }
    }

    //We might want to delete the last line, but I'll leave it commented out for now
    //terminal_delete_last_line();
}
  100324:	c3                   	ret
  100325:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  10032c:	00 00 00 00 

0000000000100330 <terminal_delete_last_line>:

void terminal_delete_last_line(){
    uint16_t * video_memory = VGA_MEMORY;

    // Clear the last line
    for(int x = 0; x < VGA_WIDTH; x++){
  100330:	48 8d 05 f9 ff ff ff 	lea    -0x7(%rip),%rax        # 100330 <terminal_delete_last_line>
  100337:	49 bb d8 1c 00 00 00 	movabs $0x1cd8,%r11
  10033e:	00 00 00 
        video_memory[(VGA_HEIGHT - 1) * VGA_WIDTH + x] = vga_entry(' ', terminal_color);
  100341:	48 ba 48 50 00 00 00 	movabs $0x5048,%rdx
  100348:	00 00 00 
  10034b:	4c 01 d8             	add    %r11,%rax
  10034e:	0f b6 14 10          	movzbl (%rax,%rdx,1),%edx
  100352:	b8 00 8f 0b 00       	mov    $0xb8f00,%eax
  100357:	c1 e2 08             	shl    $0x8,%edx
  10035a:	83 ca 20             	or     $0x20,%edx
  10035d:	0f 1f 00             	nopl   (%rax)
  100360:	66 89 10             	mov    %dx,(%rax)
    for(int x = 0; x < VGA_WIDTH; x++){
  100363:	48 83 c0 04          	add    $0x4,%rax
        video_memory[(VGA_HEIGHT - 1) * VGA_WIDTH + x] = vga_entry(' ', terminal_color);
  100367:	66 89 50 fe          	mov    %dx,-0x2(%rax)
    for(int x = 0; x < VGA_WIDTH; x++){
  10036b:	48 3d a0 8f 0b 00    	cmp    $0xb8fa0,%rax
  100371:	75 ed                	jne    100360 <terminal_delete_last_line+0x30>
    }
}
  100373:	c3                   	ret
  100374:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  10037b:	00 00 00 00 
  10037f:	90                   	nop

0000000000100380 <terminal_putchar>:
void terminal_putchar(char c){
    int line;
    unsigned char character = c;

    // Write the character at the current cursor
    terminal_putentryat(character, terminal_color, terminal_column, terminal_row);
  100380:	49 bb 88 1c 00 00 00 	movabs $0x1c88,%r11
  100387:	00 00 00 
void terminal_putchar(char c){
  10038a:	55                   	push   %rbp
    terminal_putentryat(character, terminal_color, terminal_column, terminal_row);
  10038b:	40 0f b6 ff          	movzbl %dil,%edi
  10038f:	48 b8 48 50 00 00 00 	movabs $0x5048,%rax
  100396:	00 00 00 
void terminal_putchar(char c){
  100399:	48 89 e5             	mov    %rsp,%rbp
  10039c:	41 57                	push   %r15
  10039e:	4c 8d 3d db ff ff ff 	lea    -0x25(%rip),%r15        # 100380 <terminal_putchar>
  1003a5:	4d 01 df             	add    %r11,%r15
  1003a8:	41 55                	push   %r13
  1003aa:	41 54                	push   %r12
    terminal_putentryat(character, terminal_color, terminal_column, terminal_row);
  1003ac:	49 bc 58 50 00 00 00 	movabs $0x5058,%r12
  1003b3:	00 00 00 
void terminal_putchar(char c){
  1003b6:	53                   	push   %rbx
    terminal_putentryat(character, terminal_color, terminal_column, terminal_row);
  1003b7:	41 0f b6 34 07       	movzbl (%r15,%rax,1),%esi
  1003bc:	48 bb 50 50 00 00 00 	movabs $0x5050,%rbx
  1003c3:	00 00 00 
  1003c6:	48 b8 98 e2 ff ff ff 	movabs $0xffffffffffffe298,%rax
  1003cd:	ff ff ff 
  1003d0:	4c 01 f8             	add    %r15,%rax
  1003d3:	4b 8b 0c 3c          	mov    (%r12,%r15,1),%rcx
  1003d7:	49 8b 14 1f          	mov    (%r15,%rbx,1),%rdx
  1003db:	ff d0                	call   *%rax

    // If we went over the width of the terminal, then go down a line
    if(++terminal_column == VGA_WIDTH){
  1003dd:	49 8b 04 1f          	mov    (%r15,%rbx,1),%rax
  1003e1:	48 83 f8 4f          	cmp    $0x4f,%rax
  1003e5:	74 19                	je     100400 <terminal_putchar+0x80>
  1003e7:	48 8d 50 01          	lea    0x1(%rax),%rdx
  1003eb:	49 89 14 1f          	mov    %rdx,(%r15,%rbx,1)
            // Delete the last line of the terminal so we can write more stuff there
            terminal_delete_last_line();
            terminal_row = VGA_HEIGHT - 1;
        }
    }
}
  1003ef:	5b                   	pop    %rbx
  1003f0:	41 5c                	pop    %r12
  1003f2:	41 5d                	pop    %r13
  1003f4:	41 5f                	pop    %r15
  1003f6:	5d                   	pop    %rbp
  1003f7:	c3                   	ret
  1003f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  1003ff:	00 
        if(++terminal_row == VGA_HEIGHT){
  100400:	4b 8b 04 3c          	mov    (%r12,%r15,1),%rax
        terminal_column = 0;
  100404:	49 c7 04 1f 00 00 00 	movq   $0x0,(%r15,%rbx,1)
  10040b:	00 
        if(++terminal_row == VGA_HEIGHT){
  10040c:	48 83 c0 01          	add    $0x1,%rax
  100410:	4b 89 04 3c          	mov    %rax,(%r12,%r15,1)
  100414:	48 83 f8 19          	cmp    $0x19,%rax
  100418:	75 d5                	jne    1003ef <terminal_putchar+0x6f>
  10041a:	49 bd b8 e2 ff ff ff 	movabs $0xffffffffffffe2b8,%r13
  100421:	ff ff ff 
            for(line = 1; line < VGA_HEIGHT; line++){
  100424:	bb 01 00 00 00       	mov    $0x1,%ebx
                terminal_scroll(line);
  100429:	4d 01 fd             	add    %r15,%r13
  10042c:	0f 1f 40 00          	nopl   0x0(%rax)
  100430:	89 df                	mov    %ebx,%edi
            for(line = 1; line < VGA_HEIGHT; line++){
  100432:	83 c3 01             	add    $0x1,%ebx
                terminal_scroll(line);
  100435:	41 ff d5             	call   *%r13
            for(line = 1; line < VGA_HEIGHT; line++){
  100438:	83 fb 19             	cmp    $0x19,%ebx
  10043b:	75 f3                	jne    100430 <terminal_putchar+0xb0>
            terminal_delete_last_line();
  10043d:	48 ba 28 e3 ff ff ff 	movabs $0xffffffffffffe328,%rdx
  100444:	ff ff ff 
  100447:	31 c0                	xor    %eax,%eax
  100449:	4c 01 fa             	add    %r15,%rdx
  10044c:	ff d2                	call   *%rdx
            terminal_row = VGA_HEIGHT - 1;
  10044e:	4b c7 04 3c 18 00 00 	movq   $0x18,(%r12,%r15,1)
  100455:	00 
}
  100456:	5b                   	pop    %rbx
  100457:	41 5c                	pop    %r12
  100459:	41 5d                	pop    %r13
  10045b:	41 5f                	pop    %r15
  10045d:	5d                   	pop    %rbp
  10045e:	c3                   	ret
  10045f:	90                   	nop

0000000000100460 <terminal_write>:

// Use to write some data of size to the terminal in ASCII rep
void terminal_write(const char * data, size_t size){
  100460:	49 bb a8 1b 00 00 00 	movabs $0x1ba8,%r11
  100467:	00 00 00 
  10046a:	55                   	push   %rbp
  10046b:	48 89 e5             	mov    %rsp,%rbp
  10046e:	41 57                	push   %r15
  100470:	4c 8d 3d e9 ff ff ff 	lea    -0x17(%rip),%r15        # 100460 <terminal_write>
  100477:	41 55                	push   %r13
  100479:	4d 01 df             	add    %r11,%r15
  10047c:	41 54                	push   %r12
  10047e:	53                   	push   %rbx
    // Write some characters to the VGA buffer
    for(size_t i = 0; i < size; i++){
  10047f:	48 85 f6             	test   %rsi,%rsi
  100482:	74 2b                	je     1004af <terminal_write+0x4f>
  100484:	49 bd 78 e3 ff ff ff 	movabs $0xffffffffffffe378,%r13
  10048b:	ff ff ff 
  10048e:	48 89 fb             	mov    %rdi,%rbx
  100491:	4c 8d 24 37          	lea    (%rdi,%rsi,1),%r12
        terminal_putchar(data[i]);
  100495:	4d 01 fd             	add    %r15,%r13
  100498:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  10049f:	00 
  1004a0:	0f be 3b             	movsbl (%rbx),%edi
    for(size_t i = 0; i < size; i++){
  1004a3:	48 83 c3 01          	add    $0x1,%rbx
        terminal_putchar(data[i]);
  1004a7:	41 ff d5             	call   *%r13
    for(size_t i = 0; i < size; i++){
  1004aa:	4c 39 e3             	cmp    %r12,%rbx
  1004ad:	75 f1                	jne    1004a0 <terminal_write+0x40>
    }
}
  1004af:	5b                   	pop    %rbx
  1004b0:	41 5c                	pop    %r12
  1004b2:	41 5d                	pop    %r13
  1004b4:	41 5f                	pop    %r15
  1004b6:	5d                   	pop    %rbp
  1004b7:	c3                   	ret
  1004b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  1004bf:	00 

00000000001004c0 <terminal_writestring>:

// Use to write a string to the terminal
void terminal_writestring(const char * string){
    terminal_write(string, strlen(string));
  1004c0:	49 bb 48 1b 00 00 00 	movabs $0x1b48,%r11
  1004c7:	00 00 00 
void terminal_writestring(const char * string){
  1004ca:	55                   	push   %rbp
    terminal_write(string, strlen(string));
  1004cb:	48 b8 48 e8 ff ff ff 	movabs $0xffffffffffffe848,%rax
  1004d2:	ff ff ff 
void terminal_writestring(const char * string){
  1004d5:	48 89 e5             	mov    %rsp,%rbp
  1004d8:	41 57                	push   %r15
  1004da:	4c 8d 3d df ff ff ff 	lea    -0x21(%rip),%r15        # 1004c0 <terminal_writestring>
  1004e1:	4d 01 df             	add    %r11,%r15
  1004e4:	53                   	push   %rbx
  1004e5:	48 89 fb             	mov    %rdi,%rbx
    terminal_write(string, strlen(string));
  1004e8:	4c 01 f8             	add    %r15,%rax
  1004eb:	ff d0                	call   *%rax
  1004ed:	48 89 df             	mov    %rbx,%rdi
  1004f0:	5b                   	pop    %rbx
    terminal_write(string, strlen(string));
  1004f1:	48 89 c6             	mov    %rax,%rsi
  1004f4:	48 b8 58 e4 ff ff ff 	movabs $0xffffffffffffe458,%rax
  1004fb:	ff ff ff 
  1004fe:	4c 01 f8             	add    %r15,%rax
  100501:	41 5f                	pop    %r15
  100503:	5d                   	pop    %rbp
    terminal_write(string, strlen(string));
  100504:	ff e0                	jmp    *%rax

0000000000100506 <long_mode_start>:
    # Lets now call the main kernel
    // TO:DO Movq not executing properly
    // movq $0xb8000, %rax
    // movq $0x4f524f45, (%rax)

    call kernel_main
  100506:	e8 05 00 00 00       	call   100510 <kernel_main>
  10050b:	f4                   	hlt
  10050c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000100510 <kernel_main>:
#include <stdio.h>
#include "../include/kernel/tty.h"

void kernel_main(void){
    terminal_initialize();
  100510:	49 bb f8 1a 00 00 00 	movabs $0x1af8,%r11
  100517:	00 00 00 
void kernel_main(void){
  10051a:	55                   	push   %rbp
    terminal_initialize();
  10051b:	48 b8 58 e2 ff ff ff 	movabs $0xffffffffffffe258,%rax
  100522:	ff ff ff 
void kernel_main(void){
  100525:	48 89 e5             	mov    %rsp,%rbp
  100528:	41 57                	push   %r15
  10052a:	4c 8d 3d df ff ff ff 	lea    -0x21(%rip),%r15        # 100510 <kernel_main>
  100531:	4d 01 df             	add    %r11,%r15
    terminal_initialize();
  100534:	4c 01 f8             	add    %r15,%rax
void kernel_main(void){
  100537:	48 83 ec 08          	sub    $0x8,%rsp
    terminal_initialize();
  10053b:	ff d0                	call   *%rax
    printf("Welcome to the 64-bit adios kernel\n");
  10053d:	48 b8 a8 f1 ff ff ff 	movabs $0xfffffffffffff1a8,%rax
  100544:	ff ff ff 
  100547:	48 ba 78 e5 ff ff ff 	movabs $0xffffffffffffe578,%rdx
  10054e:	ff ff ff 
  100551:	49 8d 3c 07          	lea    (%r15,%rax,1),%rdi
  100555:	4c 01 fa             	add    %r15,%rdx
  100558:	31 c0                	xor    %eax,%eax
  10055a:	4c 8b 7d f8          	mov    -0x8(%rbp),%r15
  10055e:	c9                   	leave
    printf("Welcome to the 64-bit adios kernel\n");
  10055f:	ff e2                	jmp    *%rdx
  100561:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
  100568:	00 00 00 
  10056b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
  100572:	00 00 00 
  100575:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
  10057c:	00 00 00 
  10057f:	90                   	nop

0000000000100580 <printf>:
		if (putchar(bytes[i]) == EOF)
			return false;
	return true;
}

int printf(const char* restrict format, ...) {
  100580:	55                   	push   %rbp
  100581:	48 89 e5             	mov    %rsp,%rbp
  100584:	41 57                	push   %r15
  100586:	41 56                	push   %r14
	va_list parameters;
	va_start(parameters, format);
  100588:	48 8d 45 10          	lea    0x10(%rbp),%rax
int printf(const char* restrict format, ...) {
  10058c:	41 55                	push   %r13
  10058e:	41 54                	push   %r12
  100590:	53                   	push   %rbx
  100591:	48 83 ec 68          	sub    $0x68,%rsp
	va_start(parameters, format);
  100595:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  100599:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
int printf(const char* restrict format, ...) {
  10059d:	48 89 75 a8          	mov    %rsi,-0x58(%rbp)
  1005a1:	48 89 55 b0          	mov    %rdx,-0x50(%rbp)
  1005a5:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
  1005a9:	4c 89 45 c0          	mov    %r8,-0x40(%rbp)
  1005ad:	4c 89 4d c8          	mov    %r9,-0x38(%rbp)
	va_start(parameters, format);
  1005b1:	48 89 45 98          	mov    %rax,-0x68(%rbp)

	int written = 0;

	while (*format != '\0') {
  1005b5:	0f b6 07             	movzbl (%rdi),%eax
	va_start(parameters, format);
  1005b8:	c7 45 88 08 00 00 00 	movl   $0x8,-0x78(%rbp)
	while (*format != '\0') {
  1005bf:	84 c0                	test   %al,%al
  1005c1:	0f 84 4a 02 00 00    	je     100811 <printf+0x291>
  1005c7:	49 89 ff             	mov    %rdi,%r15
	int written = 0;
  1005ca:	45 31 e4             	xor    %r12d,%r12d
  1005cd:	0f 1f 00             	nopl   (%rax)
		size_t maxrem = INT_MAX - written;
  1005d0:	ba ff ff ff 7f       	mov    $0x7fffffff,%edx
  1005d5:	44 29 e2             	sub    %r12d,%edx
  1005d8:	48 63 da             	movslq %edx,%rbx

		if (format[0] != '%' || format[1] == '%') {
  1005db:	3c 25                	cmp    $0x25,%al
  1005dd:	75 7d                	jne    10065c <printf+0xdc>
  1005df:	41 0f b6 47 01       	movzbl 0x1(%r15),%eax
  1005e4:	3c 25                	cmp    $0x25,%al
  1005e6:	74 70                	je     100658 <printf+0xd8>
			continue;
		}

		const char* format_begun_at = format++;

		if (*format == 'c') {
  1005e8:	3c 63                	cmp    $0x63,%al
  1005ea:	0f 84 00 01 00 00    	je     1006f0 <printf+0x170>
				return -1;
			}
			if (!print(&c, sizeof(c)))
				return -1;
			written++;
		} else if (*format == 's') {
  1005f0:	3c 73                	cmp    $0x73,%al
  1005f2:	0f 84 48 01 00 00    	je     100740 <printf+0x1c0>
			if (!print(str, len))
				return -1;
			written += len;
		} else {
			format = format_begun_at;
			size_t len = strlen(format);
  1005f8:	4c 89 ff             	mov    %r15,%rdi
  1005fb:	e8 50 02 00 00       	call   100850 <strlen>
  100600:	49 89 c5             	mov    %rax,%r13
			if (maxrem < len) {
  100603:	48 39 c3             	cmp    %rax,%rbx
  100606:	72 33                	jb     10063b <printf+0xbb>
	for (size_t i = 0; i < length; i++)
  100608:	4d 89 fe             	mov    %r15,%r14
  10060b:	49 8d 1c 07          	lea    (%r15,%rax,1),%rbx
  10060f:	48 85 c0             	test   %rax,%rax
  100612:	75 19                	jne    10062d <printf+0xad>
  100614:	e9 bd 00 00 00       	jmp    1006d6 <printf+0x156>
  100619:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  100620:	49 83 c6 01          	add    $0x1,%r14
  100624:	49 39 de             	cmp    %rbx,%r14
  100627:	0f 84 b3 00 00 00    	je     1006e0 <printf+0x160>
		if (putchar(bytes[i]) == EOF)
  10062d:	41 0f b6 3e          	movzbl (%r14),%edi
  100631:	e8 ea 01 00 00       	call   100820 <putchar>
  100636:	83 f8 ff             	cmp    $0xffffffff,%eax
  100639:	75 e5                	jne    100620 <printf+0xa0>
				return -1;
  10063b:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
		}
	}

	va_end(parameters);
	return written;
}
  100641:	48 83 c4 68          	add    $0x68,%rsp
  100645:	44 89 e0             	mov    %r12d,%eax
  100648:	5b                   	pop    %rbx
  100649:	41 5c                	pop    %r12
  10064b:	41 5d                	pop    %r13
  10064d:	41 5e                	pop    %r14
  10064f:	41 5f                	pop    %r15
  100651:	5d                   	pop    %rbp
  100652:	c3                   	ret
  100653:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
				format++;
  100658:	49 83 c7 01          	add    $0x1,%r15
			while (format[amount] && format[amount] != '%')
  10065c:	41 0f b6 47 01       	movzbl 0x1(%r15),%eax
  100661:	84 c0                	test   %al,%al
  100663:	0f 84 77 01 00 00    	je     1007e0 <printf+0x260>
  100669:	3c 25                	cmp    $0x25,%al
  10066b:	0f 84 6f 01 00 00    	je     1007e0 <printf+0x260>
			size_t amount = 1;
  100671:	41 be 01 00 00 00    	mov    $0x1,%r14d
  100677:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  10067e:	00 00 
				amount++;
  100680:	49 83 c6 01          	add    $0x1,%r14
			while (format[amount] && format[amount] != '%')
  100684:	43 0f b6 04 37       	movzbl (%r15,%r14,1),%eax
  100689:	84 c0                	test   %al,%al
  10068b:	74 04                	je     100691 <printf+0x111>
  10068d:	3c 25                	cmp    $0x25,%al
  10068f:	75 ef                	jne    100680 <printf+0x100>
			if (maxrem < amount) {
  100691:	4c 39 f3             	cmp    %r14,%rbx
  100694:	72 a5                	jb     10063b <printf+0xbb>
			while (format[amount] && format[amount] != '%')
  100696:	4f 8d 2c 37          	lea    (%r15,%r14,1),%r13
  10069a:	4c 89 eb             	mov    %r13,%rbx
  10069d:	eb 0a                	jmp    1006a9 <printf+0x129>
  10069f:	90                   	nop
	for (size_t i = 0; i < length; i++)
  1006a0:	49 83 c7 01          	add    $0x1,%r15
  1006a4:	4d 39 fd             	cmp    %r15,%r13
  1006a7:	74 17                	je     1006c0 <printf+0x140>
		if (putchar(bytes[i]) == EOF)
  1006a9:	41 0f b6 3f          	movzbl (%r15),%edi
  1006ad:	e8 6e 01 00 00       	call   100820 <putchar>
  1006b2:	83 f8 ff             	cmp    $0xffffffff,%eax
  1006b5:	75 e9                	jne    1006a0 <printf+0x120>
  1006b7:	eb 82                	jmp    10063b <printf+0xbb>
  1006b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
	while (*format != '\0') {
  1006c0:	0f b6 03             	movzbl (%rbx),%eax
			written += amount;
  1006c3:	45 01 f4             	add    %r14d,%r12d
			format += amount;
  1006c6:	49 89 df             	mov    %rbx,%r15
	while (*format != '\0') {
  1006c9:	84 c0                	test   %al,%al
  1006cb:	0f 85 ff fe ff ff    	jne    1005d0 <printf+0x50>
  1006d1:	e9 6b ff ff ff       	jmp    100641 <printf+0xc1>
  1006d6:	4c 89 fb             	mov    %r15,%rbx
  1006d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  1006e0:	0f b6 03             	movzbl (%rbx),%eax
			written += len;
  1006e3:	45 01 ec             	add    %r13d,%r12d
			format += len;
  1006e6:	49 89 df             	mov    %rbx,%r15
  1006e9:	eb de                	jmp    1006c9 <printf+0x149>
  1006eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
			char c = (char) va_arg(parameters, int /* char promotes to int */);
  1006f0:	8b 45 88             	mov    -0x78(%rbp),%eax
			format++;
  1006f3:	49 8d 5f 02          	lea    0x2(%r15),%rbx
			char c = (char) va_arg(parameters, int /* char promotes to int */);
  1006f7:	83 f8 2f             	cmp    $0x2f,%eax
  1006fa:	0f 87 c8 00 00 00    	ja     1007c8 <printf+0x248>
  100700:	89 c1                	mov    %eax,%ecx
  100702:	83 c0 08             	add    $0x8,%eax
  100705:	48 03 4d 98          	add    -0x68(%rbp),%rcx
  100709:	89 45 88             	mov    %eax,-0x78(%rbp)
  10070c:	8b 39                	mov    (%rcx),%edi
			if (!maxrem) {
  10070e:	85 d2                	test   %edx,%edx
  100710:	0f 84 25 ff ff ff    	je     10063b <printf+0xbb>
		if (putchar(bytes[i]) == EOF)
  100716:	40 0f b6 ff          	movzbl %dil,%edi
  10071a:	e8 01 01 00 00       	call   100820 <putchar>
  10071f:	83 f8 ff             	cmp    $0xffffffff,%eax
  100722:	0f 84 13 ff ff ff    	je     10063b <printf+0xbb>
	while (*format != '\0') {
  100728:	41 0f b6 47 02       	movzbl 0x2(%r15),%eax
			written++;
  10072d:	41 83 c4 01          	add    $0x1,%r12d
			format++;
  100731:	49 89 df             	mov    %rbx,%r15
  100734:	eb 93                	jmp    1006c9 <printf+0x149>
  100736:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
  10073d:	00 00 00 
			format++;
  100740:	49 8d 47 02          	lea    0x2(%r15),%rax
  100744:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
			const char* str = va_arg(parameters, const char*);
  10074b:	8b 45 88             	mov    -0x78(%rbp),%eax
  10074e:	83 f8 2f             	cmp    $0x2f,%eax
  100751:	0f 87 a9 00 00 00    	ja     100800 <printf+0x280>
  100757:	89 c2                	mov    %eax,%edx
  100759:	83 c0 08             	add    $0x8,%eax
  10075c:	48 03 55 98          	add    -0x68(%rbp),%rdx
  100760:	89 45 88             	mov    %eax,-0x78(%rbp)
  100763:	4c 8b 2a             	mov    (%rdx),%r13
			size_t len = strlen(str);
  100766:	4c 89 ef             	mov    %r13,%rdi
  100769:	e8 e2 00 00 00       	call   100850 <strlen>
  10076e:	49 89 c6             	mov    %rax,%r14
			if (maxrem < len) {
  100771:	48 39 c3             	cmp    %rax,%rbx
  100774:	0f 82 c1 fe ff ff    	jb     10063b <printf+0xbb>
	for (size_t i = 0; i < length; i++)
  10077a:	4c 89 eb             	mov    %r13,%rbx
  10077d:	4d 8d 6c 05 00       	lea    0x0(%r13,%rax,1),%r13
  100782:	48 85 c0             	test   %rax,%rax
  100785:	75 12                	jne    100799 <printf+0x219>
  100787:	eb 27                	jmp    1007b0 <printf+0x230>
  100789:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  100790:	48 83 c3 01          	add    $0x1,%rbx
  100794:	49 39 dd             	cmp    %rbx,%r13
  100797:	74 17                	je     1007b0 <printf+0x230>
		if (putchar(bytes[i]) == EOF)
  100799:	0f b6 3b             	movzbl (%rbx),%edi
  10079c:	e8 7f 00 00 00       	call   100820 <putchar>
  1007a1:	83 f8 ff             	cmp    $0xffffffff,%eax
  1007a4:	75 ea                	jne    100790 <printf+0x210>
  1007a6:	e9 90 fe ff ff       	jmp    10063b <printf+0xbb>
  1007ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
	while (*format != '\0') {
  1007b0:	41 0f b6 47 02       	movzbl 0x2(%r15),%eax
			written += len;
  1007b5:	45 01 f4             	add    %r14d,%r12d
			format++;
  1007b8:	4c 8b bd 78 ff ff ff 	mov    -0x88(%rbp),%r15
  1007bf:	e9 05 ff ff ff       	jmp    1006c9 <printf+0x149>
  1007c4:	0f 1f 40 00          	nopl   0x0(%rax)
			char c = (char) va_arg(parameters, int /* char promotes to int */);
  1007c8:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  1007cc:	48 8d 41 08          	lea    0x8(%rcx),%rax
  1007d0:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  1007d4:	e9 33 ff ff ff       	jmp    10070c <printf+0x18c>
  1007d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
			if (maxrem < amount) {
  1007e0:	48 85 db             	test   %rbx,%rbx
  1007e3:	0f 84 52 fe ff ff    	je     10063b <printf+0xbb>
			while (format[amount] && format[amount] != '%')
  1007e9:	49 8d 5f 01          	lea    0x1(%r15),%rbx
			size_t amount = 1;
  1007ed:	41 be 01 00 00 00    	mov    $0x1,%r14d
  1007f3:	49 89 dd             	mov    %rbx,%r13
  1007f6:	e9 ae fe ff ff       	jmp    1006a9 <printf+0x129>
  1007fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
			const char* str = va_arg(parameters, const char*);
  100800:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
  100804:	48 8d 42 08          	lea    0x8(%rdx),%rax
  100808:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  10080c:	e9 52 ff ff ff       	jmp    100763 <printf+0x1e3>
	int written = 0;
  100811:	45 31 e4             	xor    %r12d,%r12d
	return written;
  100814:	e9 28 fe ff ff       	jmp    100641 <printf+0xc1>
  100819:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000100820 <putchar>:

#if defined(__is_libk)
#include <kernel/tty.h>
#endif

int putchar(int ic) {
  100820:	55                   	push   %rbp
#if defined(__is_libk)
	char c = (char) ic;
	terminal_write(&c, sizeof(c));
  100821:	be 01 00 00 00       	mov    $0x1,%esi
int putchar(int ic) {
  100826:	48 89 e5             	mov    %rsp,%rbp
  100829:	53                   	push   %rbx
  10082a:	89 fb                	mov    %edi,%ebx
  10082c:	48 83 ec 18          	sub    $0x18,%rsp
	char c = (char) ic;
  100830:	40 88 7d ef          	mov    %dil,-0x11(%rbp)
	terminal_write(&c, sizeof(c));
  100834:	48 8d 7d ef          	lea    -0x11(%rbp),%rdi
  100838:	e8 23 fc ff ff       	call   100460 <terminal_write>
#else
	// TODO: Implement stdio and the write system call.
#endif
	return ic;
}
  10083d:	89 d8                	mov    %ebx,%eax
  10083f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
  100843:	c9                   	leave
  100844:	c3                   	ret
  100845:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
  10084c:	00 00 00 
  10084f:	90                   	nop

0000000000100850 <strlen>:
#include <string.h>

size_t strlen(const char* str) {
	size_t len = 0;
  100850:	31 c0                	xor    %eax,%eax
	while (str[len])
  100852:	80 3f 00             	cmpb   $0x0,(%rdi)
  100855:	74 19                	je     100870 <strlen+0x20>
  100857:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  10085e:	00 00 
		len++;
  100860:	48 83 c0 01          	add    $0x1,%rax
	while (str[len])
  100864:	80 3c 07 00          	cmpb   $0x0,(%rdi,%rax,1)
  100868:	75 f6                	jne    100860 <strlen+0x10>
  10086a:	c3                   	ret
  10086b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
	return len;
}
  100870:	c3                   	ret
  100871:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
  100878:	00 00 00 
  10087b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  100880:	48 8b 05 99 17 00 00 	mov    0x1799(%rip),%rax        # 102020 <_GLOBAL_OFFSET_TABLE_+0x18>
  100887:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  10088b:	74 33                	je     1008c0 <strlen+0x70>
  10088d:	55                   	push   %rbp
  10088e:	48 89 e5             	mov    %rsp,%rbp
  100891:	53                   	push   %rbx
  100892:	bb 20 20 10 00       	mov    $0x102020,%ebx
  100897:	48 83 ec 08          	sub    $0x8,%rsp
  10089b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  1008a0:	ff d0                	call   *%rax
  1008a2:	48 8b 43 f8          	mov    -0x8(%rbx),%rax
  1008a6:	48 83 eb 08          	sub    $0x8,%rbx
  1008aa:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  1008ae:	75 f0                	jne    1008a0 <strlen+0x50>
  1008b0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
  1008b4:	c9                   	leave
  1008b5:	c3                   	ret
  1008b6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
  1008bd:	00 00 00 
  1008c0:	c3                   	ret

Disassembly of section .init:

00000000001008c1 <_init>:
.section .init
.global _init
.type _init, @function
.code32
_init:
	push %ebp
  1008c1:	55                   	push   %rbp
	movl %esp, %ebp
  1008c2:	89 e5                	mov    %esp,%ebp
  1008c4:	e8 47 f8 ff ff       	call   100110 <data_segment+0x100100>
  1008c9:	e8 b2 ff ff ff       	call   100880 <strlen+0x30>
.code32
.section .init
	/* gcc will nicely put the contents of crtend.o's .init section here. */
	popl %ebp
  1008ce:	5d                   	pop    %rbp
	ret
  1008cf:	c3                   	ret

Disassembly of section .fini:

00000000001008d0 <_fini>:

.section .fini
.global _fini
.type _fini, @function
_fini:
	push %ebp
  1008d0:	55                   	push   %rbp
	movl %esp, %ebp
  1008d1:	89 e5                	mov    %esp,%ebp
  1008d3:	e8 a8 f7 ff ff       	call   100080 <data_segment+0x100070>

.section .fini
	/* gcc will nicely put the contents of crtend.o's .fini section here. */
	popl %ebp
  1008d8:	5d                   	pop    %rbp
  1008d9:	c3                   	ret

Disassembly of section .rodata:

0000000000101000 <gdt64>:
	...

0000000000101008 <.code_segment>:
  101008:	00 00                	add    %al,(%rax)
  10100a:	00 00                	add    %al,(%rax)
  10100c:	00 9a 20 00      	add    %bl,0x20(%rdx)

0000000000101010 <.data_segment>:
  101010:	00 00                	add    %al,(%rax)
  101012:	00 00                	add    %al,(%rax)
  101014:	00 92 00 00      	add    %dl,0x210000(%rdx)

0000000000101018 <.pointer>:
  101018:	21 00                	and    %eax,(%rax)
  10101a:	00 10                	add    %dl,(%rax)
  10101c:	10 00                	adc    %al,(%rax)
  10101e:	00 00                	add    %al,(%rax)
	...

Disassembly of section .eh_frame:

0000000000101028 <.eh_frame>:
  101028:	14 00                	adc    $0x0,%al
  10102a:	00 00                	add    %al,(%rax)
  10102c:	00 00                	add    %al,(%rax)
  10102e:	00 00                	add    %al,(%rax)
  101030:	01 7a 52             	add    %edi,0x52(%rdx)
  101033:	00 01                	add    %al,(%rcx)
  101035:	78 10                	js     101047 <gdt64_end+0x25>
  101037:	01 1b                	add    %ebx,(%rbx)
  101039:	0c 07                	or     $0x7,%al
  10103b:	08 90 01 00 00 10    	or     %dl,0x10000001(%rax)
  101041:	00 00                	add    %al,(%rax)
  101043:	00 1c 00             	add    %bl,(%rax,%rax,1)
  101046:	00 00                	add    %al,(%rax)
  101048:	18 f2                	sbb    %dh,%dl
  10104a:	ff                   	(bad)
  10104b:	ff 02                	incl   (%rdx)
  10104d:	00 00                	add    %al,(%rax)
  10104f:	00 00                	add    %al,(%rax)
  101051:	00 00                	add    %al,(%rax)
  101053:	00 10                	add    %dl,(%rax)
  101055:	00 00                	add    %al,(%rax)
  101057:	00 30                	add    %dh,(%rax)
  101059:	00 00                	add    %al,(%rax)
  10105b:	00 14 f2             	add    %dl,(%rdx,%rsi,8)
  10105e:	ff                   	(bad)
  10105f:	ff 28                	ljmp   *(%rax)
  101061:	00 00                	add    %al,(%rax)
  101063:	00 00                	add    %al,(%rax)
  101065:	00 00                	add    %al,(%rax)
  101067:	00 10                	add    %dl,(%rax)
  101069:	00 00                	add    %al,(%rax)
  10106b:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
  10106f:	00 30                	add    %dh,(%rax)
  101071:	f2 ff                	repnz (bad)
  101073:	ff 19                	lcall  *(%rcx)
  101075:	00 00                	add    %al,(%rax)
  101077:	00 00                	add    %al,(%rax)
  101079:	00 00                	add    %al,(%rax)
  10107b:	00 10                	add    %dl,(%rax)
  10107d:	00 00                	add    %al,(%rax)
  10107f:	00 58 00             	add    %bl,0x0(%rax)
  101082:	00 00                	add    %al,(%rax)
  101084:	3c f2                	cmp    $0xf2,%al
  101086:	ff                   	(bad)
  101087:	ff 65 00             	jmp    *0x0(%rbp)
  10108a:	00 00                	add    %al,(%rax)
  10108c:	00 00                	add    %al,(%rax)
  10108e:	00 00                	add    %al,(%rax)
  101090:	10 00                	adc    %al,(%rax)
  101092:	00 00                	add    %al,(%rax)
  101094:	6c                   	insb   (%dx),%es:(%rdi)
  101095:	00 00                	add    %al,(%rax)
  101097:	00 98 f2 ff ff 44    	add    %bl,0x44fffff2(%rax)
  10109d:	00 00                	add    %al,(%rax)
  10109f:	00 00                	add    %al,(%rax)
  1010a1:	00 00                	add    %al,(%rax)
  1010a3:	00 30                	add    %dh,(%rax)
  1010a5:	00 00                	add    %al,(%rax)
  1010a7:	00 80 00 00 00 d4    	add    %al,-0x2c000000(%rax)
  1010ad:	f2 ff                	repnz (bad)
  1010af:	ff                   	(bad)
  1010b0:	df 00                	filds  (%rax)
  1010b2:	00 00                	add    %al,(%rax)
  1010b4:	00 4b 0e             	add    %cl,0xe(%rbx)
  1010b7:	10 86 02 51 0d 06    	adc    %al,0x60d5102(%rsi)
  1010bd:	42 8f 03             	rex.X pop (%rbx)
  1010c0:	4e 8d 04 8c          	lea    (%rsp,%r9,4),%r8
  1010c4:	05 4b 83 06 02       	add    $0x206834b,%eax
  1010c9:	40 0a 0c 07          	rex or (%rdi,%rax,1),%cl
  1010cd:	08 49 0b             	or     %cl,0xb(%rcx)
  1010d0:	02 5e 0c             	add    0xc(%rsi),%bl
  1010d3:	07                   	(bad)
  1010d4:	08 00                	or     %al,(%rax)
  1010d6:	00 00                	add    %al,(%rax)
  1010d8:	24 00                	and    $0x0,%al
  1010da:	00 00                	add    %al,(%rax)
  1010dc:	b4 00                	mov    $0x0,%ah
  1010de:	00 00                	add    %al,(%rax)
  1010e0:	80 f3 ff             	xor    $0xff,%bl
  1010e3:	ff 58 00             	lcall  *0x0(%rax)
  1010e6:	00 00                	add    %al,(%rax)
  1010e8:	00 4b 0e             	add    %cl,0xe(%rbx)
  1010eb:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  1010f1:	42 8f 03             	rex.X pop (%rbx)
  1010f4:	4f 8d 04 8c          	lea    (%r12,%r9,4),%r8
  1010f8:	05 83 06 78 0c       	add    $0xc780683,%eax
  1010fd:	07                   	(bad)
  1010fe:	08 00                	or     %al,(%rax)
  101100:	24 00                	and    $0x0,%al
  101102:	00 00                	add    %al,(%rax)
  101104:	dc 00                	faddl  (%rax)
  101106:	00 00                	add    %al,(%rax)
  101108:	b8 f3 ff ff 46       	mov    $0x46fffff3,%eax
  10110d:	00 00                	add    %al,(%rax)
  10110f:	00 00                	add    %al,(%rax)
  101111:	4b 0e                	rex.WXB (bad)
  101113:	10 86 02 4d 0d 06    	adc    %al,0x60d4d02(%rsi)
  101119:	42 8f 03             	rex.X pop (%rbx)
  10111c:	4b 83 04 5f 0c       	addq   $0xc,(%r15,%r11,2)
  101121:	07                   	(bad)
  101122:	08 00                	or     %al,(%rax)
  101124:	00 00                	add    %al,(%rax)
  101126:	00 00                	add    %al,(%rax)
  101128:	1c 00                	sbb    $0x0,%al
  10112a:	00 00                	add    %al,(%rax)
  10112c:	04 01                	add    $0x1,%al
  10112e:	00 00                	add    %al,(%rax)
  101130:	e0 f3                	loopne 101125 <gdt64_end+0x103>
  101132:	ff                   	(bad)
  101133:	ff 51 00             	call   *0x0(%rcx)
  101136:	00 00                	add    %al,(%rax)
  101138:	00 4b 0e             	add    %cl,0xe(%rbx)
  10113b:	10 86 02 4d 0d 06    	adc    %al,0x60d4d02(%rsi)
  101141:	42 8f 03             	rex.X pop (%rbx)
  101144:	75 0c                	jne    101152 <gdt64_end+0x130>
  101146:	07                   	(bad)
  101147:	08 2c 00             	or     %ch,(%rax,%rax,1)
  10114a:	00 00                	add    %al,(%rax)
  10114c:	24 01                	and    $0x1,%al
  10114e:	00 00                	add    %al,(%rax)
  101150:	30 f4                	xor    %dh,%ah
  101152:	ff                   	(bad)
  101153:	ff 99 02 00 00 00    	lcall  *0x2(%rcx)
  101159:	41 0e                	rex.B (bad)
  10115b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  101161:	51                   	push   %rcx
  101162:	8f 03                	pop    (%rbx)
  101164:	8e 04 8d 05 8c 06 83 	mov    -0x7cf973fb(,%rcx,4),%es
  10116b:	07                   	(bad)
  10116c:	02 bd 0a 0c 07 08    	add    0x8070c0a(%rbp),%bh
  101172:	46 0b 00             	rex.RX or (%rax),%r8d
  101175:	00 00                	add    %al,(%rax)
  101177:	00 1c 00             	add    %bl,(%rax,%rax,1)
  10117a:	00 00                	add    %al,(%rax)
  10117c:	54                   	push   %rsp
  10117d:	01 00                	add    %eax,(%rax)
  10117f:	00 a0 f6 ff ff 25    	add    %ah,0x25fffff6(%rax)
  101185:	00 00                	add    %al,(%rax)
  101187:	00 00                	add    %al,(%rax)
  101189:	41 0e                	rex.B (bad)
  10118b:	10 86 02 48 0d 06    	adc    %al,0x60d4802(%rsi)
  101191:	41 83 03 5a          	addl   $0x5a,(%r11)
  101195:	0c 07                	or     $0x7,%al
  101197:	08 10                	or     %dl,(%rax)
  101199:	00 00                	add    %al,(%rax)
  10119b:	00 74 01 00          	add    %dh,0x0(%rcx,%rax,1)
  10119f:	00 b0 f6 ff ff 21    	add    %dh,0x21fffff6(%rax)
	...

Disassembly of section .rodata.str1.8:

00000000001011b0 <.rodata.str1.8>:
  1011b0:	57                   	push   %rdi
  1011b1:	65 6c                	gs insb (%dx),%es:(%rdi)
  1011b3:	63 6f 6d             	movsxd 0x6d(%rdi),%ebp
  1011b6:	65 20 74 6f 20       	and    %dh,%gs:0x20(%rdi,%rbp,2)
  1011bb:	74 68                	je     101225 <gdt64_end+0x203>
  1011bd:	65 20 36             	and    %dh,%gs:(%rsi)
  1011c0:	34 2d                	xor    $0x2d,%al
  1011c2:	62                   	(bad)
  1011c3:	69 74 20 61 64 69 6f 	imul   $0x736f6964,0x61(%rax,%riz,1),%esi
  1011ca:	73 
  1011cb:	20 6b 65             	and    %ch,0x65(%rbx)
  1011ce:	72 6e                	jb     10123e <gdt64_end+0x21c>
  1011d0:	65 6c                	gs insb (%dx),%es:(%rdi)
  1011d2:	0a 00                	or     (%rax),%al

Disassembly of section .data:

0000000000102000 <__dso_handle>:
	...

Disassembly of section .got.plt:

0000000000102008 <_GLOBAL_OFFSET_TABLE_>:
	...

Disassembly of section .ctors:

0000000000102020 <.ctors>:
  102020:	ff                   	(bad)
  102021:	ff                   	(bad)
  102022:	ff                   	(bad)
  102023:	ff                   	(bad)
  102024:	ff                   	(bad)
  102025:	ff                   	(bad)
  102026:	ff                   	(bad)
  102027:	ff 00                	incl   (%rax)
  102029:	00 00                	add    %al,(%rax)
  10202b:	00 00                	add    %al,(%rax)
  10202d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dtors:

0000000000102030 <__DTOR_END__-0x8>:
  102030:	ff                   	(bad)
  102031:	ff                   	(bad)
  102032:	ff                   	(bad)
  102033:	ff                   	(bad)
  102034:	ff                   	(bad)
  102035:	ff                   	(bad)
  102036:	ff                   	(bad)
  102037:	ff                 	incl   (%rax)

0000000000102038 <__DTOR_END__>:
	...

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
   0:	5c                   	pop    %rsp
   1:	00 00                	add    %al,(%rax)
   3:	00 05 00 08 00 2e    	add    %al,0x2e000800(%rip)        # 2e000809 <MAGIC+0x12525807>
   9:	00 00                	add    %al,(%rax)
   b:	00 01                	add    %al,(%rcx)
   d:	01 01                	add    %eax,(%rcx)
   f:	fb                   	sti
  10:	0e                   	(bad)
  11:	0d 00 01 01 01       	or     $0x1010100,%eax
  16:	01 00                	add    %eax,(%rax)
  18:	00 00                	add    %al,(%rax)
  1a:	01 00                	add    %eax,(%rax)
  1c:	00 01                	add    %al,(%rcx)
  1e:	01 01                	add    %eax,(%rcx)
  20:	1f                   	(bad)
  21:	02 00                	add    (%rax),%al
  23:	00 00                	add    %al,(%rax)
  25:	00 2b                	add    %ch,(%rbx)
  27:	00 00                	add    %al,(%rax)
  29:	00 02                	add    %al,(%rdx)
  2b:	01 1f                	add    %ebx,(%rdi)
  2d:	02 0f                	add    (%rdi),%cl
  2f:	02 37                	add    (%rdi),%dh
  31:	00 00                	add    %al,(%rax)
  33:	00 01                	add    %al,(%rcx)
  35:	37                   	(bad)
  36:	00 00                	add    %al,(%rax)
  38:	00 01                	add    %al,(%rcx)
  3a:	00 09                	add    %cl,(%rcx)
  3c:	02 c1                	add    %cl,%al
  3e:	08 10                	or     %dl,(%rax)
  40:	00 00                	add    %al,(%rax)
  42:	00 00                	add    %al,(%rax)
  44:	00 17                	add    %dl,(%rdi)
  46:	21 02                	and    %eax,(%rdx)
  48:	02 00                	add    (%rax),%al
  4a:	01 01                	add    %eax,(%rcx)
  4c:	00 09                	add    %cl,(%rcx)
  4e:	02 d0                	add    %al,%dl
  50:	08 10                	or     %dl,(%rax)
  52:	00 00                	add    %al,(%rax)
  54:	00 00                	add    %al,(%rax)
  56:	00 03                	add    %al,(%rbx)
  58:	0d 01 21 02 02       	or     $0x2022101,%eax
  5d:	00 01                	add    %al,(%rcx)
  5f:	01 8f 00 00 00 05    	add    %ecx,0x5000000(%rdi)
  65:	00 08                	add    %cl,(%rax)
  67:	00 2e                	add    %ch,(%rsi)
  69:	00 00                	add    %al,(%rax)
  6b:	00 01                	add    %al,(%rcx)
  6d:	01 01                	add    %eax,(%rcx)
  6f:	fb                   	sti
  70:	0e                   	(bad)
  71:	0d 00 01 01 01       	or     $0x1010100,%eax
  76:	01 00                	add    %eax,(%rax)
  78:	00 00                	add    %al,(%rax)
  7a:	01 00                	add    %eax,(%rax)
  7c:	00 01                	add    %al,(%rcx)
  7e:	01 01                	add    %eax,(%rcx)
  80:	1f                   	(bad)
  81:	02 00                	add    (%rax),%al
  83:	00 00                	add    %al,(%rax)
  85:	00 2b                	add    %ch,(%rbx)
  87:	00 00                	add    %al,(%rax)
  89:	00 02                	add    %al,(%rdx)
  8b:	01 1f                	add    %ebx,(%rdi)
  8d:	02 0f                	add    (%rdi),%cl
  8f:	02 3e                	add    (%rsi),%bh
  91:	00 00                	add    %al,(%rax)
  93:	00 01                	add    %al,(%rcx)
  95:	3e 00 00             	ds add %al,(%rax)
  98:	00 01                	add    %al,(%rcx)
  9a:	00 09                	add    %cl,(%rcx)
  9c:	02 3d 01 10 00 00    	add    0x1001(%rip),%bh        # 10a3 <data_segment+0x1093>
  a2:	00 00                	add    %al,(%rax)
  a4:	00 03                	add    %al,(%rbx)
  a6:	1c 01                	sbb    $0x1,%al
  a8:	5c                   	pop    %rsp
  a9:	5b                   	pop    %rbx
  aa:	5b                   	pop    %rbx
  ab:	5b                   	pop    %rbx
  ac:	5c                   	pop    %rsp
  ad:	83 a0 2f 26 21 21 2f 	andl   $0x2f,0x2121262f(%rax)
  b4:	59                   	pop    %rcx
  b5:	21 21                	and    %esp,(%rcx)
  b7:	21 21                	and    %esp,(%rcx)
  b9:	21 21                	and    %esp,(%rcx)
  bb:	2f                   	(bad)
  bc:	67 24 59             	addr32 and $0x59,%al
  bf:	2f                   	(bad)
  c0:	59                   	pop    %rcx
  c1:	68 59 2f 67 67       	push   $0x67672f59
  c6:	24 3d                	and    $0x3d,%al
  c8:	59                   	pop    %rcx
  c9:	3e 9f                	ds lahf
  cb:	9f                   	lahf
  cc:	9f                   	lahf
  cd:	31 59 2f             	xor    %ebx,0x2f(%rcx)
  d0:	2f                   	(bad)
  d1:	59                   	pop    %rcx
  d2:	75 21                	jne    f5 <data_segment+0xe5>
  d4:	67 2f                	addr32 (bad)
  d6:	22 59 3e             	and    0x3e(%rcx),%bl
  d9:	3d 3d 40 59 2f       	cmp    $0x2f59403d,%eax
  de:	59                   	pop    %rcx
  df:	31 3d 59 3f 5b 2f    	xor    %edi,0x2f5b3f59(%rip)        # 2f5b403e <MAGIC+0x13ad903c>
  e5:	31 2f                	xor    %ebp,(%rdi)
  e7:	31 2f                	xor    %ebp,(%rdi)
  e9:	31 9f 9f 9f 59 02    	xor    %ebx,0x2599f9f(%rdi)
  ef:	01 00                	add    %eax,(%rax)
  f1:	01 01                	add    %eax,(%rcx)
  f3:	ab                   	stos   %eax,%es:(%rdi)
  f4:	02 00                	add    (%rax),%al
  f6:	00 05 00 08 00 4a    	add    %al,0x4a000800(%rip)        # 4a0008fc <MAGIC+0x2e5258fa>
  fc:	00 00                	add    %al,(%rax)
  fe:	00 01                	add    %al,(%rcx)
 100:	01 01                	add    %eax,(%rcx)
 102:	fb                   	sti
 103:	0e                   	(bad)
 104:	0d 00 01 01 01       	or     $0x1010100,%eax
 109:	01 00                	add    %eax,(%rax)
 10b:	00 00                	add    %al,(%rax)
 10d:	01 00                	add    %eax,(%rax)
 10f:	00 01                	add    %al,(%rcx)
 111:	01 01                	add    %eax,(%rcx)
 113:	1f                   	(bad)
 114:	04 00                	add    $0x0,%al
 116:	00 00                	add    %al,(%rax)
 118:	00 2b                	add    %ch,(%rbx)
 11a:	00 00                	add    %al,(%rax)
 11c:	00 57 00             	add    %dl,0x0(%rdi)
 11f:	00 00                	add    %al,(%rax)
 121:	7e 00                	jle    123 <data_segment+0x113>
 123:	00 00                	add    %al,(%rax)
 125:	02 01                	add    (%rcx),%al
 127:	1f                   	(bad)
 128:	02 0f                	add    (%rdi),%cl
 12a:	06                   	(bad)
 12b:	51                   	push   %rcx
 12c:	00 00                	add    %al,(%rax)
 12e:	00 01                	add    %al,(%rcx)
 130:	51                   	push   %rcx
 131:	00 00                	add    %al,(%rax)
 133:	00 01                	add    %al,(%rcx)
 135:	b6 00                	mov    $0x0,%dh
 137:	00 00                	add    %al,(%rax)
 139:	01 bc 00 00 00 02 c5 	add    %edi,-0x3afe0000(%rax,%rax,1)
 140:	00 00                	add    %al,(%rax)
 142:	00 02                	add    %al,(%rdx)
 144:	d2 00                	rolb   %cl,(%rax)
 146:	00 00                	add    %al,(%rax)
 148:	03 05 1f 00 09 02    	add    0x209001f(%rip),%eax        # 209016d <terminal_row+0x1f8910d>
 14e:	60                   	(bad)
 14f:	02 10                	add    (%rax),%dl
 151:	00 00                	add    %al,(%rax)
 153:	00 00                	add    %al,(%rax)
 155:	00 03                	add    %al,(%rbx)
 157:	17                   	(bad)
 158:	01 05 05 13 05 0a    	add    %eax,0xa051305(%rip)        # a051463 <terminal_row+0x9f4a403>
 15e:	01 05 05 01 05 0a    	add    %eax,0xa050105(%rip)        # a050269 <terminal_row+0x9f49209>
 164:	01 05 4d 03 13 f2    	add    %eax,-0xdecfcb3(%rip)        # fffffffff21304b7 <CHECKSUM+0xdc0b4bc>
 16a:	05 05 13 04 02       	add    $0x2041305,%eax
 16f:	05 17 03 6c 01       	add    $0x16c0317,%eax
 174:	05 05 13 06 01       	add    $0x1061305,%eax
 179:	05 24 74 3c 05       	add    $0x53c7424,%eax
 17e:	17                   	(bad)
 17f:	9e                   	sahf
 180:	04 01                	add    $0x1,%al
 182:	05 01 03 14 08       	add    $0x8140301,%eax
 187:	2e 05 5f 06 93 05    	cs add $0x593065f,%eax
 18d:	05 13 13 04 02       	add    $0x2041313,%eax
 192:	05 18 03 6a 01       	add    $0x16a0318,%eax
 197:	05 05 13 06 01       	add    $0x1061305,%eax
 19c:	04 01                	add    $0x1,%al
 19e:	05 14 03 15 01       	add    $0x1150314,%eax
 1a3:	04 02                	add    $0x2,%al
 1a5:	05 21 03 6b 4a       	add    $0x4a6b0321,%eax
 1aa:	3c 4a                	cmp    $0x4a,%al
 1ac:	04 01                	add    $0x1,%al
 1ae:	05 14 03 15 01       	add    $0x1150314,%eax
 1b3:	04 02                	add    $0x2,%al
 1b5:	05 21 03 6b 4a       	add    $0x4a6b0321,%eax
 1ba:	04 01                	add    $0x1,%al
 1bc:	05 14 03 15 2e       	add    $0x2e150314,%eax
 1c1:	04 02                	add    $0x2,%al
 1c3:	05 21 03 6b 3c       	add    $0x3c6b0321,%eax
 1c8:	04 01                	add    $0x1,%al
 1ca:	05 01 03 16 4a       	add    $0x4a160301,%eax
 1cf:	05 1f 06 85 05       	add    $0x585061f,%eax
 1d4:	05 13 15 05 09       	add    $0x9051513,%eax
 1d9:	01 05 19 00 02 04    	add    %eax,0x4020019(%rip)        # 40201f8 <terminal_row+0x3f19198>
 1df:	01 01                	add    %eax,(%rcx)
 1e1:	05 1a 00 02 04       	add    $0x402001a,%eax
 1e6:	01 08                	add    %ecx,(%rax)
 1e8:	e5 00                	in     $0x0,%eax
 1ea:	02 04 01             	add    (%rcx,%rax,1),%al
 1ed:	06                   	(bad)
 1ee:	74 05                	je     1f5 <data_segment+0x1e5>
 1f0:	0d 06 08 83 05       	or     $0x5830806,%eax
 1f5:	3b 06                	cmp    (%rsi),%eax
 1f7:	01 05 1a 00 02 04    	add    %eax,0x402001a(%rip)        # 4020217 <terminal_row+0x3f191b7>
 1fd:	01 3b                	add    %edi,(%rbx)
 1ff:	05 2d 4b 05 28       	add    $0x28054b2d,%eax
 204:	00 02                	add    %al,(%rdx)
 206:	04 03                	add    $0x3,%al
 208:	06                   	(bad)
 209:	73 05                	jae    210 <data_segment+0x200>
 20b:	1a 00                	sbb    (%rax),%al
 20d:	02 04 01             	add    (%rcx,%rax,1),%al
 210:	01 05 2c 00 02 04    	add    %eax,0x402002c(%rip)        # 4020242 <terminal_row+0x3f191e2>
 216:	02 57 05             	add    0x5(%rdi),%dl
 219:	19 00                	sbb    %eax,(%rax)
 21b:	02 04 01             	add    (%rcx,%rax,1),%al
 21e:	01 00                	add    %eax,(%rax)
 220:	02 04 01             	add    (%rcx,%rax,1),%al
 223:	06                   	(bad)
 224:	4a 00 02             	rex.WX add %al,(%rdx)
 227:	04 01                	add    $0x1,%al
 229:	c8 05 01 1a          	enter  $0x105,$0x1a
 22d:	05 21 06 bc 05       	add    $0x5bc0621,%eax
 232:	05 13 15 05 09       	add    $0x9051513,%eax
 237:	01 05 16 00 02 04    	add    %eax,0x4020016(%rip)        # 4020253 <terminal_row+0x3f191f3>
 23d:	01 01                	add    %eax,(%rcx)
 23f:	05 3a 06 08 13       	add    $0x1308063a,%eax
 244:	04 02                	add    $0x2,%al
 246:	05 21 03 54 c8       	add    $0xc8540321,%eax
 24b:	e4 3c                	in     $0x3c,%al
 24d:	04 01                	add    $0x1,%al
 24f:	05 09 06 03 2c       	add    $0x2c030609,%eax
 254:	01 04 02             	add    %eax,(%rdx,%rax,1)
 257:	05 18 03 53 01       	add    $0x1530318,%eax
 25c:	05 05 13 06 01       	add    $0x1061305,%eax
 261:	04 01                	add    $0x1,%al
 263:	05 38 00 02 04       	add    $0x4020038,%eax
 268:	01 03                	add    %eax,(%rbx)
 26a:	2c 01                	sub    $0x1,%al
 26c:	05 24 00 02 04       	add    $0x4020024,%eax
 271:	03 06                	add    (%rsi),%eax
 273:	3b 05 16 00 02 04    	cmp    0x4020016(%rip),%eax        # 402028f <terminal_row+0x3f1922f>
 279:	01 01                	add    %eax,(%rcx)
 27b:	05 09 13 04 02       	add    $0x2041309,%eax
 280:	05 18 03 53 01       	add    $0x1530318,%eax
 285:	05 05 13 06 01       	add    $0x1061305,%eax
 28a:	04 01                	add    $0x1,%al
 28c:	05 16 00 02 04       	add    $0x4020016,%eax
 291:	01 03                	add    %eax,(%rbx)
 293:	2b 01                	sub    (%rcx),%eax
 295:	05 38 00 02 04       	add    $0x4020038,%eax
 29a:	01 4b 05             	add    %ecx,0x5(%rbx)
 29d:	24 00                	and    $0x0,%al
 29f:	02 04 03             	add    (%rbx,%rax,1),%al
 2a2:	06                   	(bad)
 2a3:	49 05 16 00 02 04    	rex.WB add $0x4020016,%rax
 2a9:	01 01                	add    %eax,(%rcx)
 2ab:	05 01 06 85 05       	add    $0x5850601,%eax
 2b0:	1e                   	(bad)
 2b1:	06                   	(bad)
 2b2:	cb                   	lret
 2b3:	05 05 13 13 15       	add    $0x15131305,%eax
 2b8:	05 1e 06 99 05       	add    $0x599061e,%eax
 2bd:	05 25 4a 05 1e       	add    $0x1e054a25,%eax
 2c2:	99                   	cltd
 2c3:	05 05 08 33 05       	add    $0x5330805,%eax
 2c8:	1e                   	(bad)
 2c9:	99                   	cltd
 2ca:	05 05 25 06 02       	add    $0x2062505,%eax
 2cf:	26 15 05 08 06 01    	es adc $0x1060805,%eax
 2d5:	05 07 4a 05 01       	add    $0x1054a07,%eax
 2da:	03 0c d6             	add    (%rsi,%rdx,8),%ecx
 2dd:	05 09 06 03 75       	add    $0x75030609,%eax
 2e2:	08 12                	or     %dl,(%rdx)
 2e4:	05 0c 06 14 05       	add    $0x514060c,%eax
 2e9:	19 48 05             	sbb    %ecx,0x5(%rax)
 2ec:	09 06                	or     %eax,(%rsi)
 2ee:	84 05 0c 06 01 05    	test   %al,0x501060c(%rip)        # 5010900 <terminal_row+0x4f098a0>
 2f4:	0b 4a 05             	or     0x5(%rdx),%ecx
 2f7:	16                   	(bad)
 2f8:	08 3d 05 11 59 06    	or     %bh,0x6591105(%rip)        # 6591403 <terminal_row+0x648a3a3>
 2fe:	74 05                	je     305 <data_segment+0x2f5>
 300:	32 00                	xor    (%rax),%al
 302:	02 04 03             	add    (%rbx,%rax,1),%al
 305:	06                   	(bad)
 306:	2d 05 11 3d 05       	sub    $0x53d1105,%eax
 30b:	32 00                	xor    (%rax),%al
 30d:	02 04 03             	add    (%rbx,%rax,1),%al
 310:	06                   	(bad)
 311:	3b 05 20 00 02 04    	cmp    0x4020020(%rip),%eax        # 4020337 <terminal_row+0x3f192d7>
 317:	01 01                	add    %eax,(%rcx)
 319:	05 0d 5c 08 13       	add    $0x13085c0d,%eax
 31e:	05 1a 06 01 82       	add    $0x8201061a,%eax
 323:	05 01 15 05 34       	add    $0x34051501,%eax
 328:	06                   	(bad)
 329:	a1 06 01 05 05 06 08 	movabs 0x5ae080605050106,%eax
 330:	ae 05 
 332:	09 01                	or     %eax,(%rcx)
 334:	05 19 00 02 04       	add    $0x4020019,%eax
 339:	01 01                	add    %eax,(%rcx)
 33b:	05 34 06 10 05       	add    $0x5100634,%eax
 340:	19 00                	sbb    %eax,(%rax)
 342:	02 04 01             	add    (%rcx,%rax,1),%al
 345:	3e 05 09 08 59 06    	ds add $0x6590809,%eax
 34b:	ac                   	lods   %ds:(%rsi),%al
 34c:	05 19 00 02 04       	add    $0x4020019,%eax
 351:	01 06                	add    %eax,(%rsi)
 353:	3b 05 09 4b 05 22    	cmp    0x22054b09(%rip),%eax        # 22054e62 <MAGIC+0x6579e60>
 359:	00 02                	add    %al,(%rdx)
 35b:	04 03                	add    $0x3,%al
 35d:	06                   	(bad)
 35e:	3b 05 19 00 02 04    	cmp    0x4020019(%rip),%eax        # 402037d <terminal_row+0x3f1931d>
 364:	01 01                	add    %eax,(%rcx)
 366:	05 01 06 5b 05       	add    $0x55b0601,%eax
 36b:	2f                   	(bad)
 36c:	06                   	(bad)
 36d:	08 15 05 05 13 05    	or     %dl,0x5130505(%rip)        # 5130878 <terminal_row+0x5029818>
 373:	2f                   	(bad)
 374:	06                   	(bad)
 375:	9d                   	popf
 376:	05 05 21 05 2f       	add    $0x2f052105,%eax
 37b:	9d                   	popf
 37c:	f2 05 05 3d 00 02    	repnz add $0x2003d05,%eax
 382:	04 01                	add    $0x1,%al
 384:	58                   	pop    %rax
 385:	05 01 3d 05 05       	add    $0x5053d01,%eax
 38a:	1f                   	(bad)
 38b:	00 02                	add    %al,(%rdx)
 38d:	04 01                	add    $0x1,%al
 38f:	3c 05                	cmp    $0x5,%al
 391:	01 c9                	add    %ecx,%ecx
 393:	05 05 00 02 04       	add    $0x4020005,%eax
 398:	01 3b                	add    %edi,(%rbx)
 39a:	00 02                	add    %al,(%rdx)
 39c:	04 01                	add    $0x1,%al
 39e:	2e 00 01             	cs add %al,(%rcx)
 3a1:	01 4a 00             	add    %ecx,0x0(%rdx)
 3a4:	00 00                	add    %al,(%rax)
 3a6:	05 00 08 00 2e       	add    $0x2e000800,%eax
 3ab:	00 00                	add    %al,(%rax)
 3ad:	00 01                	add    %al,(%rcx)
 3af:	01 01                	add    %eax,(%rcx)
 3b1:	fb                   	sti
 3b2:	0e                   	(bad)
 3b3:	0d 00 01 01 01       	or     $0x1010100,%eax
 3b8:	01 00                	add    %eax,(%rax)
 3ba:	00 00                	add    %al,(%rax)
 3bc:	01 00                	add    %eax,(%rax)
 3be:	00 01                	add    %al,(%rcx)
 3c0:	01 01                	add    %eax,(%rcx)
 3c2:	1f                   	(bad)
 3c3:	02 00                	add    (%rax),%al
 3c5:	00 00                	add    %al,(%rax)
 3c7:	00 2b                	add    %ch,(%rbx)
 3c9:	00 00                	add    %al,(%rax)
 3cb:	00 02                	add    %al,(%rdx)
 3cd:	01 1f                	add    %ebx,(%rdi)
 3cf:	02 0f                	add    (%rdi),%cl
 3d1:	02 db                	add    %bl,%bl
 3d3:	00 00                	add    %al,(%rax)
 3d5:	00 01                	add    %al,(%rcx)
 3d7:	db 00                	fildl  (%rax)
 3d9:	00 00                	add    %al,(%rax)
 3db:	01 00                	add    %eax,(%rax)
 3dd:	09 02                	or     %eax,(%rdx)
 3df:	06                   	(bad)
 3e0:	05 10 00 00 00       	add    $0x10,%eax
 3e5:	00 00                	add    %al,(%rax)
 3e7:	03 0c 01             	add    (%rcx,%rax,1),%ecx
 3ea:	59                   	pop    %rcx
 3eb:	02 01                	add    (%rcx),%al
 3ed:	00 01                	add    %al,(%rcx)
 3ef:	01 7b 00             	add    %edi,0x0(%rbx)
 3f2:	00 00                	add    %al,(%rax)
 3f4:	05 00 08 00 40       	add    $0x40000800,%eax
 3f9:	00 00                	add    %al,(%rax)
 3fb:	00 01                	add    %al,(%rcx)
 3fd:	01 01                	add    %eax,(%rcx)
 3ff:	fb                   	sti
 400:	0e                   	(bad)
 401:	0d 00 01 01 01       	or     $0x1010100,%eax
 406:	01 00                	add    %eax,(%rax)
 408:	00 00                	add    %al,(%rax)
 40a:	01 00                	add    %eax,(%rax)
 40c:	00 01                	add    %al,(%rcx)
 40e:	01 01                	add    %eax,(%rcx)
 410:	1f                   	(bad)
 411:	04 00                	add    $0x0,%al
 413:	00 00                	add    %al,(%rax)
 415:	00 24 00             	add    %ah,(%rax,%rax,1)
 418:	00 00                	add    %al,(%rax)
 41a:	7e 00                	jle    41c <data_segment+0x40c>
 41c:	00 00                	add    %al,(%rax)
 41e:	f4                   	hlt
 41f:	00 00                	add    %al,(%rax)
 421:	00 02                	add    %al,(%rdx)
 423:	01 1f                	add    %ebx,(%rdi)
 425:	02 0f                	add    (%rdi),%cl
 427:	04 eb                	add    $0xeb,%al
 429:	00 00                	add    %al,(%rax)
 42b:	00 01                	add    %al,(%rcx)
 42d:	eb 00                	jmp    42f <data_segment+0x41f>
 42f:	00 00                	add    %al,(%rax)
 431:	01 0d 01 00 00 02    	add    %ecx,0x2000001(%rip)        # 2000438 <terminal_row+0x1ef93d8>
 437:	15 01 00 00 03       	adc    $0x3000001,%eax
 43c:	05 17 00 09 02       	add    $0x2090017,%eax
 441:	10 05 10 00 00 00    	adc    %al,0x10(%rip)        # 457 <data_segment+0x447>
 447:	00 00                	add    %al,(%rax)
 449:	15 05 05 13 05       	adc    $0x5130505,%eax
 44e:	17                   	(bad)
 44f:	06                   	(bad)
 450:	9d                   	popf
 451:	05 05 21 05 17       	add    $0x17052105,%eax
 456:	9d                   	popf
 457:	05 05 e5 05 17       	add    $0x1705e505,%eax
 45c:	3b 05 05 4b 06 2f    	cmp    0x2f064b05(%rip),%eax        # 2f064f67 <MAGIC+0x13589f65>
 462:	05 01 06 08 bb       	add    $0xbb080601,%eax
 467:	05 05 57 02 02       	add    $0x2025705,%eax
 46c:	00 01                	add    %al,(%rcx)
 46e:	01 ca                	add    %ecx,%edx
 470:	02 00                	add    (%rax),%al
 472:	00 05 00 08 00 4f    	add    %al,0x4f000800(%rip)        # 4f000c78 <MAGIC+0x33525c76>
 478:	00 00                	add    %al,(%rax)
 47a:	00 01                	add    %al,(%rcx)
 47c:	01 01                	add    %eax,(%rcx)
 47e:	fb                   	sti
 47f:	0e                   	(bad)
 480:	0d 00 01 01 01       	or     $0x1010100,%eax
 485:	01 00                	add    %eax,(%rax)
 487:	00 00                	add    %al,(%rax)
 489:	01 00                	add    %eax,(%rax)
 48b:	00 01                	add    %al,(%rcx)
 48d:	01 01                	add    %eax,(%rcx)
 48f:	1f                   	(bad)
 490:	04 2a                	add    $0x2a,%al
 492:	01 00                	add    %eax,(%rax)
 494:	00 53 01             	add    %dl,0x1(%rbx)
 497:	00 00                	add    %al,(%rax)
 499:	57                   	push   %rdi
 49a:	00 00                	add    %al,(%rax)
 49c:	00 76 00             	add    %dh,0x0(%rsi)
 49f:	00 00                	add    %al,(%rax)
 4a1:	02 01                	add    (%rcx),%al
 4a3:	1f                   	(bad)
 4a4:	02 0f                	add    (%rdi),%cl
 4a6:	07                   	(bad)
 4a7:	21 01                	and    %eax,(%rcx)
 4a9:	00 00                	add    %al,(%rax)
 4ab:	01 21                	add    %esp,(%rcx)
 4ad:	01 00                	add    %eax,(%rax)
 4af:	00 01                	add    %al,(%rcx)
 4b1:	59                   	pop    %rcx
 4b2:	01 00                	add    %eax,(%rax)
 4b4:	00 00                	add    %al,(%rax)
 4b6:	64 01 00             	add    %eax,%fs:(%rax)
 4b9:	00 02                	add    %al,(%rdx)
 4bb:	bc 00 00 00 02       	mov    $0x2000000,%esp
 4c0:	0d 01 00 00 03       	or     $0x3000001,%eax
 4c5:	d2 00                	rolb   %cl,(%rax)
 4c7:	00 00                	add    %al,(%rax)
 4c9:	03 05 2e 00 09 02    	add    0x209002e(%rip),%eax        # 20904fd <terminal_row+0x1f8949d>
 4cf:	80 05 10 00 00 00 00 	addb   $0x0,0x10(%rip)        # 4e6 <data_segment+0x4d6>
 4d6:	00 03                	add    %al,(%rbx)
 4d8:	0e                   	(bad)
 4d9:	01 05 02 13 13 05    	add    %eax,0x5131302(%rip)        # 51317e1 <terminal_row+0x502a781>
 4df:	2e 06                	cs (bad)
 4e1:	10 05 02 84 05 2e    	adc    %al,0x2e058402(%rip)        # 2e0588e9 <MAGIC+0x1257d8e7>
 4e7:	48 05 02 92 05 2e    	add    $0x2e059202,%rax
 4ed:	80 05 02 08 3e 06 4c 	addb   $0x4c,0x63e0802(%rip)        # 63e0cf6 <terminal_row+0x62d9c96>
 4f4:	14 05                	adc    $0x5,%al
 4f6:	11 01                	adc    %eax,(%rcx)
 4f8:	05 09 06 01 05       	add    $0x5010609,%eax
 4fd:	02 38                	add    (%rax),%bh
 4ff:	05 11 78 05 06       	add    $0x6057811,%eax
 504:	aa                   	stos   %al,%es:(%rdi)
 505:	05 03 06 69 05       	add    $0x5690603,%eax
 50a:	1b 06                	sbb    (%rsi),%eax
 50c:	01 05 0a 82 05 03    	add    %eax,0x305820a(%rip)        # 305871c <terminal_row+0x2f516bc>
 512:	06                   	(bad)
 513:	3e 05 06 06 01 05    	ds add $0x5010606,%eax
 519:	21 00                	and    %eax,(%rax)
 51b:	02 04 01             	add    (%rcx,%rax,1),%al
 51e:	4a 05 18 00 02 04    	rex.WX add $0x4020018,%rax
 524:	01 58 05             	add    %ebx,0x5(%rax)
 527:	03 06                	add    (%rsi),%eax
 529:	03 11                	add    (%rcx),%edx
 52b:	4a 14 05             	rex.WX adc $0x5,%al
 52e:	06                   	(bad)
 52f:	06                   	(bad)
 530:	01 05 0a 06 03 0a    	add    %eax,0xa03060a(%rip)        # a030b40 <terminal_row+0x9f29ae0>
 536:	82                   	(bad)
 537:	05 0d 06 01 05       	add    $0x501060d,%eax
 53c:	04 06                	add    $0x6,%al
 53e:	03 0c 82             	add    (%rdx,%rax,4),%ecx
 541:	13 05 11 06 01 05    	adc    0x5010611(%rip),%eax        # 5010b58 <terminal_row+0x4f09af8>
 547:	04 06                	add    $0x6,%al
 549:	ad                   	lods   %ds:(%rsi),%eax
 54a:	05 07 06 01 05       	add    $0x5010607,%eax
 54f:	17                   	(bad)
 550:	00 02                	add    %al,(%rdx)
 552:	04 01                	add    $0x1,%al
 554:	06                   	(bad)
 555:	03 46 58             	add    0x58(%rsi),%eax
 558:	00 02                	add    %al,(%rdx)
 55a:	04 01                	add    $0x1,%al
 55c:	06                   	(bad)
 55d:	74 05                	je     564 <data_segment+0x554>
 55f:	22 00                	and    (%rax),%al
 561:	02 04 02             	add    (%rdx,%rax,1),%al
 564:	06                   	(bad)
 565:	08 12                	or     %dl,(%rdx)
 567:	05 17 00 02 04       	add    $0x4020017,%eax
 56c:	01 01                	add    %eax,(%rcx)
 56e:	00 02                	add    %al,(%rdx)
 570:	04 01                	add    $0x1,%al
 572:	06                   	(bad)
 573:	4a 05 03 06 91 05    	rex.WX add $0x5910603,%rax
 579:	07                   	(bad)
 57a:	06                   	(bad)
 57b:	01 05 06 00 02 04    	add    %eax,0x4020006(%rip)        # 4020587 <terminal_row+0x3f19527>
 581:	01 90 00 02 04 01    	add    %edx,0x1040200(%rax)
 587:	58                   	pop    %rax
 588:	05 0c 03 16 01       	add    $0x116030c,%eax
 58d:	66 05 01 03          	add    $0x301,%ax
 591:	30 01                	xor    %al,(%rcx)
 593:	05 04 06 03 49       	add    $0x49030604,%eax
 598:	08 66 05             	or     %ah,0x5(%rsi)
 59b:	05 13 05 0b 06       	add    $0x60b0513,%eax
 5a0:	01 05 04 06 4b 13    	add    %eax,0x134b0604(%rip)        # 134b0baa <terminal_row+0x133a9b4a>
 5a6:	05 1a 01 05 11       	add    $0x1105011a,%eax
 5ab:	06                   	(bad)
 5ac:	01 05 1a 58 05 0b    	add    %eax,0xb05581a(%rip)        # b055dcc <terminal_row+0xaf4ed6c>
 5b2:	f1                   	int1
 5b3:	66 05 05 06          	add    $0x605,%ax
 5b7:	92                   	xchg   %eax,%edx
 5b8:	05 0b 06 01 05       	add    $0x501060b,%eax
 5bd:	1a 06                	sbb    (%rsi),%al
 5bf:	49 05 11 06 01 05    	rex.WB add $0x5010611,%rax
 5c5:	1a 58 05             	sbb    0x5(%rax),%bl
 5c8:	04 06                	add    $0x6,%al
 5ca:	84 05 07 06 01 05    	test   %al,0x5010607(%rip)        # 5010bd7 <terminal_row+0x4f09b77>
 5d0:	11 56 74             	adc    %edx,0x74(%rsi)
 5d3:	05 22 00 02 04       	add    $0x4020022,%eax
 5d8:	02 06                	add    (%rsi),%al
 5da:	03 6d 3c             	add    0x3c(%rbp),%ebp
 5dd:	05 17 00 02 04       	add    $0x4020017,%eax
 5e2:	01 01                	add    %eax,(%rcx)
 5e4:	00 02                	add    %al,(%rdx)
 5e6:	04 01                	add    $0x1,%al
 5e8:	06                   	(bad)
 5e9:	4a 05 03 06 59 05    	rex.WX add $0x5590603,%rax
 5ef:	07                   	(bad)
 5f0:	06                   	(bad)
 5f1:	01 05 06 00 02 04    	add    %eax,0x4020006(%rip)        # 40205fd <terminal_row+0x3f1959d>
 5f7:	01 90 00 02 04 01    	add    %edx,0x1040200(%rax)
 5fd:	d6                   	(bad)
 5fe:	05 09 03 0b 01       	add    $0x10b0309,%eax
 603:	05 04 06 03 0f       	add    $0xf030604,%eax
 608:	3c 13                	cmp    $0x13,%al
 60a:	05 0c 06 01 05       	add    $0x501060c,%eax
 60f:	04 06                	add    $0x6,%al
 611:	3d 05 0b 06 10       	cmp    $0x10060b05,%eax
 616:	3c 05                	cmp    $0x5,%al
 618:	11 06                	adc    %eax,(%rsi)
 61a:	03 71 01             	add    0x1(%rcx),%esi
 61d:	06                   	(bad)
 61e:	c8 05 04 06          	enter  $0x405,$0x6
 622:	03 34 9e             	add    (%rsi,%rbx,4),%esi
 625:	05 09 06 03 4c       	add    $0x4c030609,%eax
 62a:	01 05 0c 03 34 3c    	add    %eax,0x3c34030c(%rip)        # 3c34093c <MAGIC+0x2086593a>
 630:	05 04 06 3d 05       	add    $0x53d0604,%eax
 635:	0b 06                	or     (%rsi),%eax
 637:	01 3c 74             	add    %edi,(%rsp,%rsi,2)
 63a:	05 04 06 03 62       	add    $0x62030604,%eax
 63f:	01 05 14 06 13 05    	add    %eax,0x5130614(%rip)        # 5130c59 <terminal_row+0x5029bf9>
 645:	0a 3b                	or     (%rbx),%bh
 647:	05 04 06 4b 05       	add    $0x54b0604,%eax
 64c:	14 06                	adc    $0x6,%al
 64e:	01 05 04 06 08 67    	add    %eax,0x67080604(%rip)        # 67080c58 <MAGIC+0x4b5a5c56>
 654:	05 07 06 01 05       	add    $0x5010607,%eax
 659:	17                   	(bad)
 65a:	00 02                	add    %al,(%rdx)
 65c:	04 01                	add    $0x1,%al
 65e:	06                   	(bad)
 65f:	03 5b 82             	add    -0x7e(%rbx),%ebx
 662:	05 03 13 05 07       	add    $0x7051303,%eax
 667:	06                   	(bad)
 668:	01 05 06 00 02 04    	add    %eax,0x4020006(%rip)        # 4020674 <terminal_row+0x3f19614>
 66e:	01 90 05 17 00 02    	add    %edx,0x2001705(%rax)
 674:	04 01                	add    $0x1,%al
 676:	06                   	(bad)
 677:	8f 00                	pop    (%rax)
 679:	02 04 01             	add    (%rcx,%rax,1),%al
 67c:	06                   	(bad)
 67d:	01 05 04 06 03 2b    	add    %eax,0x2b030604(%rip)        # 2b030c87 <MAGIC+0xf555c85>
 683:	01 05 09 06 03 61    	add    %eax,0x61030609(%rip)        # 61030c92 <MAGIC+0x45555c90>
 689:	01 05 0b 03 1f 58    	add    %eax,0x581f030b(%rip)        # 581f099a <MAGIC+0x3c715998>
 68f:	05 0a 03 78 4a       	add    $0x4a78030a,%eax
 694:	05 04 06 03 0a       	add    $0xa030604,%eax
 699:	e4 05                	in     $0x5,%al
 69b:	0a 06                	or     (%rsi),%al
 69d:	01 05 04 06 ad 05    	add    %eax,0x5ad0604(%rip)        # 5ad0ca7 <terminal_row+0x59c9c47>
 6a3:	10 06                	adc    %al,(%rsi)
 6a5:	01 3c 05 04 06 08 75 	add    %edi,0x75080604(,%rax,1)
 6ac:	05 11 06 01 05       	add    $0x5010611,%eax
 6b1:	04 06                	add    $0x6,%al
 6b3:	ad                   	lods   %ds:(%rsi),%eax
 6b4:	05 07 06 01 05       	add    $0x5010607,%eax
 6b9:	17                   	(bad)
 6ba:	00 02                	add    %al,(%rdx)
 6bc:	04 01                	add    $0x1,%al
 6be:	06                   	(bad)
 6bf:	03 50 90             	add    -0x70(%rax),%edx
 6c2:	00 02                	add    %al,(%rdx)
 6c4:	04 01                	add    $0x1,%al
 6c6:	06                   	(bad)
 6c7:	3c 05                	cmp    $0x5,%al
 6c9:	22 00                	and    (%rax),%al
 6cb:	02 04 02             	add    (%rdx,%rax,1),%al
 6ce:	06                   	(bad)
 6cf:	08 2e                	or     %ch,(%rsi)
 6d1:	05 17 00 02 04       	add    $0x4020017,%eax
 6d6:	01 01                	add    %eax,(%rcx)
 6d8:	00 02                	add    %al,(%rdx)
 6da:	04 01                	add    $0x1,%al
 6dc:	06                   	(bad)
 6dd:	4a 05 03 06 59 05    	rex.WX add $0x5590603,%rax
 6e3:	07                   	(bad)
 6e4:	06                   	(bad)
 6e5:	01 05 06 00 02 04    	add    %eax,0x4020006(%rip)        # 40206f1 <terminal_row+0x3f19691>
 6eb:	01 82 00 02 04 01    	add    %eax,0x1040200(%rdx)
 6f1:	e4 05                	in     $0x5,%al
 6f3:	04 06                	add    $0x6,%al
 6f5:	03 35 01 05 09 06    	add    0x6090501(%rip),%esi        # 6090bfc <terminal_row+0x5f89b9c>
 6fb:	03 56 01             	add    0x1(%rsi),%edx
 6fe:	05 0c 03 2a 58       	add    $0x582a030c,%eax
 703:	05 0a 03 77 3c       	add    $0x3c77030a,%eax
 708:	05 14 03 77 f2       	add    $0xf2770314,%eax
 70d:	08 74 05 04          	or     %dh,0x4(%rbp,%rax,1)
 711:	06                   	(bad)
 712:	03 71 01             	add    0x1(%rcx),%esi
 715:	05 07 06 01 05       	add    $0x5010607,%eax
 71a:	11 8e 05 0b 49 08    	adc    %ecx,0x8490b05(%rsi)
 720:	2e 05 10 03 1c 01    	cs add $0x11c0310,%eax
 726:	08 12                	or     %dl,(%rdx)
 728:	05 06 03 5c 01       	add    $0x15c0306,%eax
 72d:	05 02 06 03 3b       	add    $0x3b030602,%eax
 732:	3c 13                	cmp    $0x13,%al
 734:	05 09 06 01 02       	add    $0x2010609,%eax
 739:	05 00 01 01 78       	add    $0x78010100,%eax
 73e:	00 00                	add    %al,(%rax)
 740:	00 05 00 08 00 40    	add    %al,0x40000800(%rip)        # 40000f46 <MAGIC+0x24525f44>
 746:	00 00                	add    %al,(%rax)
 748:	00 01                	add    %al,(%rcx)
 74a:	01 01                	add    %eax,(%rcx)
 74c:	fb                   	sti
 74d:	0e                   	(bad)
 74e:	0d 00 01 01 01       	or     $0x1010100,%eax
 753:	01 00                	add    %eax,(%rax)
 755:	00 00                	add    %al,(%rax)
 757:	01 00                	add    %eax,(%rax)
 759:	00 01                	add    %al,(%rcx)
 75b:	01 01                	add    %eax,(%rcx)
 75d:	1f                   	(bad)
 75e:	04 2a                	add    $0x2a,%al
 760:	01 00                	add    %eax,(%rax)
 762:	00 53 01             	add    %dl,0x1(%rbx)
 765:	00 00                	add    %al,(%rax)
 767:	57                   	push   %rdi
 768:	00 00                	add    %al,(%rax)
 76a:	00 7d 01             	add    %bh,0x1(%rbp)
 76d:	00 00                	add    %al,(%rax)
 76f:	02 01                	add    (%rcx),%al
 771:	1f                   	(bad)
 772:	02 0f                	add    (%rdi),%cl
 774:	04 73                	add    $0x73,%al
 776:	01 00                	add    %eax,(%rax)
 778:	00 01                	add    %al,(%rcx)
 77a:	73 01                	jae    77d <data_segment+0x76d>
 77c:	00 00                	add    %al,(%rax)
 77e:	01 bc 00 00 00 02 15 	add    %edi,0x15020000(%rax,%rax,1)
 785:	01 00                	add    %eax,(%rax)
 787:	00 03                	add    %al,(%rbx)
 789:	05 15 00 09 02       	add    $0x2090015,%eax
 78e:	20 08                	and    %cl,(%rax)
 790:	10 00                	adc    %al,(%rax)
 792:	00 00                	add    %al,(%rax)
 794:	00 00                	add    %al,(%rax)
 796:	18 05 02 14 05 15    	sbb    %al,0x15051402(%rip)        # 15051b9e <terminal_row+0x14f4ab3e>
 79c:	06                   	(bad)
 79d:	10 05 02 23 05 15    	adc    %al,0x15052302(%rip)        # 15052aa5 <terminal_row+0x14f4ba45>
 7a3:	55                   	push   %rbp
 7a4:	05 0b a0 05 02       	add    $0x205a00b,%eax
 7a9:	06                   	(bad)
 7aa:	4b 06                	rex.WXB (bad)
 7ac:	4a 06                	rex.WX (bad)
 7ae:	5c                   	pop    %rsp
 7af:	05 01 06 13 66       	add    $0x66130601,%eax
 7b4:	02 02                	add    (%rdx),%al
 7b6:	00 01                	add    %al,(%rcx)
 7b8:	01 70 00             	add    %esi,0x0(%rax)
 7bb:	00 00                	add    %al,(%rax)
 7bd:	05 00 08 00 37       	add    $0x37000800,%eax
 7c2:	00 00                	add    %al,(%rax)
 7c4:	00 01                	add    %al,(%rcx)
 7c6:	01 01                	add    %eax,(%rcx)
 7c8:	fb                   	sti
 7c9:	0e                   	(bad)
 7ca:	0d 00 01 01 01       	or     $0x1010100,%eax
 7cf:	01 00                	add    %eax,(%rax)
 7d1:	00 00                	add    %al,(%rax)
 7d3:	01 00                	add    %eax,(%rax)
 7d5:	00 01                	add    %al,(%rcx)
 7d7:	01 01                	add    %eax,(%rcx)
 7d9:	1f                   	(bad)
 7da:	03 2a                	add    (%rdx),%ebp
 7dc:	01 00                	add    %eax,(%rax)
 7de:	00 cc                	add    %cl,%ah
 7e0:	01 00                	add    %eax,(%rax)
 7e2:	00 57 00             	add    %dl,0x0(%rdi)
 7e5:	00 00                	add    %al,(%rax)
 7e7:	02 01                	add    (%rcx),%al
 7e9:	1f                   	(bad)
 7ea:	02 0f                	add    (%rdi),%cl
 7ec:	03 c3                	add    %ebx,%eax
 7ee:	01 00                	add    %eax,(%rax)
 7f0:	00 01                	add    %al,(%rcx)
 7f2:	c3                   	ret
 7f3:	01 00                	add    %eax,(%rax)
 7f5:	00 01                	add    %al,(%rcx)
 7f7:	bc 00 00 00 02       	mov    $0x2000000,%esp
 7fc:	05 20 00 09 02       	add    $0x2090020,%eax
 801:	50                   	push   %rax
 802:	08 10                	or     %dl,(%rax)
 804:	00 00                	add    %al,(%rax)
 806:	00 00                	add    %al,(%rax)
 808:	00 14 05 02 13 13 05 	add    %dl,0x5131302(,%rax,1)
 80f:	09 01                	or     %eax,(%rcx)
 811:	06                   	(bad)
 812:	11 2f                	adc    %ebp,(%rdi)
 814:	58                   	pop    %rax
 815:	05 03 06 91 05       	add    $0x5910603,%eax
 81a:	06                   	(bad)
 81b:	06                   	(bad)
 81c:	01 05 09 06 49 05    	add    %eax,0x5490609(%rip)        # 5490e2b <terminal_row+0x5389dcb>
 822:	02 bc 05 01 06 13 02 	add    0x2130601(%rbp,%rax,1),%bh
 829:	01 00                	add    %eax,(%rax)
 82b:	01 01                	add    %eax,(%rcx)
 82d:	5a                   	pop    %rdx
 82e:	00 00                	add    %al,(%rax)
 830:	00 05 00 08 00 2e    	add    %al,0x2e000800(%rip)        # 2e001036 <MAGIC+0x12526034>
 836:	00 00                	add    %al,(%rax)
 838:	00 01                	add    %al,(%rcx)
 83a:	01 01                	add    %eax,(%rcx)
 83c:	fb                   	sti
 83d:	0e                   	(bad)
 83e:	0d 00 01 01 01       	or     $0x1010100,%eax
 843:	01 00                	add    %eax,(%rax)
 845:	00 00                	add    %al,(%rax)
 847:	01 00                	add    %eax,(%rax)
 849:	00 01                	add    %al,(%rcx)
 84b:	01 01                	add    %eax,(%rcx)
 84d:	1f                   	(bad)
 84e:	02 00                	add    (%rax),%al
 850:	00 00                	add    %al,(%rax)
 852:	00 2b                	add    %ch,(%rbx)
 854:	00 00                	add    %al,(%rax)
 856:	00 02                	add    %al,(%rdx)
 858:	01 1f                	add    %ebx,(%rdi)
 85a:	02 0f                	add    (%rdi),%cl
 85c:	02 d3                	add    %bl,%dl
 85e:	01 00                	add    %eax,(%rax)
 860:	00 01                	add    %al,(%rcx)
 862:	d3 01                	roll   %cl,(%rcx)
 864:	00 00                	add    %al,(%rax)
 866:	01 00                	add    %eax,(%rax)
 868:	09 02                	or     %eax,(%rdx)
 86a:	ce                   	(bad)
 86b:	08 10                	or     %dl,(%rax)
 86d:	00 00                	add    %al,(%rax)
 86f:	00 00                	add    %al,(%rax)
 871:	00 15 21 02 01 00    	add    %dl,0x10221(%rip)        # 10a98 <data_segment+0x10a88>
 877:	01 01                	add    %eax,(%rcx)
 879:	00 09                	add    %cl,(%rcx)
 87b:	02 d8                	add    %al,%bl
 87d:	08 10                	or     %dl,(%rax)
 87f:	00 00                	add    %al,(%rax)
 881:	00 00                	add    %al,(%rax)
 883:	00 1a                	add    %bl,(%rdx)
 885:	21 02                	and    %eax,(%rdx)
 887:	01 00                	add    %eax,(%rax)
 889:	01 01                	add    %eax,(%rcx)

Disassembly of section .debug_line_str:

0000000000000000 <.debug_line_str>:
   0:	2f                   	(bad)
   1:	68 6f 6d 65 2f       	push   $0x2f656d6f
   6:	61                   	(bad)
   7:	64 69 74 68 79 61 2f 	imul   $0x6f442f61,%fs:0x79(%rax,%rbp,2),%esi
   e:	44 6f 
  10:	63 75 6d             	movsxd 0x6d(%rbp),%esi
  13:	65 6e                	outsb  %gs:(%rsi),(%dx)
  15:	74 73                	je     8a <data_segment+0x7a>
  17:	2f                   	(bad)
  18:	41                   	rex.B
  19:	64 69 4f 53 2f 41 64 	imul   $0x6964412f,%fs:0x53(%rdi),%ecx
  20:	69 
  21:	4f 53                	rex.WRXB push %r11
  23:	2f                   	(bad)
  24:	6b 65 72 6e          	imul   $0x6e,0x72(%rbp),%esp
  28:	65 6c                	gs insb (%dx),%es:(%rdi)
  2a:	00 61 72             	add    %ah,0x72(%rcx)
  2d:	63 68 2f             	movsxd 0x2f(%rax),%ebp
  30:	78 38                	js     6a <data_segment+0x5a>
  32:	36 5f                	ss pop %rdi
  34:	36 34 00             	ss xor $0x0,%al
  37:	63 72 74             	movsxd 0x74(%rdx),%esi
  3a:	69 2e 53 00 62 6f    	imul   $0x6f620053,(%rsi),%ebp
  40:	6f                   	outsl  %ds:(%rsi),(%dx)
  41:	74 2e                	je     71 <data_segment+0x61>
  43:	53                   	push   %rbx
  44:	00 61 72             	add    %ah,0x72(%rcx)
  47:	63 68 2f             	movsxd 0x2f(%rax),%ebp
  4a:	78 38                	js     84 <data_segment+0x74>
  4c:	36 5f                	ss pop %rdi
  4e:	36 34 2f             	ss xor $0x2f,%al
  51:	74 74                	je     c7 <data_segment+0xb7>
  53:	79 2e                	jns    83 <data_segment+0x73>
  55:	63 00                	movsxd (%rax),%eax
  57:	2f                   	(bad)
  58:	75 73                	jne    cd <data_segment+0xbd>
  5a:	72 2f                	jb     8b <data_segment+0x7b>
  5c:	6c                   	insb   (%dx),%es:(%rdi)
  5d:	69 62 2f 67 63 63 2f 	imul   $0x2f636367,0x2f(%rdx),%esp
  64:	78 38                	js     9e <data_segment+0x8e>
  66:	36 5f                	ss pop %rdi
  68:	36 34 2d             	ss xor $0x2d,%al
  6b:	65 6c                	gs insb (%dx),%es:(%rdi)
  6d:	66 2f                	data16 (bad)
  6f:	31 34 2e             	xor    %esi,(%rsi,%rbp,1)
  72:	32 2e                	xor    (%rsi),%ch
  74:	30 2f                	xor    %ch,(%rdi)
  76:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%rsi),%ebp
  7d:	00 2f                	add    %ch,(%rdi)
  7f:	68 6f 6d 65 2f       	push   $0x2f656d6f
  84:	61                   	(bad)
  85:	64 69 74 68 79 61 2f 	imul   $0x6f442f61,%fs:0x79(%rax,%rbp,2),%esi
  8c:	44 6f 
  8e:	63 75 6d             	movsxd 0x6d(%rbp),%esi
  91:	65 6e                	outsb  %gs:(%rsi),(%dx)
  93:	74 73                	je     108 <data_segment+0xf8>
  95:	2f                   	(bad)
  96:	41                   	rex.B
  97:	64 69 4f 53 2f 41 64 	imul   $0x6964412f,%fs:0x53(%rdi),%ecx
  9e:	69 
  9f:	4f 53                	rex.WRXB push %r11
  a1:	2f                   	(bad)
  a2:	73 79                	jae    11d <data_segment+0x10d>
  a4:	73 72                	jae    118 <data_segment+0x108>
  a6:	6f                   	outsl  %ds:(%rsi),(%dx)
  a7:	6f                   	outsl  %ds:(%rsi),(%dx)
  a8:	74 2f                	je     d9 <data_segment+0xc9>
  aa:	75 73                	jne    11f <data_segment+0x10f>
  ac:	72 2f                	jb     dd <data_segment+0xcd>
  ae:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%rsi),%ebp
  b5:	00 76 67             	add    %dh,0x67(%rsi)
  b8:	61                   	(bad)
  b9:	2e 68 00 73 74 64    	cs push $0x64747300
  bf:	64 65 66 2e 68 00 73 	fs gs cs pushw $0x7300
  c6:	74 64                	je     12c <data_segment+0x11c>
  c8:	69 6e 74 2d 67 63 63 	imul   $0x6363672d,0x74(%rsi),%ebp
  cf:	2e 68 00 73 74 72    	cs push $0x72747300
  d5:	69 6e 67 2e 68 00 62 	imul   $0x6200682e,0x67(%rsi),%ebp
  dc:	6f                   	outsl  %ds:(%rsi),(%dx)
  dd:	6f                   	outsl  %ds:(%rsi),(%dx)
  de:	74 36                	je     116 <data_segment+0x106>
  e0:	34 2e                	xor    $0x2e,%al
  e2:	53                   	push   %rbx
  e3:	00 6b 65             	add    %ch,0x65(%rbx)
  e6:	72 6e                	jb     156 <data_segment+0x146>
  e8:	65 6c                	gs insb (%dx),%es:(%rdi)
  ea:	2f                   	(bad)
  eb:	6b 65 72 6e          	imul   $0x6e,0x72(%rbp),%esp
  ef:	65 6c                	gs insb (%dx),%es:(%rdi)
  f1:	2e 63 00             	cs movsxd (%rax),%eax
  f4:	6b 65 72 6e          	imul   $0x6e,0x72(%rbp),%esp
  f8:	65 6c                	gs insb (%dx),%es:(%rdi)
  fa:	2f                   	(bad)
  fb:	2e 2e 2f             	cs cs (bad)
  fe:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%rsi),%ebp
 105:	2f                   	(bad)
 106:	6b 65 72 6e          	imul   $0x6e,0x72(%rbp),%esp
 10a:	65 6c                	gs insb (%dx),%es:(%rdi)
 10c:	00 73 74             	add    %dh,0x74(%rbx)
 10f:	64 69 6f 2e 68 00 74 	imul   $0x74740068,%fs:0x2e(%rdi),%ebp
 116:	74 
 117:	79 2e                	jns    147 <data_segment+0x137>
 119:	68 00 73 74 64       	push   $0x64747300
 11e:	69 6f 2f 70 72 69 6e 	imul   $0x6e697270,0x2f(%rdi),%ebp
 125:	74 66                	je     18d <data_segment+0x17d>
 127:	2e 63 00             	cs movsxd (%rax),%eax
 12a:	2f                   	(bad)
 12b:	68 6f 6d 65 2f       	push   $0x2f656d6f
 130:	61                   	(bad)
 131:	64 69 74 68 79 61 2f 	imul   $0x6f442f61,%fs:0x79(%rax,%rbp,2),%esi
 138:	44 6f 
 13a:	63 75 6d             	movsxd 0x6d(%rbp),%esi
 13d:	65 6e                	outsb  %gs:(%rsi),(%dx)
 13f:	74 73                	je     1b4 <data_segment+0x1a4>
 141:	2f                   	(bad)
 142:	41                   	rex.B
 143:	64 69 4f 53 2f 41 64 	imul   $0x6964412f,%fs:0x53(%rdi),%ecx
 14a:	69 
 14b:	4f 53                	rex.WRXB push %r11
 14d:	2f                   	(bad)
 14e:	6c                   	insb   (%dx),%es:(%rdi)
 14f:	69 62 63 00 73 74 64 	imul   $0x64747300,0x63(%rdx),%esp
 156:	69 6f 00 3c 62 75 69 	imul   $0x6975623c,0x0(%rdi),%ebp
 15d:	6c                   	insb   (%dx),%es:(%rdi)
 15e:	74 2d                	je     18d <data_segment+0x17d>
 160:	69 6e 3e 00 73 74 64 	imul   $0x64747300,0x3e(%rsi),%ebp
 167:	61                   	(bad)
 168:	72 67                	jb     1d1 <data_segment+0x1c1>
 16a:	2e 68 00 73 74 64    	cs push $0x64747300
 170:	69 6f 2f 70 75 74 63 	imul   $0x63747570,0x2f(%rdi),%ebp
 177:	68 61 72 2e 63       	push   $0x632e7261
 17c:	00 2f                	add    %ch,(%rdi)
 17e:	68 6f 6d 65 2f       	push   $0x2f656d6f
 183:	61                   	(bad)
 184:	64 69 74 68 79 61 2f 	imul   $0x6f442f61,%fs:0x79(%rax,%rbp,2),%esi
 18b:	44 6f 
 18d:	63 75 6d             	movsxd 0x6d(%rbp),%esi
 190:	65 6e                	outsb  %gs:(%rsi),(%dx)
 192:	74 73                	je     207 <data_segment+0x1f7>
 194:	2f                   	(bad)
 195:	41                   	rex.B
 196:	64 69 4f 53 2f 41 64 	imul   $0x6964412f,%fs:0x53(%rdi),%ecx
 19d:	69 
 19e:	4f 53                	rex.WRXB push %r11
 1a0:	2f                   	(bad)
 1a1:	73 79                	jae    21c <data_segment+0x20c>
 1a3:	73 72                	jae    217 <data_segment+0x207>
 1a5:	6f                   	outsl  %ds:(%rsi),(%dx)
 1a6:	6f                   	outsl  %ds:(%rsi),(%dx)
 1a7:	74 2f                	je     1d8 <data_segment+0x1c8>
 1a9:	75 73                	jne    21e <data_segment+0x20e>
 1ab:	72 2f                	jb     1dc <data_segment+0x1cc>
 1ad:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%rsi),%ebp
 1b4:	2f                   	(bad)
 1b5:	6b 65 72 6e          	imul   $0x6e,0x72(%rbp),%esp
 1b9:	65 6c                	gs insb (%dx),%es:(%rdi)
 1bb:	00 73 74             	add    %dh,0x74(%rbx)
 1be:	72 69                	jb     229 <data_segment+0x219>
 1c0:	6e                   	outsb  %ds:(%rsi),(%dx)
 1c1:	67 2f                	addr32 (bad)
 1c3:	73 74                	jae    239 <data_segment+0x229>
 1c5:	72 6c                	jb     233 <data_segment+0x223>
 1c7:	65 6e                	outsb  %gs:(%rsi),(%dx)
 1c9:	2e 63 00             	cs movsxd (%rax),%eax
 1cc:	73 74                	jae    242 <data_segment+0x232>
 1ce:	72 69                	jb     239 <data_segment+0x229>
 1d0:	6e                   	outsb  %ds:(%rsi),(%dx)
 1d1:	67 00 63 72          	add    %ah,0x72(%ebx)
 1d5:	74 6e                	je     245 <data_segment+0x235>
 1d7:	2e 53                	cs push %rbx
	...

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
   0:	1f                   	(bad)
   1:	00 00                	add    %al,(%rax)
   3:	00 05 00 01 08 00    	add    %al,0x80100(%rip)        # 80109 <data_segment+0x800f9>
   9:	00 00                	add    %al,(%rax)
   b:	00 01                	add    %al,(%rcx)
   d:	00 00                	add    %al,(%rax)
   f:	00 00                	add    %al,(%rax)
  11:	0c 00                	or     $0x0,%al
  13:	00 00                	add    %al,(%rax)
  15:	00 00                	add    %al,(%rax)
  17:	00 00                	add    %al,(%rax)
  19:	13 00                	adc    (%rax),%eax
  1b:	00 00                	add    %al,(%rax)
  1d:	3e 00 00             	ds add %al,(%rax)
  20:	00 01                	add    %al,(%rcx)
  22:	80 36 00             	xorb   $0x0,(%rsi)
  25:	00 00                	add    %al,(%rax)
  27:	05 00 01 08 12       	add    $0x12080100,%eax
  2c:	00 00                	add    %al,(%rax)
  2e:	00 01                	add    %al,(%rcx)
  30:	60                   	(bad)
  31:	00 00                	add    %al,(%rax)
  33:	00 3d 01 10 00 00    	add    %bh,0x1001(%rip)        # 103a <data_segment+0x102a>
  39:	00 00                	add    %al,(%rax)
  3b:	00 95 02 4a 00 00    	add    %dl,0x4a02(%rbp)
  41:	00 13                	add    %dl,(%rbx)
  43:	00 00                	add    %al,(%rax)
  45:	00 3e                	add    %bh,(%rsi)
  47:	00 00                	add    %al,(%rax)
  49:	00 01                	add    %al,(%rcx)
  4b:	80 02 5d             	addb   $0x5d,(%rdx)
  4e:	00 00                	add    %al,(%rax)
  50:	00 38                	add    %bh,(%rax)
  52:	3d 01 10 00 00       	cmp    $0x1001,%eax
  57:	00 00                	add    %al,(%rax)
  59:	00 2e                	add    %ch,(%rsi)
  5b:	03 00                	add    (%rax),%eax
  5d:	d3 05 00 00 05 00    	roll   %cl,0x50000(%rip)        # 50063 <data_segment+0x50053>
  63:	01 08                	add    %ecx,(%rax)
  65:	3a 00                	cmp    (%rax),%al
  67:	00 00                	add    %al,(%rax)
  69:	1b b1 02 00 00 1d    	sbb    0x1d000002(%rcx),%esi
  6f:	45 00 00             	add    %r8b,(%r8)
  72:	00 00                	add    %al,(%rax)
  74:	00 00                	add    %al,(%rax)
  76:	00 60 02             	add    %ah,0x2(%rax)
  79:	10 00                	adc    %al,(%rax)
  7b:	00 00                	add    %al,(%rax)
  7d:	00 00                	add    %al,(%rax)
  7f:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
  80:	02 00                	add    (%rax),%al
  82:	00 00                	add    %al,(%rax)
  84:	00 00                	add    %al,(%rax)
  86:	00 f3                	add    %dh,%bl
  88:	00 00                	add    %al,(%rax)
  8a:	00 02                	add    %al,(%rdx)
  8c:	08 05 a8 02 00 00    	or     %al,0x2a8(%rip)        # 33a <data_segment+0x32a>
  92:	0a 97 00 00 00 03    	or     0x3000000(%rdi),%dl
  98:	d6                   	(bad)
  99:	17                   	(bad)
  9a:	46 00 00             	rex.RX add %r8b,(%rax)
  9d:	00 0b                	add    %cl,(%rbx)
  9f:	35 00 00 00 02       	xor    $0x2000000,%eax
  a4:	08 07                	or     %al,(%rdi)
  a6:	73 01                	jae    a9 <data_segment+0x99>
  a8:	00 00                	add    %al,(%rax)
  aa:	1c 04                	sbb    $0x4,%al
  ac:	05 69 6e 74 00       	add    $0x746e69,%eax
  b1:	02 08                	add    (%rax),%cl
  b3:	05 a3 02 00 00       	add    $0x2a3,%eax
  b8:	02 10                	add    (%rax),%dl
  ba:	04 75                	add    $0x75,%al
  bc:	03 00                	add    (%rax),%eax
  be:	00 02                	add    %al,(%rdx)
  c0:	01 06                	add    %eax,(%rsi)
  c2:	57                   	push   %rdi
  c3:	01 00                	add    %eax,(%rax)
  c5:	00 02                	add    %al,(%rdx)
  c7:	02 05 1d 03 00 00    	add    0x31d(%rip),%al        # 3ea <data_segment+0x3da>
  cd:	0a 2b                	or     (%rbx),%ch
  cf:	02 00                	add    (%rax),%al
  d1:	00 04 2e             	add    %al,(%rsi,%rbp,1)
  d4:	18 7c 00 00          	sbb    %bh,0x0(%rax,%rax,1)
  d8:	00 02                	add    %al,(%rdx)
  da:	01 08                	add    %ecx,(%rax)
  dc:	55                   	push   %rbp
  dd:	01 00                	add    %eax,(%rax)
  df:	00 0a                	add    %cl,(%rdx)
  e1:	27                   	(bad)
  e2:	03 00                	add    (%rax),%eax
  e4:	00 04 31             	add    %al,(%rcx,%rsi,1)
  e7:	19 8f 00 00 00 02    	sbb    %ecx,0x2000000(%rdi)
  ed:	02 07                	add    (%rdi),%al
  ef:	85 01                	test   %eax,(%rcx)
  f1:	00 00                	add    %al,(%rax)
  f3:	02 04 07             	add    (%rdi,%rax,1),%al
  f6:	78 01                	js     f9 <data_segment+0xe9>
  f8:	00 00                	add    %al,(%rax)
  fa:	1d eb 00 00 00       	sbb    $0xeb,%eax
  ff:	07                   	(bad)
 100:	04 96                	add    $0x96,%al
 102:	00 00                	add    %al,(%rax)
 104:	00 02                	add    %al,(%rdx)
 106:	06                   	(bad)
 107:	06                   	(bad)
 108:	10 01                	adc    %al,(%rcx)
 10a:	00 00                	add    %al,(%rax)
 10c:	01 ab 03 00 00 00    	add    %ebp,0x3(%rbx)
 112:	01 e4                	add    %esp,%esp
 114:	01 00                	add    %eax,(%rax)
 116:	00 01                	add    %al,(%rcx)
 118:	01 81 03 00 00 02    	add    %eax,0x2000003(%rcx)
 11e:	01 94 02 00 00 03 01 	add    %edx,0x1030000(%rdx,%rax,1)
 125:	98                   	cwtl
 126:	01 00                	add    %eax,(%rax)
 128:	00 04 01             	add    %al,(%rcx,%rax,1)
 12b:	ae                   	scas   %es:(%rdi),%al
 12c:	00 00                	add    %al,(%rax)
 12e:	00 05 01 33 02 00    	add    %al,0x23301(%rip)        # 23435 <data_segment+0x23425>
 134:	00 06                	add    %al,(%rsi)
 136:	01 1c 01             	add    %ebx,(%rcx,%rax,1)
 139:	00 00                	add    %al,(%rax)
 13b:	07                   	(bad)
 13c:	01 07                	add    %eax,(%rdi)
 13e:	02 00                	add    (%rax),%al
 140:	00 08                	add    %cl,(%rax)
 142:	01 b1 01 00 00 09    	add    %esi,0x9000001(%rcx)
 148:	01 ca                	add    %ecx,%edx
 14a:	00 00                	add    %al,(%rax)
 14c:	00 0a                	add    %cl,(%rdx)
 14e:	01 43 02             	add    %eax,0x2(%rbx)
 151:	00 00                	add    %al,(%rax)
 153:	0b 01                	or     (%rcx),%eax
 155:	f3 01 00             	repz add %eax,(%rax)
 158:	00 0c 01             	add    %cl,(%rcx,%rax,1)
 15b:	58                   	pop    %rax
 15c:	02 00                	add    (%rax),%al
 15e:	00 0d 01 40 03 00    	add    %cl,0x34001(%rip)        # 34165 <data_segment+0x34155>
 164:	00 0e                	add    %cl,(%rsi)
 166:	01 70 02             	add    %esi,0x2(%rax)
 169:	00 00                	add    %al,(%rax)
 16b:	0f 00 11             	lldt   (%rcx)
 16e:	13 03                	adc    (%rbx),%eax
 170:	00 00                	add    %al,(%rax)
 172:	0a 41 00             	or     0x0(%rcx),%al
 175:	00 00                	add    %al,(%rax)
 177:	50                   	push   %rax
 178:	11 1b                	adc    %ebx,(%rbx)
 17a:	02 00                	add    (%rax),%al
 17c:	00 0c 41             	add    %cl,(%rcx,%rax,2)
 17f:	00 00                	add    %al,(%rax)
 181:	00 19                	add    %bl,(%rcx)
 183:	0c e0                	or     $0xe0,%al
 185:	00 00                	add    %al,(%rax)
 187:	00 0e                	add    %cl,(%rsi)
 189:	18 36                	sbb    %dh,(%rsi)
 18b:	01 00                	add    %eax,(%rax)
 18d:	00 12                	add    %dl,(%rdx)
 18f:	83 00 00             	addl   $0x0,(%rax)
 192:	00 0b                	add    %cl,(%rbx)
 194:	31 01                	xor    %eax,(%rcx)
 196:	00 00                	add    %al,(%rax)
 198:	0d 68 03 00 00       	or     $0x368,%eax
 19d:	11 0f                	adc    %ecx,(%rdi)
 19f:	35 00 00 00 09       	xor    $0x9000000,%eax
 1a4:	03 60 70             	add    0x70(%rax),%esp
 1a7:	10 00                	adc    %al,(%rax)
 1a9:	00 00                	add    %al,(%rax)
 1ab:	00 00                	add    %al,(%rax)
 1ad:	0d fa 00 00 00       	or     $0xfa,%eax
 1b2:	12 0f                	adc    (%rdi),%cl
 1b4:	35 00 00 00 09       	xor    $0x9000000,%eax
 1b9:	03 58 70             	add    0x70(%rax),%ebx
 1bc:	10 00                	adc    %al,(%rax)
 1be:	00 00                	add    %al,(%rax)
 1c0:	00 00                	add    %al,(%rax)
 1c2:	0d c6 01 00 00       	or     $0x1c6,%eax
 1c7:	13 10                	adc    (%rax),%edx
 1c9:	70 00                	jo     1cb <data_segment+0x1bb>
 1cb:	00 00                	add    %al,(%rax)
 1cd:	09 03                	or     %eax,(%rbx)
 1cf:	50                   	push   %rax
 1d0:	70 10                	jo     1e2 <data_segment+0x1d2>
 1d2:	00 00                	add    %al,(%rax)
 1d4:	00 00                	add    %al,(%rax)
 1d6:	00 06                	add    %al,(%rsi)
 1d8:	9e                   	sahf
 1d9:	00 00                	add    %al,(%rax)
 1db:	00 15 12 31 01 00    	add    %dl,0x13112(%rip)        # 132f3 <data_segment+0x132e3>
 1e1:	00 1e                	add    %bl,(%rsi)
 1e3:	15 01 00 00 05       	adc    $0x5000001,%eax
 1e8:	10 08                	adc    %cl,(%rax)
 1ea:	35 00 00 00 9b       	xor    $0x9b000000,%eax
 1ef:	01 00                	add    %eax,(%rax)
 1f1:	00 1f                	add    %bl,(%rdi)
 1f3:	9b                   	fwait
 1f4:	01 00                	add    %eax,(%rax)
 1f6:	00 00                	add    %al,(%rax)
 1f8:	12 a7 01 00 00 02    	adc    0x2000001(%rdi),%ah
 1fe:	01 06                	add    %eax,(%rsi)
 200:	5e                   	pop    %rsi
 201:	01 00                	add    %eax,(%rax)
 203:	00 0b                	add    %cl,(%rbx)
 205:	a0 01 00 00 04 71 00 	movabs 0x7104000001,%al
 20c:	00 00 
 20e:	6e                   	outsb  %ds:(%rsi),(%dx)
 20f:	c0 04 10 00          	rolb   $0x0,(%rax,%rdx,1)
 213:	00 00                	add    %al,(%rax)
 215:	00 00                	add    %al,(%rax)
 217:	46 00 00             	rex.RX add %r8b,(%rax)
 21a:	00 00                	add    %al,(%rax)
 21c:	00 00                	add    %al,(%rax)
 21e:	00 01                	add    %al,(%rcx)
 220:	9c                   	pushf
 221:	09 02                	or     %eax,(%rdx)
 223:	00 00                	add    %al,(%rax)
 225:	05 7f 00 00 00       	add    $0x7f,%eax
 22a:	6e                   	outsb  %ds:(%rsi),(%dx)
 22b:	28 9b 01 00 00 14    	sub    %bl,0x14000001(%rbx)
 231:	00 00                	add    %al,(%rax)
 233:	00 0c 00             	add    %cl,(%rax,%rax,1)
 236:	00 00                	add    %al,(%rax)
 238:	13 ed                	adc    %ebp,%ebp
 23a:	04 10                	add    $0x10,%al
 23c:	00 00                	add    %al,(%rax)
 23e:	00 00                	add    %al,(%rax)
 240:	00 85 01 00 00 f3    	add    %al,-0xcffffff(%rbp)
 246:	01 00                	add    %eax,(%rax)
 248:	00 07                	add    %al,(%rdi)
 24a:	01 55 02             	add    %edx,0x2(%rbp)
 24d:	73 00                	jae    24f <data_segment+0x23f>
 24f:	00 20                	add    %ah,(%rax)
 251:	06                   	(bad)
 252:	05 10 00 00 00       	add    $0x10,%eax
 257:	00 00                	add    %al,(%rax)
 259:	09 02                	or     %eax,(%rdx)
 25b:	00 00                	add    %al,(%rax)
 25d:	07                   	(bad)
 25e:	01 55 03             	add    %edx,0x3(%rbp)
 261:	a3 01 55 00 00 04 d5 	movabs %eax,0x1d50400005501
 268:	01 00 
 26a:	00 66 60             	add    %ah,0x60(%rsi)
 26d:	04 10                	add    $0x10,%al
 26f:	00 00                	add    %al,(%rax)
 271:	00 00                	add    %al,(%rax)
 273:	00 58 00             	add    %bl,0x0(%rax)
 276:	00 00                	add    %al,(%rax)
 278:	00 00                	add    %al,(%rax)
 27a:	00 00                	add    %al,(%rax)
 27c:	01 9c 70 02 00 00 05 	add    %ebx,0x5000002(%rax,%rsi,2)
 283:	f5                   	cmc
 284:	00 00                	add    %al,(%rax)
 286:	00 66 22             	add    %ah,0x22(%rsi)
 289:	9b                   	fwait
 28a:	01 00                	add    %eax,(%rax)
 28c:	00 38                	add    %bh,(%rax)
 28e:	00 00                	add    %al,(%rax)
 290:	00 34 00             	add    %dh,(%rax,%rax,1)
 293:	00 00                	add    %al,(%rax)
 295:	05 26 02 00 00       	add    $0x226,%eax
 29a:	66 2f                	data16 (bad)
 29c:	35 00 00 00 4e       	xor    $0x4e000000,%eax
 2a1:	00 00                	add    %al,(%rax)
 2a3:	00 4a 00             	add    %cl,0x0(%rdx)
 2a6:	00 00                	add    %al,(%rax)
 2a8:	21 4a 00             	and    %ecx,0x0(%rdx)
 2ab:	00 00                	add    %al,(%rax)
 2ad:	08 69 00             	or     %ch,0x0(%rcx)
 2b0:	68 10 35 00 00       	push   $0x3510
 2b5:	00 66 00             	add    %ah,0x0(%rsi)
 2b8:	00 00                	add    %al,(%rax)
 2ba:	60                   	(bad)
 2bb:	00 00                	add    %al,(%rax)
 2bd:	00 14 aa             	add    %dl,(%rdx,%rbp,4)
 2c0:	04 10                	add    $0x10,%al
 2c2:	00 00                	add    %al,(%rax)
 2c4:	00 00                	add    %al,(%rax)
 2c6:	00 70 02             	add    %dh,0x2(%rax)
 2c9:	00 00                	add    %al,(%rax)
 2cb:	00 00                	add    %al,(%rax)
 2cd:	22 86 00 00 00 01    	and    0x1000000(%rsi),%al
 2d3:	4f 06                	rex.WRXB (bad)
 2d5:	01 9e 02 00 00 23    	add    %ebx,0x23000002(%rsi)
 2db:	63 00                	movsxd (%rax),%eax
 2dd:	01 4f 1c             	add    %ecx,0x1c(%rdi)
 2e0:	a0 01 00 00 06 50 01 	movabs 0x15006000001,%al
 2e7:	00 00 
 2e9:	50                   	push   %rax
 2ea:	09 4d 00             	or     %ecx,0x0(%rbp)
 2ed:	00 00                	add    %al,(%rax)
 2ef:	06                   	(bad)
 2f0:	c0 00 00             	rolb   $0x0,(%rax)
 2f3:	00 51 13             	add    %dl,0x13(%rcx)
 2f6:	7c 00                	jl     2f8 <data_segment+0x2e8>
 2f8:	00 00                	add    %al,(%rax)
 2fa:	00 24 3b             	add    %ah,(%rbx,%rdi,1)
 2fd:	01 00                	add    %eax,(%rax)
 2ff:	00 01                	add    %al,(%rcx)
 301:	45 06                	rex.RB (bad)
 303:	30 03                	xor    %al,(%rbx)
 305:	10 00                	adc    %al,(%rax)
 307:	00 00                	add    %al,(%rax)
 309:	00 00                	add    %al,(%rax)
 30b:	44 00 00             	add    %r8b,(%rax)
 30e:	00 00                	add    %al,(%rax)
 310:	00 00                	add    %al,(%rax)
 312:	00 01                	add    %al,(%rcx)
 314:	9c                   	pushf
 315:	1a 03                	sbb    (%rbx),%al
 317:	00 00                	add    %al,(%rax)
 319:	0c 64                	or     $0x64,%al
 31b:	00 00                	add    %al,(%rax)
 31d:	00 46 10             	add    %al,0x10(%rsi)
 320:	31 01                	xor    %eax,(%rcx)
 322:	00 00                	add    %al,(%rax)
 324:	0e                   	(bad)
 325:	30 03                	xor    %al,(%rbx)
 327:	10 00                	adc    %al,(%rax)
 329:	00 00                	add    %al,(%rax)
 32b:	00 00                	add    %al,(%rax)
 32d:	43 00 00             	rex.XB add %al,(%r8)
 330:	00 00                	add    %al,(%rax)
 332:	00 00                	add    %al,(%rax)
 334:	00 08                	add    %cl,(%rax)
 336:	78 00                	js     338 <data_segment+0x328>
 338:	49 0d 4d 00 00 00    	rex.WB or $0x4d,%rax
 33e:	96                   	xchg   %eax,%esi
 33f:	00 00                	add    %al,(%rax)
 341:	00 8a 00 00 00 15    	add    %cl,0x15000000(%rdx)
 347:	e2 04                	loop   34d <data_segment+0x33d>
 349:	00 00                	add    %al,(%rax)
 34b:	60                   	(bad)
 34c:	03 10                	add    (%rax),%edx
 34e:	00 00                	add    %al,(%rax)
 350:	00 00                	add    %al,(%rax)
 352:	00 02                	add    %al,(%rdx)
 354:	3a 00                	cmp    (%rax),%al
 356:	00 00                	add    %al,(%rax)
 358:	4a 3a 03             	rex.WX cmp (%rbx),%al
 35b:	f1                   	int1
 35c:	04 00                	add    $0x0,%al
 35e:	00 e8                	add    %ch,%al
 360:	00 00                	add    %al,(%rax)
 362:	00 e4                	add    %ah,%ah
 364:	00 00                	add    %al,(%rax)
 366:	00 03                	add    %al,(%rbx)
 368:	fc                   	cld
 369:	04 00                	add    $0x0,%al
 36b:	00 ff                	add    %bh,%bh
 36d:	00 00                	add    %al,(%rax)
 36f:	00 fb                	add    %bh,%bl
 371:	00 00                	add    %al,(%rax)
 373:	00 00                	add    %al,(%rax)
 375:	00 00                	add    %al,(%rax)
 377:	04 30                	add    $0x30,%al
 379:	03 00                	add    (%rax),%eax
 37b:	00 37                	add    %dh,(%rdi)
 37d:	c0 02 10             	rolb   $0x10,(%rdx)
 380:	00 00                	add    %al,(%rax)
 382:	00 00                	add    %al,(%rax)
 384:	00 65 00             	add    %ah,0x0(%rbp)
 387:	00 00                	add    %al,(%rax)
 389:	00 00                	add    %al,(%rax)
 38b:	00 00                	add    %al,(%rax)
 38d:	01 9c 95 03 00 00 0f 	add    %ebx,0xf000003(%rbp,%rdx,4)
 394:	50                   	push   %rax
 395:	01 00                	add    %eax,(%rax)
 397:	00 37                	add    %dh,(%rdi)
 399:	1a 4d 00             	sbb    0x0(%rbp),%cl
 39c:	00 00                	add    %al,(%rax)
 39e:	01 55 0c             	add    %edx,0xc(%rbp)
 3a1:	64 00 00             	add    %al,%fs:(%rax)
 3a4:	00 38                	add    %bh,(%rax)
 3a6:	10 31                	adc    %dh,(%rcx)
 3a8:	01 00                	add    %eax,(%rax)
 3aa:	00 0e                	add    %cl,(%rsi)
 3ac:	c0 02 10             	rolb   $0x10,(%rdx)
 3af:	00 00                	add    %al,(%rax)
 3b1:	00 00                	add    %al,(%rax)
 3b3:	00 64 00 00          	add    %ah,0x0(%rax,%rax,1)
 3b7:	00 00                	add    %al,(%rax)
 3b9:	00 00                	add    %al,(%rax)
 3bb:	00 08                	add    %cl,(%rax)
 3bd:	79 00                	jns    3bf <data_segment+0x3af>
 3bf:	3b 0d 4d 00 00 00    	cmp    0x4d(%rip),%ecx        # 412 <data_segment+0x402>
 3c5:	24 01                	and    $0x1,%al
 3c7:	00 00                	add    %al,(%rax)
 3c9:	1e                   	(bad)
 3ca:	01 00                	add    %eax,(%rax)
 3cc:	00 0e                	add    %cl,(%rsi)
 3ce:	e0 02                	loopne 3d2 <data_segment+0x3c2>
 3d0:	10 00                	adc    %al,(%rax)
 3d2:	00 00                	add    %al,(%rax)
 3d4:	00 00                	add    %al,(%rax)
 3d6:	33 00                	xor    (%rax),%eax
 3d8:	00 00                	add    %al,(%rax)
 3da:	00 00                	add    %al,(%rax)
 3dc:	00 00                	add    %al,(%rax)
 3de:	08 78 00             	or     %bh,0x0(%rax)
 3e1:	3c 11                	cmp    $0x11,%al
 3e3:	4d 00 00             	rex.WRB add %r8b,(%r8)
 3e6:	00 3f                	add    %bh,(%rdi)
 3e8:	01 00                	add    %eax,(%rax)
 3ea:	00 39                	add    %bh,(%rcx)
 3ec:	01 00                	add    %eax,(%rax)
 3ee:	00 00                	add    %al,(%rax)
 3f0:	00 00                	add    %al,(%rax)
 3f2:	04 91                	add    $0x91,%al
 3f4:	03 00                	add    (%rax),%eax
 3f6:	00 31                	add    %dh,(%rcx)
 3f8:	a0 02 10 00 00 00 00 	movabs 0x1900000000001002,%al
 3ff:	00 19 
 401:	00 00                	add    %al,(%rax)
 403:	00 00                	add    %al,(%rax)
 405:	00 00                	add    %al,(%rax)
 407:	00 01                	add    %al,(%rcx)
 409:	9c                   	pushf
 40a:	29 04 00             	sub    %eax,(%rax,%rax,1)
 40d:	00 0f                	add    %cl,(%rdi)
 40f:	c0 00 00             	rolb   $0x0,(%rax)
 412:	00 31                	add    %dh,(%rcx)
 414:	28 7c 00 00          	sub    %bh,0x0(%rax,%rax,1)
 418:	00 01                	add    %al,(%rcx)
 41a:	55                   	push   %rbp
 41b:	05 bb 03 00 00       	add    $0x3bb,%eax
 420:	31 3b                	xor    %edi,(%rbx)
 422:	70 00                	jo     424 <data_segment+0x414>
 424:	00 00                	add    %al,(%rax)
 426:	83 01 00             	addl   $0x0,(%rcx)
 429:	00 7f 01             	add    %bh,0x1(%rdi)
 42c:	00 00                	add    %al,(%rax)
 42e:	16                   	(bad)
 42f:	78 00                	js     431 <data_segment+0x421>
 431:	53                   	push   %rbx
 432:	35 00 00 00 01       	xor    $0x1000000,%eax
 437:	51                   	push   %rcx
 438:	16                   	(bad)
 439:	79 00                	jns    43b <data_segment+0x42b>
 43b:	5d                   	pop    %rbp
 43c:	35 00 00 00 01       	xor    $0x1000000,%eax
 441:	52                   	push   %rdx
 442:	25 a5 03 00 00       	and    $0x3a5,%eax
 447:	01 32                	add    %esi,(%rdx)
 449:	12 41 00             	adc    0x0(%rcx),%al
 44c:	00 00                	add    %al,(%rax)
 44e:	93                   	xchg   %eax,%ebx
 44f:	01 00                	add    %eax,(%rax)
 451:	00 91 01 00 00 15    	add    %dl,0x15000001(%rcx)
 457:	e2 04                	loop   45d <data_segment+0x44d>
 459:	00 00                	add    %al,(%rax)
 45b:	a0 02 10 00 00 00 00 	movabs 0x300000000001002,%al
 462:	00 03 
 464:	2d 00 00 00 33       	sub    $0x33000000,%eax
 469:	1e                   	(bad)
 46a:	03 f1                	add    %ecx,%esi
 46c:	04 00                	add    $0x0,%al
 46e:	00 a3 01 00 00 a1    	add    %ah,-0x5effffff(%rbx)
 474:	01 00                	add    %eax,(%rax)
 476:	00 03                	add    %al,(%rbx)
 478:	fc                   	cld
 479:	04 00                	add    $0x0,%al
 47b:	00 ab 01 00 00 a9    	add    %ch,-0x56ffffff(%rbx)
 481:	01 00                	add    %eax,(%rax)
 483:	00 00                	add    %al,(%rax)
 485:	00 04 56             	add    %al,(%rsi,%rdx,2)
 488:	03 00                	add    (%rax),%eax
 48a:	00 2c 70             	add    %ch,(%rax,%rsi,2)
 48d:	02 10                	add    (%rax),%dl
 48f:	00 00                	add    %al,(%rax)
 491:	00 00                	add    %al,(%rax)
 493:	00 28                	add    %ch,(%rax)
 495:	00 00                	add    %al,(%rax)
 497:	00 00                	add    %al,(%rax)
 499:	00 00                	add    %al,(%rax)
 49b:	00 01                	add    %al,(%rcx)
 49d:	9c                   	pushf
 49e:	a2 04 00 00 0f 0a 01 	movabs %al,0x10a0f000004
 4a5:	00 00 
 4a7:	2c 27                	sub    $0x27,%al
 4a9:	9d                   	popf
 4aa:	00 00                	add    %al,(%rax)
 4ac:	00 01                	add    %al,(%rcx)
 4ae:	55                   	push   %rbp
 4af:	05 a6 01 00 00       	add    $0x1a6,%eax
 4b4:	2c 42                	sub    $0x42,%al
 4b6:	9d                   	popf
 4b7:	00 00                	add    %al,(%rax)
 4b9:	00 b5 01 00 00 b1    	add    %dh,-0x4effffff(%rbp)
 4bf:	01 00                	add    %eax,(%rax)
 4c1:	00 26                	add    %ah,(%rsi)
 4c3:	08 05 00 00 70 02    	or     %al,0x2700000(%rip)        # 27004c9 <terminal_row+0x25f9469>
 4c9:	10 00                	adc    %al,(%rax)
 4cb:	00 00                	add    %al,(%rax)
 4cd:	00 00                	add    %al,(%rax)
 4cf:	02 70 02             	add    0x2(%rax),%dh
 4d2:	10 00                	adc    %al,(%rax)
 4d4:	00 00                	add    %al,(%rax)
 4d6:	00 00                	add    %al,(%rax)
 4d8:	27                   	(bad)
 4d9:	00 00                	add    %al,(%rax)
 4db:	00 00                	add    %al,(%rax)
 4dd:	00 00                	add    %al,(%rax)
 4df:	00 01                	add    %al,(%rcx)
 4e1:	2d 16 03 17 05       	sub    $0x5170316,%eax
 4e6:	00 00                	add    %al,(%rax)
 4e8:	c5 01 00             	(bad)
 4eb:	00 c3                	add    %al,%bl
 4ed:	01 00                	add    %eax,(%rax)
 4ef:	00 03                	add    %al,(%rbx)
 4f1:	22 05 00 00 cd 01    	and    0x1cd0000(%rip),%al        # 1cd04f7 <terminal_row+0x1bc9497>
 4f7:	00 00                	add    %al,(%rax)
 4f9:	cb                   	lret
 4fa:	01 00                	add    %eax,(%rax)
 4fc:	00 00                	add    %al,(%rax)
 4fe:	00 04 80             	add    %al,(%rax,%rax,4)
 501:	02 00                	add    (%rax),%al
 503:	00 18                	add    %bl,(%rax)
 505:	60                   	(bad)
 506:	02 10                	add    (%rax),%dl
 508:	00 00                	add    %al,(%rax)
 50a:	00 00                	add    %al,(%rax)
 50c:	00 02                	add    %al,(%rdx)
 50e:	00 00                	add    %al,(%rax)
 510:	00 00                	add    %al,(%rax)
 512:	00 00                	add    %al,(%rax)
 514:	00 01                	add    %al,(%rcx)
 516:	9c                   	pushf
 517:	e2 04                	loop   51d <data_segment+0x50d>
 519:	00 00                	add    %al,(%rax)
 51b:	10 17                	adc    %dl,(%rdi)
 51d:	79 00                	jns    51f <data_segment+0x50f>
 51f:	22 10                	and    (%rax),%dl
 521:	35 00 00 00 10       	xor    $0x10000000,%eax
 526:	17                   	(bad)
 527:	78 00                	js     529 <data_segment+0x519>
 529:	23 14 35 00 00 00 10 	and    0x10000000(,%rsi,1),%edx
 530:	06                   	(bad)
 531:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
 532:	03 00                	add    (%rax),%eax
 534:	00 24 1a             	add    %ah,(%rdx,%rbx,1)
 537:	41 00 00             	add    %al,(%r8)
 53a:	00 00                	add    %al,(%rax)
 53c:	00 00                	add    %al,(%rax)
 53e:	00 18                	add    %bl,(%rax)
 540:	31 01                	xor    %eax,(%rcx)
 542:	00 00                	add    %al,(%rax)
 544:	1d 18 83 00 00       	sbb    $0x8318,%eax
 549:	00 08                	add    %cl,(%rax)
 54b:	05 00 00 09 c0       	add    $0xc0090000,%eax
 550:	00 00                	add    %al,(%rax)
 552:	00 1d 30 7c 00 00    	add    %bl,0x7c30(%rip)        # 8188 <data_segment+0x8178>
 558:	00 09                	add    %cl,(%rcx)
 55a:	bb 03 00 00 1d       	mov    $0x1d000003,%ebx
 55f:	43 70 00             	rex.XB jo 562 <data_segment+0x552>
 562:	00 00                	add    %al,(%rax)
 564:	00 18                	add    %bl,(%rax)
 566:	63 01                	movsxd (%rcx),%eax
 568:	00 00                	add    %al,(%rax)
 56a:	19 17                	sbb    %edx,(%rdi)
 56c:	70 00                	jo     56e <data_segment+0x55e>
 56e:	00 00                	add    %al,(%rax)
 570:	2e 05 00 00 09 0a    	cs add $0xa090000,%eax
 576:	01 00                	add    %eax,(%rax)
 578:	00 19                	add    %bl,(%rcx)
 57a:	36 9d                	ss popf
 57c:	00 00                	add    %al,(%rax)
 57e:	00 09                	add    %cl,(%rcx)
 580:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
 581:	01 00                	add    %eax,(%rax)
 583:	00 19                	add    %bl,(%rcx)
 585:	51                   	push   %rcx
 586:	9d                   	popf
 587:	00 00                	add    %al,(%rax)
 589:	00 00                	add    %al,(%rax)
 58b:	27                   	(bad)
 58c:	70 02                	jo     590 <data_segment+0x580>
 58e:	00 00                	add    %al,(%rax)
 590:	80 03 10             	addb   $0x10,(%rbx)
 593:	00 00                	add    %al,(%rax)
 595:	00 00                	add    %al,(%rax)
 597:	00 df                	add    %bl,%bh
 599:	00 00                	add    %al,(%rax)
 59b:	00 00                	add    %al,(%rax)
 59d:	00 00                	add    %al,(%rax)
 59f:	00 01                	add    %al,(%rcx)
 5a1:	9c                   	pushf
 5a2:	03 7d 02             	add    0x2(%rbp),%edi
 5a5:	00 00                	add    %al,(%rax)
 5a7:	d7                   	xlat   %ds:(%rbx)
 5a8:	01 00                	add    %eax,(%rax)
 5aa:	00 d3                	add    %dl,%bl
 5ac:	01 00                	add    %eax,(%rax)
 5ae:	00 19                	add    %bl,(%rcx)
 5b0:	87 02                	xchg   %eax,(%rdx)
 5b2:	00 00                	add    %al,(%rax)
 5b4:	1a 92 02 00 00 ed    	sbb    -0x12fffffe(%rdx),%dl
 5ba:	01 00                	add    %eax,(%rax)
 5bc:	00 e9                	add    %ch,%cl
 5be:	01 00                	add    %eax,(%rax)
 5c0:	00 28                	add    %ch,(%rax)
 5c2:	70 02                	jo     5c6 <data_segment+0x5b6>
 5c4:	00 00                	add    %al,(%rax)
 5c6:	24 04                	and    $0x4,%al
 5c8:	10 00                	adc    %al,(%rax)
 5ca:	00 00                	add    %al,(%rax)
 5cc:	00 00                	add    %al,(%rax)
 5ce:	32 00                	xor    (%rax),%al
 5d0:	00 00                	add    %al,(%rax)
 5d2:	00 00                	add    %al,(%rax)
 5d4:	00 00                	add    %al,(%rax)
 5d6:	01 4f 06             	add    %ecx,0x6(%rdi)
 5d9:	bd 05 00 00 29       	mov    $0x29000005,%ebp
 5de:	7d 02                	jge    5e2 <data_segment+0x5d2>
 5e0:	00 00                	add    %al,(%rax)
 5e2:	1a 87 02 00 00 07    	sbb    0x7000002(%rdi),%al
 5e8:	02 00                	add    (%rax),%al
 5ea:	00 ff                	add    %bh,%bh
 5ec:	01 00                	add    %eax,(%rax)
 5ee:	00 19                	add    %bl,(%rcx)
 5f0:	92                   	xchg   %eax,%edx
 5f1:	02 00                	add    (%rax),%al
 5f3:	00 13                	add    %dl,(%rbx)
 5f5:	38 04 10             	cmp    %al,(%rax,%rdx,1)
 5f8:	00 00                	add    %al,(%rax)
 5fa:	00 00                	add    %al,(%rax)
 5fc:	00 1a                	add    %bl,(%rdx)
 5fe:	03 00                	add    (%rax),%eax
 600:	00 af 05 00 00 07    	add    %ch,0x7000005(%rdi)
 606:	01 55 02             	add    %edx,0x2(%rbp)
 609:	73 7f                	jae    68a <data_segment+0x67a>
 60b:	00 14 4e             	add    %dl,(%rsi,%rcx,2)
 60e:	04 10                	add    $0x10,%al
 610:	00 00                	add    %al,(%rax)
 612:	00 00                	add    %al,(%rax)
 614:	00 9e 02 00 00 00    	add    %bl,0x2(%rsi)
 61a:	2a dd                	sub    %ch,%bl
 61c:	03 10                	add    (%rax),%edx
 61e:	00 00                	add    %al,(%rax)
 620:	00 00                	add    %al,(%rax)
 622:	00 95 03 00 00 07    	add    %dl,0x7000003(%rbp)
 628:	01 55 06             	add    %edx,0x6(%rbp)
 62b:	a3 01 55 08 ff 1a 00 	movabs %eax,0x1aff085501
 632:	00 00 
 634:	24 00                	and    $0x0,%al
 636:	00 00                	add    %al,(%rax)
 638:	05 00 01 08 b8       	add    $0xb8080100,%eax
 63d:	02 00                	add    (%rax),%al
 63f:	00 01                	add    %al,(%rcx)
 641:	a2 03 00 00 06 05 10 	movabs %al,0x100506000003
 648:	00 00 
 64a:	00 00                	add    %al,(%rax)
 64c:	00 06                	add    %al,(%rsi)
 64e:	cb                   	lret
 64f:	03 00                	add    (%rax),%eax
 651:	00 13                	add    %dl,(%rbx)
 653:	00 00                	add    %al,(%rax)
 655:	00 3e                	add    %bh,(%rsi)
 657:	00 00                	add    %al,(%rax)
 659:	00 01                	add    %al,(%rcx)
 65b:	80 b9 00 00 00 05 00 	cmpb   $0x0,0x5000000(%rcx)
 662:	01 08                	add    %ecx,(%rax)
 664:	cc                   	int3
 665:	02 00                	add    (%rax),%al
 667:	00 02                	add    %al,(%rdx)
 669:	b1 02                	mov    $0x2,%cl
 66b:	00 00                	add    %al,(%rax)
 66d:	1d e4 00 00 00       	sbb    $0xe4,%eax
 672:	00 00                	add    %al,(%rax)
 674:	00 00                	add    %al,(%rax)
 676:	10 05 10 00 00 00    	adc    %al,0x10(%rip)        # 68c <data_segment+0x67c>
 67c:	00 00                	add    %al,(%rax)
 67e:	51                   	push   %rcx
 67f:	00 00                	add    %al,(%rax)
 681:	00 00                	add    %al,(%rax)
 683:	00 00                	add    %al,(%rax)
 685:	00 f0                	add    %dh,%al
 687:	03 00                	add    (%rax),%eax
 689:	00 01                	add    %al,(%rcx)
 68b:	08 05 a8 02 00 00    	or     %al,0x2a8(%rip)        # 939 <data_segment+0x929>
 691:	01 08                	add    %ecx,(%rax)
 693:	07                   	(bad)
 694:	73 01                	jae    697 <data_segment+0x687>
 696:	00 00                	add    %al,(%rax)
 698:	03 04 05 69 6e 74 00 	add    0x746e69(,%rax,1),%eax
 69f:	01 08                	add    %ecx,(%rax)
 6a1:	05 a3 02 00 00       	add    $0x2a3,%eax
 6a6:	01 10                	add    %edx,(%rax)
 6a8:	04 75                	add    $0x75,%al
 6aa:	03 00                	add    (%rax),%eax
 6ac:	00 04 ec             	add    %al,(%rsp,%rbp,8)
 6af:	03 00                	add    (%rax),%eax
 6b1:	00 02                	add    %al,(%rdx)
 6b3:	0c 05                	or     $0x5,%al
 6b5:	3c 00                	cmp    $0x0,%al
 6b7:	00 00                	add    %al,(%rax)
 6b9:	68 00 00 00 05       	push   $0x5000000
 6be:	6e                   	outsb  %ds:(%rsi),(%dx)
 6bf:	00 00                	add    %al,(%rax)
 6c1:	00 06                	add    %al,(%rsi)
 6c3:	00 07                	add    %al,(%rdi)
 6c5:	08 7a 00             	or     %bh,0x0(%rdx)
 6c8:	00 00                	add    %al,(%rax)
 6ca:	08 68 00             	or     %ch,0x0(%rax)
 6cd:	00 00                	add    %al,(%rax)
 6cf:	01 01                	add    %eax,(%rcx)
 6d1:	06                   	(bad)
 6d2:	5e                   	pop    %rsi
 6d3:	01 00                	add    %eax,(%rax)
 6d5:	00 09                	add    %cl,(%rcx)
 6d7:	73 00                	jae    6d9 <data_segment+0x6c9>
 6d9:	00 00                	add    %al,(%rax)
 6db:	0a 80 02 00 00 03    	or     0x3000002(%rax),%al
 6e1:	06                   	(bad)
 6e2:	06                   	(bad)
 6e3:	0b e0                	or     %eax,%esp
 6e5:	03 00                	add    (%rax),%eax
 6e7:	00 01                	add    %al,(%rcx)
 6e9:	04 06                	add    $0x6,%al
 6eb:	10 05 10 00 00 00    	adc    %al,0x10(%rip)        # 701 <data_segment+0x6f1>
 6f1:	00 00                	add    %al,(%rax)
 6f3:	51                   	push   %rcx
 6f4:	00 00                	add    %al,(%rax)
 6f6:	00 00                	add    %al,(%rax)
 6f8:	00 00                	add    %al,(%rax)
 6fa:	00 01                	add    %al,(%rcx)
 6fc:	9c                   	pushf
 6fd:	0c 3d                	or     $0x3d,%al
 6ff:	05 10 00 00 00       	add    $0x10,%eax
 704:	00 00                	add    %al,(%rax)
 706:	7f 00                	jg     708 <data_segment+0x6f8>
 708:	00 00                	add    %al,(%rax)
 70a:	0d 61 05 10 00       	or     $0x100561,%eax
 70f:	00 00                	add    %al,(%rax)
 711:	00 00                	add    %al,(%rax)
 713:	51                   	push   %rcx
 714:	00 00                	add    %al,(%rax)
 716:	00 00                	add    %al,(%rax)
 718:	00 e4                	add    %ah,%ah
 71a:	03 00                	add    (%rax),%eax
 71c:	00 05 00 01 08 71    	add    %al,0x71080100(%rip)        # 71080822 <MAGIC+0x555a5820>
 722:	03 00                	add    (%rax),%eax
 724:	00 16                	add    %dl,(%rsi)
 726:	4c 04 00             	rex.WR add $0x0,%al
 729:	00 1d 1b 01 00 00    	add    %bl,0x11b(%rip)        # 84a <data_segment+0x83a>
 72f:	2a 01                	sub    (%rcx),%al
 731:	00 00                	add    %al,(%rax)
 733:	80 05 10 00 00 00 00 	addb   $0x0,0x10(%rip)        # 74a <data_segment+0x73a>
 73a:	00 99 02 00 00 00    	add    %bl,0x2(%rcx)
 740:	00 00                	add    %al,(%rax)
 742:	00 6f 04             	add    %ch,0x4(%rdi)
 745:	00 00                	add    %al,(%rax)
 747:	08 d4                	or     %dl,%ah
 749:	04 00                	add    $0x0,%al
 74b:	00 03                	add    %al,(%rbx)
 74d:	28 1b                	sub    %bl,(%rbx)
 74f:	3a 00                	cmp    (%rax),%al
 751:	00 00                	add    %al,(%rax)
 753:	17                   	(bad)
 754:	fa                   	cli
 755:	03 00                	add    (%rax),%eax
 757:	00 43 00             	add    %al,0x0(%rbx)
 75a:	00 00                	add    %al,(%rax)
 75c:	18 5a 00             	sbb    %bl,0x0(%rdx)
 75f:	00 00                	add    %al,(%rax)
 761:	53                   	push   %rbx
 762:	00 00                	add    %al,(%rax)
 764:	00 19                	add    %bl,(%rcx)
 766:	53                   	push   %rbx
 767:	00 00                	add    %al,(%rax)
 769:	00 00                	add    %al,(%rax)
 76b:	00 01                	add    %al,(%rcx)
 76d:	08 07                	or     %al,(%rdi)
 76f:	73 01                	jae    772 <data_segment+0x762>
 771:	00 00                	add    %al,(%rax)
 773:	1a b5 04 00 00 18    	sbb    0x18000004(%rbp),%dh
 779:	02 00                	add    (%rax),%al
 77b:	8f 00                	pop    (%rax)
 77d:	00 00                	add    %al,(%rax)
 77f:	04 ea                	add    $0xea,%al
 781:	04 00                	add    $0x0,%al
 783:	00 8f 00 00 00 00    	add    %cl,0x0(%rdi)
 789:	04 99                	add    $0x99,%al
 78b:	04 00                	add    $0x0,%al
 78d:	00 8f 00 00 00 04    	add    %cl,0x4000000(%rdi)
 793:	04 a3                	add    $0xa3,%al
 795:	04 00                	add    $0x0,%al
 797:	00 96 00 00 00 08    	add    %dl,0x8000000(%rsi)
 79d:	04 36                	add    $0x36,%al
 79f:	04 00                	add    $0x0,%al
 7a1:	00 96 00 00 00 10    	add    %dl,0x10000000(%rsi)
 7a7:	00 01                	add    %al,(%rcx)
 7a9:	04 07                	add    $0x7,%al
 7ab:	78 01                	js     7ae <data_segment+0x79e>
 7ad:	00 00                	add    %al,(%rax)
 7af:	1b 08                	sbb    (%rax),%ecx
 7b1:	08 db                	or     %bl,%bl
 7b3:	04 00                	add    $0x0,%al
 7b5:	00 03                	add    %al,(%rbx)
 7b7:	67 18 2e             	sbb    %ch,(%esi)
 7ba:	00 00                	add    %al,(%rax)
 7bc:	00 01                	add    %al,(%rcx)
 7be:	08 05 a8 02 00 00    	or     %al,0x2a8(%rip)        # a6c <data_segment+0xa5c>
 7c4:	08 97 00 00 00 04    	or     %dl,0x4000000(%rdi)
 7ca:	d6                   	(bad)
 7cb:	17                   	(bad)
 7cc:	53                   	push   %rbx
 7cd:	00 00                	add    %al,(%rax)
 7cf:	00 1c 04             	add    %bl,(%rsp,%rax,1)
 7d2:	05 69 6e 74 00       	add    $0x746e69,%eax
 7d7:	01 08                	add    %ecx,(%rax)
 7d9:	05 a3 02 00 00       	add    $0x2a3,%eax
 7de:	01 10                	add    %edx,(%rax)
 7e0:	04 75                	add    $0x75,%al
 7e2:	03 00                	add    (%rax),%eax
 7e4:	00 0c 8f             	add    %cl,(%rdi,%rcx,4)
 7e7:	00 00                	add    %al,(%rax)
 7e9:	00 05 0d 05 b7 00    	add    %al,0xb7050d(%rip)        # b70cfc <terminal_row+0xa69c9c>
 7ef:	00 00                	add    %al,(%rax)
 7f1:	e2 00                	loop   7f3 <data_segment+0x7e3>
 7f3:	00 00                	add    %al,(%rax)
 7f5:	0d b7 00 00 00       	or     $0xb7,%eax
 7fa:	00 0c 15 01 00 00 06 	add    %cl,0x6000001(,%rdx,1)
 801:	10 08                	adc    %cl,(%rax)
 803:	ab                   	stos   %eax,%es:(%rdi)
 804:	00 00                	add    %al,(%rax)
 806:	00 f8                	add    %bh,%al
 808:	00 00                	add    %al,(%rax)
 80a:	00 0d f8 00 00 00    	add    %cl,0xf8(%rip)        # 908 <data_segment+0x8f8>
 810:	00 0e                	add    %cl,(%rsi)
 812:	09 01                	or     %eax,(%rcx)
 814:	00 00                	add    %al,(%rax)
 816:	1d f8 00 00 00       	sbb    $0xf8,%eax
 81b:	01 01                	add    %eax,(%rcx)
 81d:	06                   	(bad)
 81e:	5e                   	pop    %rsi
 81f:	01 00                	add    %eax,(%rax)
 821:	00 0f                	add    %cl,(%rdi)
 823:	02 01                	add    (%rcx),%al
 825:	00 00                	add    %al,(%rax)
 827:	1e                   	(bad)
 828:	ec                   	in     (%dx),%al
 829:	03 00                	add    (%rax),%eax
 82b:	00 01                	add    %al,(%rcx)
 82d:	0f 05                	syscall
 82f:	b7 00                	mov    $0x0,%bh
 831:	00 00                	add    %al,(%rax)
 833:	80 05 10 00 00 00 00 	addb   $0x0,0x10(%rip)        # 84a <data_segment+0x83a>
 83a:	00 99 02 00 00 00    	add    %bl,0x2(%rcx)
 840:	00 00                	add    %al,(%rax)
 842:	00 01                	add    %al,(%rcx)
 844:	9c                   	pushf
 845:	91                   	xchg   %eax,%ecx
 846:	03 00                	add    (%rax),%eax
 848:	00 1f                	add    %bl,(%rdi)
 84a:	12 04 00             	adc    (%rax,%rax,1),%al
 84d:	00 01                	add    %al,(%rcx)
 84f:	0f 21 fd             	mov    %db7,%rbp
 852:	00 00                	add    %al,(%rax)
 854:	00 46 02             	add    %al,0x2(%rsi)
 857:	00 00                	add    %al,(%rax)
 859:	32 02                	xor    (%rdx),%al
 85b:	00 00                	add    %al,(%rax)
 85d:	20 21                	and    %ah,(%rcx)
 85f:	c9                   	leave
 860:	04 00                	add    $0x0,%al
 862:	00 01                	add    %al,(%rcx)
 864:	10 0a                	adc    %cl,(%rdx)
 866:	98                   	cwtl
 867:	00 00                	add    %al,(%rax)
 869:	00 03                	add    %al,(%rbx)
 86b:	91                   	xchg   %eax,%ecx
 86c:	f8                   	clc
 86d:	7e 05                	jle    874 <data_segment+0x864>
 86f:	44 04 00             	rex.R add $0x0,%al
 872:	00 13                	add    %dl,(%rbx)
 874:	06                   	(bad)
 875:	b7 00                	mov    $0x0,%bh
 877:	00 00                	add    %al,(%rax)
 879:	9e                   	sahf
 87a:	02 00                	add    (%rax),%al
 87c:	00 96 02 00 00 10    	add    %dl,0x10000002(%rsi)
 882:	61                   	(bad)
 883:	00 00                	add    %al,(%rax)
 885:	00 05 f3 03 00 00    	add    %al,0x3f3(%rip)        # c7e <data_segment+0xc6e>
 88b:	16                   	(bad)
 88c:	0a ab 00 00 00 da    	or     -0x26000000(%rbx),%ch
 892:	02 00                	add    (%rax),%al
 894:	00 ba 02 00 00 05    	add    %bh,0x5000002(%rdx)
 89a:	26 04 00             	es add $0x0,%al
 89d:	00 29                	add    %ch,(%rcx)
 89f:	0f f8 00             	psubb  (%rax),%mm0
 8a2:	00 00                	add    %al,(%rax)
 8a4:	c3                   	ret
 8a5:	03 00                	add    (%rax),%eax
 8a7:	00 bd 03 00 00 09    	add    %bh,0x9000003(%rbp)
 8ad:	93                   	xchg   %eax,%ebx
 8ae:	00 00                	add    %al,(%rax)
 8b0:	00 fe                	add    %bh,%dh
 8b2:	01 00                	add    %eax,(%rax)
 8b4:	00 05 e3 04 00 00    	add    %al,0x4e3(%rip)        # d9d <data_segment+0xd8d>
 8ba:	1b 0b                	sbb    (%rbx),%ecx
 8bc:	ab                   	stos   %eax,%es:(%rdi)
 8bd:	00 00                	add    %al,(%rax)
 8bf:	00 e6                	add    %ah,%dh
 8c1:	03 00                	add    (%rax),%eax
 8c3:	00 e0                	add    %ah,%al
 8c5:	03 00                	add    (%rax),%eax
 8c7:	00 11                	add    %dl,(%rcx)
 8c9:	91                   	xchg   %eax,%ecx
 8ca:	03 00                	add    (%rax),%eax
 8cc:	00 a0 06 10 00 00    	add    %ah,0x1006(%rax)
 8d2:	00 00                	add    %al,(%rax)
 8d4:	00 20                	add    %ah,(%rax)
 8d6:	00 00                	add    %al,(%rax)
 8d8:	00 00                	add    %al,(%rax)
 8da:	00 00                	add    %al,(%rax)
 8dc:	00 22                	add    %ah,(%rdx)
 8de:	02 a2 03 00 00 02    	add    0x2000003(%rdx),%ah
 8e4:	ac                   	lods   %ds:(%rsi),%al
 8e5:	03 00                	add    (%rax),%eax
 8e7:	00 03                	add    %al,(%rbx)
 8e9:	b6 03                	mov    $0x3,%dh
 8eb:	00 00                	add    %al,(%rax)
 8ed:	06                   	(bad)
 8ee:	c2 03 00             	ret    $0x3
 8f1:	00 a0 06 10 00 00    	add    %ah,0x1006(%rax)
 8f7:	00 00                	add    %al,(%rax)
 8f9:	00 20                	add    %ah,(%rax)
 8fb:	00 00                	add    %al,(%rax)
 8fd:	00 00                	add    %al,(%rax)
 8ff:	00 00                	add    %al,(%rax)
 901:	00 03                	add    %al,(%rbx)
 903:	c3                   	ret
 904:	03 00                	add    (%rax),%eax
 906:	00 07                	add    %al,(%rdi)
 908:	b2 06                	mov    $0x6,%dl
 90a:	10 00                	adc    %al,(%rax)
 90c:	00 00                	add    %al,(%rax)
 90e:	00 00                	add    %al,(%rax)
 910:	cc                   	int3
 911:	00 00                	add    %al,(%rax)
 913:	00 00                	add    %al,(%rax)
 915:	00 00                	add    %al,(%rax)
 917:	09 a8 00 00 00 6f    	or     %ebp,0x6f000000(%rax)
 91d:	02 00                	add    (%rax),%al
 91f:	00 0a                	add    %cl,(%rdx)
 921:	63 00                	movsxd (%rax),%eax
 923:	2d 09 02 01 00       	sub    $0x10209,%eax
 928:	00 00                	add    %al,(%rax)
 92a:	04 00                	add    $0x0,%al
 92c:	00 fe                	add    %bh,%dh
 92e:	03 00                	add    (%rax),%eax
 930:	00 11                	add    %dl,(%rcx)
 932:	91                   	xchg   %eax,%ecx
 933:	03 00                	add    (%rax),%eax
 935:	00 16                	add    %dl,(%rsi)
 937:	07                   	(bad)
 938:	10 00                	adc    %al,(%rax)
 93a:	00 00                	add    %al,(%rax)
 93c:	00 00                	add    %al,(%rax)
 93e:	12 00                	adc    (%rax),%al
 940:	00 00                	add    %al,(%rax)
 942:	00 00                	add    %al,(%rax)
 944:	00 00                	add    %al,(%rax)
 946:	32 02                	xor    (%rdx),%al
 948:	a2 03 00 00 02 ac 03 	movabs %al,0x3ac02000003
 94f:	00 00 
 951:	03 b6 03 00 00 06    	add    0x6000003(%rsi),%esi
 957:	c2 03 00             	ret    $0x3
 95a:	00 16                	add    %dl,(%rsi)
 95c:	07                   	(bad)
 95d:	10 00                	adc    %al,(%rax)
 95f:	00 00                	add    %al,(%rax)
 961:	00 00                	add    %al,(%rax)
 963:	12 00                	adc    (%rax),%al
 965:	00 00                	add    %al,(%rax)
 967:	00 00                	add    %al,(%rax)
 969:	00 00                	add    %al,(%rax)
 96b:	0b c3                	or     %ebx,%eax
 96d:	03 00                	add    (%rax),%eax
 96f:	00 0d 04 00 00 09    	add    %cl,0x9000004(%rip)        # 9000979 <terminal_row+0x8ef9919>
 975:	04 00                	add    $0x0,%al
 977:	00 07                	add    %al,(%rdi)
 979:	1f                   	(bad)
 97a:	07                   	(bad)
 97b:	10 00                	adc    %al,(%rax)
 97d:	00 00                	add    %al,(%rax)
 97f:	00 00                	add    %al,(%rax)
 981:	cc                   	int3
 982:	00 00                	add    %al,(%rax)
 984:	00 00                	add    %al,(%rax)
 986:	00 00                	add    %al,(%rax)
 988:	09 b8 00 00 00 08    	or     %edi,0x8000000(%rax)
 98e:	03 00                	add    (%rax),%eax
 990:	00 22                	add    %ah,(%rdx)
 992:	73 74                	jae    a08 <data_segment+0x9f8>
 994:	72 00                	jb     996 <data_segment+0x986>
 996:	01 37                	add    %esi,(%rdi)
 998:	10 f8                	adc    %bh,%al
 99a:	00 00                	add    %al,(%rax)
 99c:	00 01                	add    %al,(%rcx)
 99e:	5d                   	pop    %rbp
 99f:	0a 6c 65 6e          	or     0x6e(%rbp,%riz,2),%ch
 9a3:	00 38                	add    %bh,(%rax)
 9a5:	0b ab 00 00 00 22    	or     0x22000000(%rbx),%ebp
 9ab:	04 00                	add    $0x0,%al
 9ad:	00 1e                	add    %bl,(%rsi)
 9af:	04 00                	add    $0x0,%al
 9b1:	00 12                	add    %dl,(%rdx)
 9b3:	91                   	xchg   %eax,%ecx
 9b4:	03 00                	add    (%rax),%eax
 9b6:	00 7a 07             	add    %bh,0x7(%rdx)
 9b9:	10 00                	adc    %al,(%rax)
 9bb:	00 00                	add    %al,(%rax)
 9bd:	00 00                	add    %al,(%rax)
 9bf:	36 00 00             	ss add %al,(%rax)
 9c2:	00 00                	add    %al,(%rax)
 9c4:	00 00                	add    %al,(%rax)
 9c6:	00 3d f3 02 00 00    	add    %bh,0x2f3(%rip)        # cbf <data_segment+0xcaf>
 9cc:	02 a2 03 00 00 02    	add    0x2000003(%rdx),%ah
 9d2:	ac                   	lods   %ds:(%rsi),%al
 9d3:	03 00                	add    (%rax),%eax
 9d5:	00 03                	add    %al,(%rbx)
 9d7:	b6 03                	mov    $0x3,%dh
 9d9:	00 00                	add    %al,(%rax)
 9db:	06                   	(bad)
 9dc:	c2 03 00             	ret    $0x3
 9df:	00 7a 07             	add    %bh,0x7(%rdx)
 9e2:	10 00                	adc    %al,(%rax)
 9e4:	00 00                	add    %al,(%rax)
 9e6:	00 00                	add    %al,(%rax)
 9e8:	36 00 00             	ss add %al,(%rax)
 9eb:	00 00                	add    %al,(%rax)
 9ed:	00 00                	add    %al,(%rax)
 9ef:	00 0b                	add    %cl,(%rbx)
 9f1:	c3                   	ret
 9f2:	03 00                	add    (%rax),%eax
 9f4:	00 33                	add    %dh,(%rbx)
 9f6:	04 00                	add    $0x0,%al
 9f8:	00 31                	add    %dh,(%rcx)
 9fa:	04 00                	add    $0x0,%al
 9fc:	00 07                	add    %al,(%rdi)
 9fe:	a1 07 10 00 00 00 00 	movabs 0xcc00000000001007,%eax
 a05:	00 cc 
 a07:	00 00                	add    %al,(%rax)
 a09:	00 00                	add    %al,(%rax)
 a0b:	00 13                	add    %dl,(%rbx)
 a0d:	6e                   	outsb  %ds:(%rsi),(%dx)
 a0e:	07                   	(bad)
 a0f:	10 00                	adc    %al,(%rax)
 a11:	00 00                	add    %al,(%rax)
 a13:	00 00                	add    %al,(%rax)
 a15:	e2 00                	loop   a17 <data_segment+0xa07>
 a17:	00 00                	add    %al,(%rax)
 a19:	14 01                	adc    $0x1,%al
 a1b:	55                   	push   %rbp
 a1c:	02 7d 00             	add    0x0(%rbp),%bh
 a1f:	00 00                	add    %al,(%rax)
 a21:	10 84 00 00 00 0a 6c 	adc    %al,0x6c0a0000(%rax,%rax,1)
 a28:	65 6e                	outsb  %gs:(%rsi),(%dx)
 a2a:	00 42 0b             	add    %al,0xb(%rdx)
 a2d:	ab                   	stos   %eax,%es:(%rdi)
 a2e:	00 00                	add    %al,(%rax)
 a30:	00 44 04 00          	add    %al,0x0(%rsp,%rax,1)
 a34:	00 3c 04             	add    %bh,(%rsp,%rax,1)
 a37:	00 00                	add    %al,(%rax)
 a39:	12 91 03 00 00 08    	adc    0x8000003(%rcx),%dl
 a3f:	06                   	(bad)
 a40:	10 00                	adc    %al,(%rax)
 a42:	00 00                	add    %al,(%rax)
 a44:	00 00                	add    %al,(%rax)
 a46:	33 00                	xor    (%rax),%eax
 a48:	00 00                	add    %al,(%rax)
 a4a:	00 00                	add    %al,(%rax)
 a4c:	00 00                	add    %al,(%rax)
 a4e:	47 7a 03             	rex.RXB jp a54 <data_segment+0xa44>
 a51:	00 00                	add    %al,(%rax)
 a53:	02 a2 03 00 00 02    	add    0x2000003(%rdx),%ah
 a59:	ac                   	lods   %ds:(%rsi),%al
 a5a:	03 00                	add    (%rax),%eax
 a5c:	00 03                	add    %al,(%rbx)
 a5e:	b6 03                	mov    $0x3,%dh
 a60:	00 00                	add    %al,(%rax)
 a62:	06                   	(bad)
 a63:	c2 03 00             	ret    $0x3
 a66:	00 08                	add    %cl,(%rax)
 a68:	06                   	(bad)
 a69:	10 00                	adc    %al,(%rax)
 a6b:	00 00                	add    %al,(%rax)
 a6d:	00 00                	add    %al,(%rax)
 a6f:	33 00                	xor    (%rax),%eax
 a71:	00 00                	add    %al,(%rax)
 a73:	00 00                	add    %al,(%rax)
 a75:	00 00                	add    %al,(%rax)
 a77:	0b c3                	or     %ebx,%eax
 a79:	03 00                	add    (%rax),%eax
 a7b:	00 65 04             	add    %ah,0x4(%rbp)
 a7e:	00 00                	add    %al,(%rax)
 a80:	61                   	(bad)
 a81:	04 00                	add    $0x0,%al
 a83:	00 07                	add    %al,(%rdi)
 a85:	36 06                	ss (bad)
 a87:	10 00                	adc    %al,(%rax)
 a89:	00 00                	add    %al,(%rax)
 a8b:	00 00                	add    %al,(%rax)
 a8d:	cc                   	int3
 a8e:	00 00                	add    %al,(%rax)
 a90:	00 00                	add    %al,(%rax)
 a92:	00 13                	add    %dl,(%rbx)
 a94:	00 06                	add    %al,(%rsi)
 a96:	10 00                	adc    %al,(%rax)
 a98:	00 00                	add    %al,(%rax)
 a9a:	00 00                	add    %al,(%rax)
 a9c:	e2 00                	loop   a9e <data_segment+0xa8e>
 a9e:	00 00                	add    %al,(%rax)
 aa0:	14 01                	adc    $0x1,%al
 aa2:	55                   	push   %rbp
 aa3:	02 7f 00             	add    0x0(%rdi),%bh
 aa6:	00 00                	add    %al,(%rax)
 aa8:	00 00                	add    %al,(%rax)
 aaa:	23 20                	and    (%rax),%esp
 aac:	04 00                	add    $0x0,%al
 aae:	00 01                	add    %al,(%rcx)
 ab0:	07                   	(bad)
 ab1:	0d cf 03 00 00       	or     $0x3cf,%eax
 ab6:	01 cf                	add    %ecx,%edi
 ab8:	03 00                	add    (%rax),%eax
 aba:	00 15 f5 00 00 00    	add    %dl,0xf5(%rip)        # bb5 <data_segment+0xba5>
 ac0:	1f                   	(bad)
 ac1:	f8                   	clc
 ac2:	00 00                	add    %al,(%rax)
 ac4:	00 15 19 04 00 00    	add    %dl,0x419(%rip)        # ee3 <data_segment+0xed3>
 aca:	2c ab                	sub    $0xab,%al
 acc:	00 00                	add    %al,(%rax)
 ace:	00 24 0c             	add    %ah,(%rsp,%rcx,1)
 ad1:	04 00                	add    $0x0,%al
 ad3:	00 01                	add    %al,(%rcx)
 ad5:	08 17                	or     %dl,(%rdi)
 ad7:	d6                   	(bad)
 ad8:	03 00                	add    (%rax),%eax
 ada:	00 25 26 69 00 01    	add    %ah,0x1006926(%rip)        # 1007406 <terminal_row+0xf003a6>
 ae0:	09 0e                	or     %ecx,(%rsi)
 ae2:	ab                   	stos   %eax,%es:(%rdi)
 ae3:	00 00                	add    %al,(%rax)
 ae5:	00 00                	add    %al,(%rax)
 ae7:	00 01                	add    %al,(%rcx)
 ae9:	01 02                	add    %eax,(%rdx)
 aeb:	c3                   	ret
 aec:	04 00                	add    $0x0,%al
 aee:	00 0e                	add    %cl,(%rsi)
 af0:	e2 03                	loop   af5 <data_segment+0xae5>
 af2:	00 00                	add    %al,(%rax)
 af4:	01 01                	add    %eax,(%rcx)
 af6:	08 55 01             	or     %dl,0x1(%rbp)
 af9:	00 00                	add    %al,(%rax)
 afb:	0f db 03             	pand   (%rbx),%mm0
 afe:	00 00                	add    %al,(%rax)
 b00:	00 db                	add    %bl,%bl
 b02:	00 00                	add    %al,(%rax)
 b04:	00 05 00 01 08 65    	add    %al,0x65080100(%rip)        # 65080c0a <MAGIC+0x495a5c08>
 b0a:	05 00 00 04 4c       	add    $0x4c040000,%eax
 b0f:	04 00                	add    $0x0,%al
 b11:	00 1d 6d 01 00 00    	add    %bl,0x16d(%rip)        # c84 <data_segment+0xc74>
 b17:	2a 01                	sub    (%rcx),%al
 b19:	00 00                	add    %al,(%rax)
 b1b:	20 08                	and    %cl,(%rax)
 b1d:	10 00                	adc    %al,(%rax)
 b1f:	00 00                	add    %al,(%rax)
 b21:	00 00                	add    %al,(%rax)
 b23:	25 00 00 00 00       	and    $0x0,%eax
 b28:	00 00                	add    %al,(%rax)
 b2a:	00 3d 07 00 00 01    	add    %bh,0x1000007(%rip)        # 1000b37 <terminal_row+0xef9ad7>
 b30:	08 05 a8 02 00 00    	or     %al,0x2a8(%rip)        # dde <data_segment+0xdce>
 b36:	05 97 00 00 00       	add    $0x97,%eax
 b3b:	02 d6                	add    %dh,%dl
 b3d:	17                   	(bad)
 b3e:	41 00 00             	add    %al,(%r8)
 b41:	00 01                	add    %al,(%rcx)
 b43:	08 07                	or     %al,(%rdi)
 b45:	73 01                	jae    b48 <data_segment+0xb38>
 b47:	00 00                	add    %al,(%rax)
 b49:	06                   	(bad)
 b4a:	04 05                	add    $0x5,%al
 b4c:	69 6e 74 00 01 08 05 	imul   $0x5080100,0x74(%rsi),%ebp
 b53:	a3 02 00 00 01 10 04 	movabs %eax,0x375041001000002
 b5a:	75 03 
 b5c:	00 00                	add    %al,(%rax)
 b5e:	07                   	(bad)
 b5f:	d5                   	(bad)
 b60:	01 00                	add    %eax,(%rax)
 b62:	00 03                	add    %al,(%rbx)
 b64:	08 06                	or     %al,(%rsi)
 b66:	74 00                	je     b68 <data_segment+0xb58>
 b68:	00 00                	add    %al,(%rax)
 b6a:	02 74 00 00          	add    0x0(%rax,%rax,1),%dh
 b6e:	00 02                	add    %al,(%rdx)
 b70:	35 00 00 00 00       	xor    $0x0,%eax
 b75:	08 08                	or     %cl,(%rax)
 b77:	81 00 00 00 01 01    	addl   $0x1010000,(%rax)
 b7d:	06                   	(bad)
 b7e:	5e                   	pop    %rsi
 b7f:	01 00                	add    %eax,(%rax)
 b81:	00 09                	add    %cl,(%rcx)
 b83:	7a 00                	jp     b85 <data_segment+0xb75>
 b85:	00 00                	add    %al,(%rax)
 b87:	0a 8f 00 00 00 01    	or     0x1000000(%rdi),%cl
 b8d:	07                   	(bad)
 b8e:	05 48 00 00 00       	add    $0x48,%eax
 b93:	20 08                	and    %cl,(%rax)
 b95:	10 00                	adc    %al,(%rax)
 b97:	00 00                	add    %al,(%rax)
 b99:	00 00                	add    %al,(%rax)
 b9b:	25 00 00 00 00       	and    $0x0,%eax
 ba0:	00 00                	add    %al,(%rax)
 ba2:	00 01                	add    %al,(%rcx)
 ba4:	9c                   	pushf
 ba5:	0b 69 63             	or     0x63(%rcx),%ebp
 ba8:	00 01                	add    %al,(%rcx)
 baa:	07                   	(bad)
 bab:	11 48 00             	adc    %ecx,0x0(%rax)
 bae:	00 00                	add    %al,(%rax)
 bb0:	88 04 00             	mov    %al,(%rax,%rax,1)
 bb3:	00 82 04 00 00 0c    	add    %al,0xc000004(%rdx)
 bb9:	63 00                	movsxd (%rax),%eax
 bbb:	01 09                	add    %ecx,(%rcx)
 bbd:	07                   	(bad)
 bbe:	7a 00                	jp     bc0 <data_segment+0xbb0>
 bc0:	00 00                	add    %al,(%rax)
 bc2:	02 91 5f 0d 3d 08    	add    0x83d0d5f(%rcx),%dl
 bc8:	10 00                	adc    %al,(%rax)
 bca:	00 00                	add    %al,(%rax)
 bcc:	00 00                	add    %al,(%rax)
 bce:	5d                   	pop    %rbp
 bcf:	00 00                	add    %al,(%rax)
 bd1:	00 03                	add    %al,(%rbx)
 bd3:	01 55 02             	add    %edx,0x2(%rbp)
 bd6:	91                   	xchg   %eax,%ecx
 bd7:	5f                   	pop    %rdi
 bd8:	03 01                	add    (%rcx),%eax
 bda:	54                   	push   %rsp
 bdb:	01 31                	add    %esi,(%rcx)
 bdd:	00 00                	add    %al,(%rax)
 bdf:	00 b1 00 00 00 05    	add    %dh,0x5000000(%rcx)
 be5:	00 01                	add    %al,(%rcx)
 be7:	08 1c 06             	or     %bl,(%rsi,%rax,1)
 bea:	00 00                	add    %al,(%rax)
 bec:	02 4c 04 00          	add    0x0(%rsp,%rax,1),%cl
 bf0:	00 1d bc 01 00 00    	add    %bl,0x1bc(%rip)        # db2 <data_segment+0xda2>
 bf6:	2a 01                	sub    (%rcx),%al
 bf8:	00 00                	add    %al,(%rax)
 bfa:	50                   	push   %rax
 bfb:	08 10                	or     %dl,(%rax)
 bfd:	00 00                	add    %al,(%rax)
 bff:	00 00                	add    %al,(%rax)
 c01:	00 21                	add    %ah,(%rcx)
 c03:	00 00                	add    %al,(%rax)
 c05:	00 00                	add    %al,(%rax)
 c07:	00 00                	add    %al,(%rax)
 c09:	00 b9 07 00 00 01    	add    %bh,0x1000007(%rcx)
 c0f:	08 05 a8 02 00 00    	or     %al,0x2a8(%rip)        # ebd <data_segment+0xead>
 c15:	03 97 00 00 00 02    	add    0x2000000(%rdi),%edx
 c1b:	d6                   	(bad)
 c1c:	17                   	(bad)
 c1d:	41 00 00             	add    %al,(%r8)
 c20:	00 01                	add    %al,(%rcx)
 c22:	08 07                	or     %al,(%rdi)
 c24:	73 01                	jae    c27 <data_segment+0xc17>
 c26:	00 00                	add    %al,(%rax)
 c28:	04 04                	add    $0x4,%al
 c2a:	05 69 6e 74 00       	add    $0x746e69,%eax
 c2f:	01 08                	add    %ecx,(%rax)
 c31:	05 a3 02 00 00       	add    $0x2a3,%eax
 c36:	01 10                	add    %edx,(%rax)
 c38:	04 75                	add    $0x75,%al
 c3a:	03 00                	add    (%rax),%eax
 c3c:	00 05 15 01 00 00    	add    %al,0x115(%rip)        # d57 <data_segment+0xd47>
 c42:	01 03                	add    %eax,(%rbx)
 c44:	08 35 00 00 00 50    	or     %dh,0x50000000(%rip)        # 50000c4a <MAGIC+0x34525c48>
 c4a:	08 10                	or     %dl,(%rax)
 c4c:	00 00                	add    %al,(%rax)
 c4e:	00 00                	add    %al,(%rax)
 c50:	00 21                	add    %ah,(%rcx)
 c52:	00 00                	add    %al,(%rax)
 c54:	00 00                	add    %al,(%rax)
 c56:	00 00                	add    %al,(%rax)
 c58:	00 01                	add    %al,(%rcx)
 c5a:	9c                   	pushf
 c5b:	a2 00 00 00 06 73 74 	movabs %al,0x72747306000000
 c62:	72 00 
 c64:	01 03                	add    %eax,(%rbx)
 c66:	1b a2 00 00 00 01    	sbb    0x1000000(%rdx),%esp
 c6c:	55                   	push   %rbp
 c6d:	07                   	(bad)
 c6e:	6c                   	insb   (%dx),%es:(%rdi)
 c6f:	65 6e                	outsb  %gs:(%rsi),(%dx)
 c71:	00 01                	add    %al,(%rcx)
 c73:	04 09                	add    $0x9,%al
 c75:	35 00 00 00 aa       	xor    $0xaa000000,%eax
 c7a:	04 00                	add    $0x0,%al
 c7c:	00 a4 04 00 00 00 08 	add    %ah,0x8000000(%rsp,%rax,1)
 c83:	08 af 00 00 00 01    	or     %ch,0x1000000(%rdi)
 c89:	01 06                	add    %eax,(%rsi)
 c8b:	5e                   	pop    %rsi
 c8c:	01 00                	add    %eax,(%rax)
 c8e:	00 09                	add    %cl,(%rcx)
 c90:	a8 00                	test   $0x0,%al
 c92:	00 00                	add    %al,(%rax)
 c94:	00 1f                	add    %bl,(%rdi)
 c96:	00 00                	add    %al,(%rax)
 c98:	00 05 00 01 08 a7    	add    %al,-0x58f7ff00(%rip)        # ffffffffa7080d9e <MAGIC+0xffffffff8b5a5d9c>
 c9e:	06                   	(bad)
 c9f:	00 00                	add    %al,(%rax)
 ca1:	01 2d 08 00 00 d4    	add    %ebp,-0x2bfffff8(%rip)        # ffffffffd4000caf <MAGIC+0xffffffffb8525cad>
 ca7:	00 00                	add    %al,(%rax)
 ca9:	00 f4                	add    %dh,%ah
 cab:	04 00                	add    $0x0,%al
 cad:	00 13                	add    %dl,(%rbx)
 caf:	00 00                	add    %al,(%rax)
 cb1:	00 3e                	add    %bh,(%rsi)
 cb3:	00 00                	add    %al,(%rax)
 cb5:	00 01                	add    %al,(%rcx)
 cb7:	80                   	.byte 0x80

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
   0:	01 11                	add    %edx,(%rcx)
   2:	00 10                	add    %dl,(%rax)
   4:	17                   	(bad)
   5:	55                   	push   %rbp
   6:	17                   	(bad)
   7:	03 0e                	add    (%rsi),%ecx
   9:	1b 0e                	sbb    (%rsi),%ecx
   b:	25 0e 13 05 00       	and    $0x5130e,%eax
  10:	00 00                	add    %al,(%rax)
  12:	01 11                	add    %edx,(%rcx)
  14:	01 10                	add    %edx,(%rax)
  16:	17                   	(bad)
  17:	11 01                	adc    %eax,(%rcx)
  19:	12 0f                	adc    (%rdi),%cl
  1b:	03 0e                	add    (%rsi),%ecx
  1d:	1b 0e                	sbb    (%rsi),%ecx
  1f:	25 0e 13 05 00       	and    $0x5130e,%eax
  24:	00 02                	add    %al,(%rdx)
  26:	2e 00 03             	cs add %al,(%rbx)
  29:	0e                   	(bad)
  2a:	3f                   	(bad)
  2b:	19 49 15             	sbb    %ecx,0x15(%rcx)
  2e:	11 01                	adc    %eax,(%rcx)
  30:	12 0f                	adc    (%rdi),%cl
  32:	00 00                	add    %al,(%rax)
  34:	03 3b                	add    (%rbx),%edi
  36:	00 00                	add    %al,(%rax)
  38:	00 00                	add    %al,(%rax)
  3a:	01 28                	add    %ebp,(%rax)
  3c:	00 03                	add    %al,(%rbx)
  3e:	0e                   	(bad)
  3f:	1c 0b                	sbb    $0xb,%al
  41:	00 00                	add    %al,(%rax)
  43:	02 24 00             	add    (%rax,%rax,1),%ah
  46:	0b 0b                	or     (%rbx),%ecx
  48:	3e 0b 03             	ds or  (%rbx),%eax
  4b:	0e                   	(bad)
  4c:	00 00                	add    %al,(%rax)
  4e:	03 05 00 31 13 02    	add    0x2133100(%rip),%eax        # 2133154 <terminal_row+0x202c0f4>
  54:	17                   	(bad)
  55:	b7 42                	mov    $0x42,%bh
  57:	17                   	(bad)
  58:	00 00                	add    %al,(%rax)
  5a:	04 2e                	add    $0x2e,%al
  5c:	01 3f                	add    %edi,(%rdi)
  5e:	19 03                	sbb    %eax,(%rbx)
  60:	0e                   	(bad)
  61:	3a 21                	cmp    (%rcx),%ah
  63:	01 3b                	add    %edi,(%rbx)
  65:	0b 39                	or     (%rcx),%edi
  67:	21 06                	and    %eax,(%rsi)
  69:	27                   	(bad)
  6a:	19 11                	sbb    %edx,(%rcx)
  6c:	01 12                	add    %edx,(%rdx)
  6e:	07                   	(bad)
  6f:	40 18 7a 19          	sbb    %dil,0x19(%rdx)
  73:	01 13                	add    %edx,(%rbx)
  75:	00 00                	add    %al,(%rax)
  77:	05 05 00 03 0e       	add    $0xe030005,%eax
  7c:	3a 21                	cmp    (%rcx),%ah
  7e:	01 3b                	add    %edi,(%rbx)
  80:	0b 39                	or     (%rcx),%edi
  82:	0b 49 13             	or     0x13(%rcx),%ecx
  85:	02 17                	add    (%rdi),%dl
  87:	b7 42                	mov    $0x42,%bh
  89:	17                   	(bad)
  8a:	00 00                	add    %al,(%rax)
  8c:	06                   	(bad)
  8d:	34 00                	xor    $0x0,%al
  8f:	03 0e                	add    (%rsi),%ecx
  91:	3a 21                	cmp    (%rcx),%ah
  93:	01 3b                	add    %edi,(%rbx)
  95:	0b 39                	or     (%rcx),%edi
  97:	0b 49 13             	or     0x13(%rcx),%ecx
  9a:	00 00                	add    %al,(%rax)
  9c:	07                   	(bad)
  9d:	49 00 02             	rex.WB add %al,(%r10)
  a0:	18 7e 18             	sbb    %bh,0x18(%rsi)
  a3:	00 00                	add    %al,(%rax)
  a5:	08 34 00             	or     %dh,(%rax,%rax,1)
  a8:	03 08                	add    (%rax),%ecx
  aa:	3a 21                	cmp    (%rcx),%ah
  ac:	01 3b                	add    %edi,(%rbx)
  ae:	0b 39                	or     (%rcx),%edi
  b0:	0b 49 13             	or     0x13(%rcx),%ecx
  b3:	02 17                	add    (%rdi),%dl
  b5:	b7 42                	mov    $0x42,%bh
  b7:	17                   	(bad)
  b8:	00 00                	add    %al,(%rax)
  ba:	09 05 00 03 0e 3a    	or     %eax,0x3a0e0300(%rip)        # 3a0e03c0 <MAGIC+0x1e6053be>
  c0:	21 02                	and    %eax,(%rdx)
  c2:	3b 0b                	cmp    (%rbx),%ecx
  c4:	39 0b                	cmp    %ecx,(%rbx)
  c6:	49 13 00             	adc    (%r8),%rax
  c9:	00 0a                	add    %cl,(%rdx)
  cb:	16                   	(bad)
  cc:	00 03                	add    %al,(%rbx)
  ce:	0e                   	(bad)
  cf:	3a 0b                	cmp    (%rbx),%cl
  d1:	3b 0b                	cmp    (%rbx),%ecx
  d3:	39 0b                	cmp    %ecx,(%rbx)
  d5:	49 13 00             	adc    (%r8),%rax
  d8:	00 0b                	add    %cl,(%rbx)
  da:	26 00 49 13          	es add %cl,0x13(%rcx)
  de:	00 00                	add    %al,(%rax)
  e0:	0c 34                	or     $0x34,%al
  e2:	00 03                	add    %al,(%rbx)
  e4:	0e                   	(bad)
  e5:	3a 21                	cmp    (%rcx),%ah
  e7:	01 3b                	add    %edi,(%rbx)
  e9:	0b 39                	or     (%rcx),%edi
  eb:	0b 49 13             	or     0x13(%rcx),%ecx
  ee:	1c 21                	sbb    $0x21,%al
  f0:	80 80 2e 00 00 0d 34 	addb   $0x34,0xd00002e(%rax)
  f7:	00 03                	add    %al,(%rbx)
  f9:	0e                   	(bad)
  fa:	3a 21                	cmp    (%rcx),%ah
  fc:	01 3b                	add    %edi,(%rbx)
  fe:	0b 39                	or     (%rcx),%edi
 100:	0b 49 13             	or     0x13(%rcx),%ecx
 103:	02 18                	add    (%rax),%bl
 105:	00 00                	add    %al,(%rax)
 107:	0e                   	(bad)
 108:	0b 01                	or     (%rcx),%eax
 10a:	11 01                	adc    %eax,(%rcx)
 10c:	12 07                	adc    (%rdi),%al
 10e:	00 00                	add    %al,(%rax)
 110:	0f 05                	syscall
 112:	00 03                	add    %al,(%rbx)
 114:	0e                   	(bad)
 115:	3a 21                	cmp    (%rcx),%ah
 117:	01 3b                	add    %edi,(%rbx)
 119:	0b 39                	or     (%rcx),%edi
 11b:	0b 49 13             	or     0x13(%rcx),%ecx
 11e:	02 18                	add    (%rax),%bl
 120:	00 00                	add    %al,(%rax)
 122:	10 0b                	adc    %cl,(%rbx)
 124:	01 00                	add    %eax,(%rax)
 126:	00 11                	add    %dl,(%rcx)
 128:	34 00                	xor    $0x0,%al
 12a:	03 0e                	add    (%rsi),%ecx
 12c:	3a 21                	cmp    (%rcx),%ah
 12e:	01 3b                	add    %edi,(%rbx)
 130:	0b 39                	or     (%rcx),%edi
 132:	21 15 49 13 1c 0b    	and    %edx,0xb1c1349(%rip)        # b1c1481 <terminal_row+0xb0ba421>
 138:	00 00                	add    %al,(%rax)
 13a:	12 0f                	adc    (%rdi),%cl
 13c:	00 0b                	add    %cl,(%rbx)
 13e:	21 08                	and    %ecx,(%rax)
 140:	49 13 00             	adc    (%r8),%rax
 143:	00 13                	add    %dl,(%rbx)
 145:	48 01 7d 01          	add    %rdi,0x1(%rbp)
 149:	7f 13                	jg     15e <data_segment+0x14e>
 14b:	01 13                	add    %edx,(%rbx)
 14d:	00 00                	add    %al,(%rax)
 14f:	14 48                	adc    $0x48,%al
 151:	00 7d 01             	add    %bh,0x1(%rbp)
 154:	7f 13                	jg     169 <data_segment+0x159>
 156:	00 00                	add    %al,(%rax)
 158:	15 1d 01 31 13       	adc    $0x1331011d,%eax
 15d:	52                   	push   %rdx
 15e:	01 b8 42 0b 55 17    	add    %edi,0x17550b42(%rax)
 164:	58                   	pop    %rax
 165:	21 01                	and    %eax,(%rcx)
 167:	59                   	pop    %rcx
 168:	0b 57 0b             	or     0xb(%rdi),%edx
 16b:	00 00                	add    %al,(%rax)
 16d:	16                   	(bad)
 16e:	05 00 03 08 3a       	add    $0x3a080300,%eax
 173:	21 01                	and    %eax,(%rcx)
 175:	3b 21                	cmp    (%rcx),%esp
 177:	31 39                	xor    %edi,(%rcx)
 179:	0b 49 13             	or     0x13(%rcx),%ecx
 17c:	02 18                	add    (%rax),%bl
 17e:	00 00                	add    %al,(%rax)
 180:	17                   	(bad)
 181:	34 00                	xor    $0x0,%al
 183:	03 08                	add    (%rax),%ecx
 185:	3a 21                	cmp    (%rcx),%ah
 187:	01 3b                	add    %edi,(%rbx)
 189:	0b 39                	or     (%rcx),%edi
 18b:	0b 49 13             	or     0x13(%rcx),%ecx
 18e:	00 00                	add    %al,(%rax)
 190:	18 2e                	sbb    %ch,(%rsi)
 192:	01 03                	add    %eax,(%rbx)
 194:	0e                   	(bad)
 195:	3a 21                	cmp    (%rcx),%ah
 197:	02 3b                	add    (%rbx),%bh
 199:	0b 39                	or     (%rcx),%edi
 19b:	0b 27                	or     (%rdi),%esp
 19d:	19 49 13             	sbb    %ecx,0x13(%rcx)
 1a0:	20 21                	and    %ah,(%rcx)
 1a2:	03 01                	add    (%rcx),%eax
 1a4:	13 00                	adc    (%rax),%eax
 1a6:	00 19                	add    %bl,(%rcx)
 1a8:	34 00                	xor    $0x0,%al
 1aa:	31 13                	xor    %edx,(%rbx)
 1ac:	00 00                	add    %al,(%rax)
 1ae:	1a 34 00             	sbb    (%rax,%rax,1),%dh
 1b1:	31 13                	xor    %edx,(%rbx)
 1b3:	02 17                	add    (%rdi),%dl
 1b5:	b7 42                	mov    $0x42,%bh
 1b7:	17                   	(bad)
 1b8:	00 00                	add    %al,(%rax)
 1ba:	1b 11                	sbb    (%rcx),%edx
 1bc:	01 25 0e 13 0b 03    	add    %esp,0x30b130e(%rip)        # 30b14d0 <terminal_row+0x2faa470>
 1c2:	1f                   	(bad)
 1c3:	1b 1f                	sbb    (%rdi),%ebx
 1c5:	11 01                	adc    %eax,(%rcx)
 1c7:	12 07                	adc    (%rdi),%al
 1c9:	10 17                	adc    %dl,(%rdi)
 1cb:	00 00                	add    %al,(%rax)
 1cd:	1c 24                	sbb    $0x24,%al
 1cf:	00 0b                	add    %cl,(%rbx)
 1d1:	0b 3e                	or     (%rsi),%edi
 1d3:	0b 03                	or     (%rbx),%eax
 1d5:	08 00                	or     %al,(%rax)
 1d7:	00 1d 04 01 03 0e    	add    %bl,0xe030104(%rip)        # e0302e1 <terminal_row+0xdf29281>
 1dd:	3e 0b 0b             	ds or  (%rbx),%ecx
 1e0:	0b 49 13             	or     0x13(%rcx),%ecx
 1e3:	3a 0b                	cmp    (%rbx),%cl
 1e5:	3b 0b                	cmp    (%rbx),%ecx
 1e7:	39 0b                	cmp    %ecx,(%rbx)
 1e9:	01 13                	add    %edx,(%rbx)
 1eb:	00 00                	add    %al,(%rax)
 1ed:	1e                   	(bad)
 1ee:	2e 01 3f             	cs add %edi,(%rdi)
 1f1:	19 03                	sbb    %eax,(%rbx)
 1f3:	0e                   	(bad)
 1f4:	3a 0b                	cmp    (%rbx),%cl
 1f6:	3b 0b                	cmp    (%rbx),%ecx
 1f8:	39 0b                	cmp    %ecx,(%rbx)
 1fa:	27                   	(bad)
 1fb:	19 49 13             	sbb    %ecx,0x13(%rcx)
 1fe:	3c 19                	cmp    $0x19,%al
 200:	01 13                	add    %edx,(%rbx)
 202:	00 00                	add    %al,(%rax)
 204:	1f                   	(bad)
 205:	05 00 49 13 00       	add    $0x134900,%eax
 20a:	00 20                	add    %ah,(%rax)
 20c:	48 01 7d 01          	add    %rdi,0x1(%rbp)
 210:	82                   	(bad)
 211:	01 19                	add    %ebx,(%rcx)
 213:	7f 13                	jg     228 <data_segment+0x218>
 215:	00 00                	add    %al,(%rax)
 217:	21 0b                	and    %ecx,(%rbx)
 219:	01 55 17             	add    %edx,0x17(%rbp)
 21c:	00 00                	add    %al,(%rax)
 21e:	22 2e                	and    (%rsi),%ch
 220:	01 3f                	add    %edi,(%rdi)
 222:	19 03                	sbb    %eax,(%rbx)
 224:	0e                   	(bad)
 225:	3a 0b                	cmp    (%rbx),%cl
 227:	3b 0b                	cmp    (%rbx),%ecx
 229:	39 0b                	cmp    %ecx,(%rbx)
 22b:	27                   	(bad)
 22c:	19 20                	sbb    %esp,(%rax)
 22e:	0b 01                	or     (%rcx),%eax
 230:	13 00                	adc    (%rax),%eax
 232:	00 23                	add    %ah,(%rbx)
 234:	05 00 03 08 3a       	add    $0x3a080300,%eax
 239:	0b 3b                	or     (%rbx),%edi
 23b:	0b 39                	or     (%rcx),%edi
 23d:	0b 49 13             	or     0x13(%rcx),%ecx
 240:	00 00                	add    %al,(%rax)
 242:	24 2e                	and    $0x2e,%al
 244:	01 3f                	add    %edi,(%rdi)
 246:	19 03                	sbb    %eax,(%rbx)
 248:	0e                   	(bad)
 249:	3a 0b                	cmp    (%rbx),%cl
 24b:	3b 0b                	cmp    (%rbx),%ecx
 24d:	39 0b                	cmp    %ecx,(%rbx)
 24f:	11 01                	adc    %eax,(%rcx)
 251:	12 07                	adc    (%rdi),%al
 253:	40 18 7a 19          	sbb    %dil,0x19(%rdx)
 257:	01 13                	add    %edx,(%rbx)
 259:	00 00                	add    %al,(%rax)
 25b:	25 34 00 03 0e       	and    $0xe030034,%eax
 260:	3a 0b                	cmp    (%rbx),%cl
 262:	3b 0b                	cmp    (%rbx),%ecx
 264:	39 0b                	cmp    %ecx,(%rbx)
 266:	49 13 02             	adc    (%r10),%rax
 269:	17                   	(bad)
 26a:	b7 42                	mov    $0x42,%bh
 26c:	17                   	(bad)
 26d:	00 00                	add    %al,(%rax)
 26f:	26 1d 01 31 13 52    	es sbb $0x52133101,%eax
 275:	01 b8 42 0b 11 01    	add    %edi,0x1110b42(%rax)
 27b:	12 07                	adc    (%rdi),%al
 27d:	58                   	pop    %rax
 27e:	0b 59 0b             	or     0xb(%rcx),%ebx
 281:	57                   	push   %rdi
 282:	0b 00                	or     (%rax),%eax
 284:	00 27                	add    %ah,(%rdi)
 286:	2e 01 31             	cs add %esi,(%rcx)
 289:	13 11                	adc    (%rcx),%edx
 28b:	01 12                	add    %edx,(%rdx)
 28d:	07                   	(bad)
 28e:	40 18 7a 19          	sbb    %dil,0x19(%rdx)
 292:	00 00                	add    %al,(%rax)
 294:	28 1d 01 31 13 11    	sub    %bl,0x11133101(%rip)        # 1113339b <terminal_row+0x1102c33b>
 29a:	01 12                	add    %edx,(%rdx)
 29c:	07                   	(bad)
 29d:	58                   	pop    %rax
 29e:	0b 59 0b             	or     0xb(%rcx),%ebx
 2a1:	57                   	push   %rdi
 2a2:	0b 01                	or     (%rcx),%eax
 2a4:	13 00                	adc    (%rax),%eax
 2a6:	00 29                	add    %ch,(%rcx)
 2a8:	05 00 31 13 00       	add    $0x133100,%eax
 2ad:	00 2a                	add    %ch,(%rdx)
 2af:	48 01 7d 01          	add    %rdi,0x1(%rbp)
 2b3:	7f 13                	jg     2c8 <data_segment+0x2b8>
 2b5:	00 00                	add    %al,(%rax)
 2b7:	00 01                	add    %al,(%rcx)
 2b9:	11 00                	adc    %eax,(%rax)
 2bb:	10 17                	adc    %dl,(%rdi)
 2bd:	11 01                	adc    %eax,(%rcx)
 2bf:	12 0f                	adc    (%rdi),%cl
 2c1:	03 0e                	add    (%rsi),%ecx
 2c3:	1b 0e                	sbb    (%rsi),%ecx
 2c5:	25 0e 13 05 00       	and    $0x5130e,%eax
 2ca:	00 00                	add    %al,(%rax)
 2cc:	01 24 00             	add    %esp,(%rax,%rax,1)
 2cf:	0b 0b                	or     (%rbx),%ecx
 2d1:	3e 0b 03             	ds or  (%rbx),%eax
 2d4:	0e                   	(bad)
 2d5:	00 00                	add    %al,(%rax)
 2d7:	02 11                	add    (%rcx),%dl
 2d9:	01 25 0e 13 0b 03    	add    %esp,0x30b130e(%rip)        # 30b15ed <terminal_row+0x2faa58d>
 2df:	1f                   	(bad)
 2e0:	1b 1f                	sbb    (%rdi),%ebx
 2e2:	11 01                	adc    %eax,(%rcx)
 2e4:	12 07                	adc    (%rdi),%al
 2e6:	10 17                	adc    %dl,(%rdi)
 2e8:	00 00                	add    %al,(%rax)
 2ea:	03 24 00             	add    (%rax,%rax,1),%esp
 2ed:	0b 0b                	or     (%rbx),%ecx
 2ef:	3e 0b 03             	ds or  (%rbx),%eax
 2f2:	08 00                	or     %al,(%rax)
 2f4:	00 04 2e             	add    %al,(%rsi,%rbp,1)
 2f7:	01 3f                	add    %edi,(%rdi)
 2f9:	19 03                	sbb    %eax,(%rbx)
 2fb:	0e                   	(bad)
 2fc:	3a 0b                	cmp    (%rbx),%cl
 2fe:	3b 0b                	cmp    (%rbx),%ecx
 300:	39 0b                	cmp    %ecx,(%rbx)
 302:	27                   	(bad)
 303:	19 49 13             	sbb    %ecx,0x13(%rcx)
 306:	3c 19                	cmp    $0x19,%al
 308:	01 13                	add    %edx,(%rbx)
 30a:	00 00                	add    %al,(%rax)
 30c:	05 05 00 49 13       	add    $0x13490005,%eax
 311:	00 00                	add    %al,(%rax)
 313:	06                   	(bad)
 314:	18 00                	sbb    %al,(%rax)
 316:	00 00                	add    %al,(%rax)
 318:	07                   	(bad)
 319:	0f 00 0b             	str    (%rbx)
 31c:	0b 49 13             	or     0x13(%rcx),%ecx
 31f:	00 00                	add    %al,(%rax)
 321:	08 37                	or     %dh,(%rdi)
 323:	00 49 13             	add    %cl,0x13(%rcx)
 326:	00 00                	add    %al,(%rax)
 328:	09 26                	or     %esp,(%rsi)
 32a:	00 49 13             	add    %cl,0x13(%rcx)
 32d:	00 00                	add    %al,(%rax)
 32f:	0a 2e                	or     (%rsi),%ch
 331:	00 3f                	add    %bh,(%rdi)
 333:	19 03                	sbb    %eax,(%rbx)
 335:	0e                   	(bad)
 336:	3a 0b                	cmp    (%rbx),%cl
 338:	3b 0b                	cmp    (%rbx),%ecx
 33a:	39 0b                	cmp    %ecx,(%rbx)
 33c:	27                   	(bad)
 33d:	19 3c 19             	sbb    %edi,(%rcx,%rbx,1)
 340:	00 00                	add    %al,(%rax)
 342:	0b 2e                	or     (%rsi),%ebp
 344:	01 3f                	add    %edi,(%rdi)
 346:	19 03                	sbb    %eax,(%rbx)
 348:	0e                   	(bad)
 349:	3a 0b                	cmp    (%rbx),%cl
 34b:	3b 0b                	cmp    (%rbx),%ecx
 34d:	39 0b                	cmp    %ecx,(%rbx)
 34f:	27                   	(bad)
 350:	19 11                	sbb    %edx,(%rcx)
 352:	01 12                	add    %edx,(%rdx)
 354:	07                   	(bad)
 355:	40 18 7a 19          	sbb    %dil,0x19(%rdx)
 359:	00 00                	add    %al,(%rax)
 35b:	0c 48                	or     $0x48,%al
 35d:	00 7d 01             	add    %bh,0x1(%rbp)
 360:	7f 13                	jg     375 <data_segment+0x365>
 362:	00 00                	add    %al,(%rax)
 364:	0d 48 00 7d 01       	or     $0x17d0048,%eax
 369:	82                   	(bad)
 36a:	01 19                	add    %ebx,(%rcx)
 36c:	7f 13                	jg     381 <data_segment+0x371>
 36e:	00 00                	add    %al,(%rax)
 370:	00 01                	add    %al,(%rcx)
 372:	24 00                	and    $0x0,%al
 374:	0b 0b                	or     (%rbx),%ecx
 376:	3e 0b 03             	ds or  (%rbx),%eax
 379:	0e                   	(bad)
 37a:	00 00                	add    %al,(%rax)
 37c:	02 05 00 31 13 00    	add    0x133100(%rip),%al        # 133482 <terminal_row+0x2c422>
 382:	00 03                	add    %al,(%rbx)
 384:	34 00                	xor    $0x0,%al
 386:	31 13                	xor    %edx,(%rbx)
 388:	00 00                	add    %al,(%rax)
 38a:	04 0d                	add    $0xd,%al
 38c:	00 03                	add    %al,(%rbx)
 38e:	0e                   	(bad)
 38f:	3a 21                	cmp    (%rcx),%ah
 391:	02 3b                	add    (%rbx),%bh
 393:	21 00                	and    %eax,(%rax)
 395:	49 13 38             	adc    (%r8),%rdi
 398:	0b 00                	or     (%rax),%eax
 39a:	00 05 34 00 03 0e    	add    %al,0xe030034(%rip)        # e0303d4 <terminal_row+0xdf29374>
 3a0:	3a 21                	cmp    (%rcx),%ah
 3a2:	01 3b                	add    %edi,(%rbx)
 3a4:	0b 39                	or     (%rcx),%edi
 3a6:	0b 49 13             	or     0x13(%rcx),%ecx
 3a9:	02 17                	add    (%rdi),%dl
 3ab:	b7 42                	mov    $0x42,%bh
 3ad:	17                   	(bad)
 3ae:	00 00                	add    %al,(%rax)
 3b0:	06                   	(bad)
 3b1:	0b 01                	or     (%rcx),%eax
 3b3:	31 13                	xor    %edx,(%rbx)
 3b5:	11 01                	adc    %eax,(%rcx)
 3b7:	12 07                	adc    (%rdi),%al
 3b9:	00 00                	add    %al,(%rax)
 3bb:	07                   	(bad)
 3bc:	48 00 7d 01          	rex.W add %dil,0x1(%rbp)
 3c0:	7f 13                	jg     3d5 <data_segment+0x3c5>
 3c2:	00 00                	add    %al,(%rax)
 3c4:	08 16                	or     %dl,(%rsi)
 3c6:	00 03                	add    %al,(%rbx)
 3c8:	0e                   	(bad)
 3c9:	3a 0b                	cmp    (%rbx),%cl
 3cb:	3b 0b                	cmp    (%rbx),%ecx
 3cd:	39 0b                	cmp    %ecx,(%rbx)
 3cf:	49 13 00             	adc    (%r8),%rax
 3d2:	00 09                	add    %cl,(%rcx)
 3d4:	0b 01                	or     (%rcx),%eax
 3d6:	55                   	push   %rbp
 3d7:	17                   	(bad)
 3d8:	01 13                	add    %edx,(%rbx)
 3da:	00 00                	add    %al,(%rax)
 3dc:	0a 34 00             	or     (%rax,%rax,1),%dh
 3df:	03 08                	add    (%rax),%ecx
 3e1:	3a 21                	cmp    (%rcx),%ah
 3e3:	01 3b                	add    %edi,(%rbx)
 3e5:	0b 39                	or     (%rcx),%edi
 3e7:	0b 49 13             	or     0x13(%rcx),%ecx
 3ea:	02 17                	add    (%rdi),%dl
 3ec:	b7 42                	mov    $0x42,%bh
 3ee:	17                   	(bad)
 3ef:	00 00                	add    %al,(%rax)
 3f1:	0b 34 00             	or     (%rax,%rax,1),%esi
 3f4:	31 13                	xor    %edx,(%rbx)
 3f6:	02 17                	add    (%rdi),%dl
 3f8:	b7 42                	mov    $0x42,%bh
 3fa:	17                   	(bad)
 3fb:	00 00                	add    %al,(%rax)
 3fd:	0c 2e                	or     $0x2e,%al
 3ff:	01 3f                	add    %edi,(%rdi)
 401:	19 03                	sbb    %eax,(%rbx)
 403:	0e                   	(bad)
 404:	3a 0b                	cmp    (%rbx),%cl
 406:	3b 0b                	cmp    (%rbx),%ecx
 408:	39 0b                	cmp    %ecx,(%rbx)
 40a:	27                   	(bad)
 40b:	19 49 13             	sbb    %ecx,0x13(%rcx)
 40e:	3c 19                	cmp    $0x19,%al
 410:	01 13                	add    %edx,(%rbx)
 412:	00 00                	add    %al,(%rax)
 414:	0d 05 00 49 13       	or     $0x13490005,%eax
 419:	00 00                	add    %al,(%rax)
 41b:	0e                   	(bad)
 41c:	0f 00 0b             	str    (%rbx)
 41f:	21 08                	and    %ecx,(%rax)
 421:	49 13 00             	adc    (%r8),%rax
 424:	00 0f                	add    %cl,(%rdi)
 426:	26 00 49 13          	es add %cl,0x13(%rcx)
 42a:	00 00                	add    %al,(%rax)
 42c:	10 0b                	adc    %cl,(%rbx)
 42e:	01 55 17             	add    %edx,0x17(%rbp)
 431:	00 00                	add    %al,(%rax)
 433:	11 1d 01 31 13 11    	adc    %ebx,0x11133101(%rip)        # 1113353a <terminal_row+0x1102c4da>
 439:	01 12                	add    %edx,(%rdx)
 43b:	07                   	(bad)
 43c:	58                   	pop    %rax
 43d:	21 01                	and    %eax,(%rcx)
 43f:	59                   	pop    %rcx
 440:	0b 57 21             	or     0x21(%rdi),%edx
 443:	09 00                	or     %eax,(%rax)
 445:	00 12                	add    %dl,(%rdx)
 447:	1d 01 31 13 11       	sbb    $0x11133101,%eax
 44c:	01 12                	add    %edx,(%rdx)
 44e:	07                   	(bad)
 44f:	58                   	pop    %rax
 450:	21 01                	and    %eax,(%rcx)
 452:	59                   	pop    %rcx
 453:	0b 57 21             	or     0x21(%rdi),%edx
 456:	09 01                	or     %eax,(%rcx)
 458:	13 00                	adc    (%rax),%eax
 45a:	00 13                	add    %dl,(%rbx)
 45c:	48 01 7d 01          	add    %rdi,0x1(%rbp)
 460:	7f 13                	jg     475 <data_segment+0x465>
 462:	00 00                	add    %al,(%rax)
 464:	14 49                	adc    $0x49,%al
 466:	00 02                	add    %al,(%rdx)
 468:	18 7e 18             	sbb    %bh,0x18(%rsi)
 46b:	00 00                	add    %al,(%rax)
 46d:	15 05 00 03 0e       	adc    $0xe030005,%eax
 472:	3a 21                	cmp    (%rcx),%ah
 474:	01 3b                	add    %edi,(%rbx)
 476:	21 07                	and    %eax,(%rdi)
 478:	39 0b                	cmp    %ecx,(%rbx)
 47a:	49 13 00             	adc    (%r8),%rax
 47d:	00 16                	add    %dl,(%rsi)
 47f:	11 01                	adc    %eax,(%rcx)
 481:	25 0e 13 0b 03       	and    $0x30b130e,%eax
 486:	1f                   	(bad)
 487:	1b 1f                	sbb    (%rdi),%ebx
 489:	11 01                	adc    %eax,(%rcx)
 48b:	12 07                	adc    (%rdi),%al
 48d:	10 17                	adc    %dl,(%rdi)
 48f:	00 00                	add    %al,(%rax)
 491:	17                   	(bad)
 492:	16                   	(bad)
 493:	00 03                	add    %al,(%rbx)
 495:	0e                   	(bad)
 496:	49 13 00             	adc    (%r8),%rax
 499:	00 18                	add    %bl,(%rax)
 49b:	01 01                	add    %eax,(%rcx)
 49d:	49 13 01             	adc    (%r9),%rax
 4a0:	13 00                	adc    (%rax),%eax
 4a2:	00 19                	add    %bl,(%rcx)
 4a4:	21 00                	and    %eax,(%rax)
 4a6:	49 13 2f             	adc    (%r15),%rbp
 4a9:	0b 00                	or     (%rax),%eax
 4ab:	00 1a                	add    %bl,(%rdx)
 4ad:	13 01                	adc    (%rcx),%eax
 4af:	03 0e                	add    (%rsi),%ecx
 4b1:	0b 0b                	or     (%rbx),%ecx
 4b3:	3a 0b                	cmp    (%rbx),%cl
 4b5:	3b 0b                	cmp    (%rbx),%ecx
 4b7:	01 13                	add    %edx,(%rbx)
 4b9:	00 00                	add    %al,(%rax)
 4bb:	1b 0f                	sbb    (%rdi),%ecx
 4bd:	00 0b                	add    %cl,(%rbx)
 4bf:	0b 00                	or     (%rax),%eax
 4c1:	00 1c 24             	add    %bl,(%rsp)
 4c4:	00 0b                	add    %cl,(%rbx)
 4c6:	0b 3e                	or     (%rsi),%edi
 4c8:	0b 03                	or     (%rbx),%eax
 4ca:	08 00                	or     %al,(%rax)
 4cc:	00 1d 37 00 49 13    	add    %bl,0x13490037(%rip)        # 13490509 <terminal_row+0x133894a9>
 4d2:	00 00                	add    %al,(%rax)
 4d4:	1e                   	(bad)
 4d5:	2e 01 3f             	cs add %edi,(%rdi)
 4d8:	19 03                	sbb    %eax,(%rbx)
 4da:	0e                   	(bad)
 4db:	3a 0b                	cmp    (%rbx),%cl
 4dd:	3b 0b                	cmp    (%rbx),%ecx
 4df:	39 0b                	cmp    %ecx,(%rbx)
 4e1:	27                   	(bad)
 4e2:	19 49 13             	sbb    %ecx,0x13(%rcx)
 4e5:	11 01                	adc    %eax,(%rcx)
 4e7:	12 07                	adc    (%rdi),%al
 4e9:	40 18 7a 19          	sbb    %dil,0x19(%rdx)
 4ed:	01 13                	add    %edx,(%rbx)
 4ef:	00 00                	add    %al,(%rax)
 4f1:	1f                   	(bad)
 4f2:	05 00 03 0e 3a       	add    $0x3a0e0300,%eax
 4f7:	0b 3b                	or     (%rbx),%edi
 4f9:	0b 39                	or     (%rcx),%edi
 4fb:	0b 49 13             	or     0x13(%rcx),%ecx
 4fe:	02 17                	add    (%rdi),%dl
 500:	b7 42                	mov    $0x42,%bh
 502:	17                   	(bad)
 503:	00 00                	add    %al,(%rax)
 505:	20 18                	and    %bl,(%rax)
 507:	00 00                	add    %al,(%rax)
 509:	00 21                	add    %ah,(%rcx)
 50b:	34 00                	xor    $0x0,%al
 50d:	03 0e                	add    (%rsi),%ecx
 50f:	3a 0b                	cmp    (%rbx),%cl
 511:	3b 0b                	cmp    (%rbx),%ecx
 513:	39 0b                	cmp    %ecx,(%rbx)
 515:	49 13 02             	adc    (%r10),%rax
 518:	18 00                	sbb    %al,(%rax)
 51a:	00 22                	add    %ah,(%rdx)
 51c:	34 00                	xor    $0x0,%al
 51e:	03 08                	add    (%rax),%ecx
 520:	3a 0b                	cmp    (%rbx),%cl
 522:	3b 0b                	cmp    (%rbx),%ecx
 524:	39 0b                	cmp    %ecx,(%rbx)
 526:	49 13 02             	adc    (%r10),%rax
 529:	18 00                	sbb    %al,(%rax)
 52b:	00 23                	add    %ah,(%rbx)
 52d:	2e 01 03             	cs add %eax,(%rbx)
 530:	0e                   	(bad)
 531:	3a 0b                	cmp    (%rbx),%cl
 533:	3b 0b                	cmp    (%rbx),%ecx
 535:	39 0b                	cmp    %ecx,(%rbx)
 537:	27                   	(bad)
 538:	19 49 13             	sbb    %ecx,0x13(%rcx)
 53b:	20 0b                	and    %cl,(%rbx)
 53d:	01 13                	add    %edx,(%rbx)
 53f:	00 00                	add    %al,(%rax)
 541:	24 34                	and    $0x34,%al
 543:	00 03                	add    %al,(%rbx)
 545:	0e                   	(bad)
 546:	3a 0b                	cmp    (%rbx),%cl
 548:	3b 0b                	cmp    (%rbx),%ecx
 54a:	39 0b                	cmp    %ecx,(%rbx)
 54c:	49 13 00             	adc    (%r8),%rax
 54f:	00 25 0b 01 00 00    	add    %ah,0x10b(%rip)        # 660 <data_segment+0x650>
 555:	26 34 00             	es xor $0x0,%al
 558:	03 08                	add    (%rax),%ecx
 55a:	3a 0b                	cmp    (%rbx),%cl
 55c:	3b 0b                	cmp    (%rbx),%ecx
 55e:	39 0b                	cmp    %ecx,(%rbx)
 560:	49 13 00             	adc    (%r8),%rax
 563:	00 00                	add    %al,(%rax)
 565:	01 24 00             	add    %esp,(%rax,%rax,1)
 568:	0b 0b                	or     (%rbx),%ecx
 56a:	3e 0b 03             	ds or  (%rbx),%eax
 56d:	0e                   	(bad)
 56e:	00 00                	add    %al,(%rax)
 570:	02 05 00 49 13 00    	add    0x134900(%rip),%al        # 134e76 <terminal_row+0x2de16>
 576:	00 03                	add    %al,(%rbx)
 578:	49 00 02             	rex.WB add %al,(%r10)
 57b:	18 7e 18             	sbb    %bh,0x18(%rsi)
 57e:	00 00                	add    %al,(%rax)
 580:	04 11                	add    $0x11,%al
 582:	01 25 0e 13 0b 03    	add    %esp,0x30b130e(%rip)        # 30b1896 <terminal_row+0x2faa836>
 588:	1f                   	(bad)
 589:	1b 1f                	sbb    (%rdi),%ebx
 58b:	11 01                	adc    %eax,(%rcx)
 58d:	12 07                	adc    (%rdi),%al
 58f:	10 17                	adc    %dl,(%rdi)
 591:	00 00                	add    %al,(%rax)
 593:	05 16 00 03 0e       	add    $0xe030016,%eax
 598:	3a 0b                	cmp    (%rbx),%cl
 59a:	3b 0b                	cmp    (%rbx),%ecx
 59c:	39 0b                	cmp    %ecx,(%rbx)
 59e:	49 13 00             	adc    (%r8),%rax
 5a1:	00 06                	add    %al,(%rsi)
 5a3:	24 00                	and    $0x0,%al
 5a5:	0b 0b                	or     (%rbx),%ecx
 5a7:	3e 0b 03             	ds or  (%rbx),%eax
 5aa:	08 00                	or     %al,(%rax)
 5ac:	00 07                	add    %al,(%rdi)
 5ae:	2e 01 3f             	cs add %edi,(%rdi)
 5b1:	19 03                	sbb    %eax,(%rbx)
 5b3:	0e                   	(bad)
 5b4:	3a 0b                	cmp    (%rbx),%cl
 5b6:	3b 0b                	cmp    (%rbx),%ecx
 5b8:	39 0b                	cmp    %ecx,(%rbx)
 5ba:	27                   	(bad)
 5bb:	19 3c 19             	sbb    %edi,(%rcx,%rbx,1)
 5be:	01 13                	add    %edx,(%rbx)
 5c0:	00 00                	add    %al,(%rax)
 5c2:	08 0f                	or     %cl,(%rdi)
 5c4:	00 0b                	add    %cl,(%rbx)
 5c6:	0b 49 13             	or     0x13(%rcx),%ecx
 5c9:	00 00                	add    %al,(%rax)
 5cb:	09 26                	or     %esp,(%rsi)
 5cd:	00 49 13             	add    %cl,0x13(%rcx)
 5d0:	00 00                	add    %al,(%rax)
 5d2:	0a 2e                	or     (%rsi),%ch
 5d4:	01 3f                	add    %edi,(%rdi)
 5d6:	19 03                	sbb    %eax,(%rbx)
 5d8:	0e                   	(bad)
 5d9:	3a 0b                	cmp    (%rbx),%cl
 5db:	3b 0b                	cmp    (%rbx),%ecx
 5dd:	39 0b                	cmp    %ecx,(%rbx)
 5df:	27                   	(bad)
 5e0:	19 49 13             	sbb    %ecx,0x13(%rcx)
 5e3:	11 01                	adc    %eax,(%rcx)
 5e5:	12 07                	adc    (%rdi),%al
 5e7:	40 18 7a 19          	sbb    %dil,0x19(%rdx)
 5eb:	00 00                	add    %al,(%rax)
 5ed:	0b 05 00 03 08 3a    	or     0x3a080300(%rip),%eax        # 3a0808f3 <MAGIC+0x1e5a58f1>
 5f3:	0b 3b                	or     (%rbx),%edi
 5f5:	0b 39                	or     (%rcx),%edi
 5f7:	0b 49 13             	or     0x13(%rcx),%ecx
 5fa:	02 17                	add    (%rdi),%dl
 5fc:	b7 42                	mov    $0x42,%bh
 5fe:	17                   	(bad)
 5ff:	00 00                	add    %al,(%rax)
 601:	0c 34                	or     $0x34,%al
 603:	00 03                	add    %al,(%rbx)
 605:	08 3a                	or     %bh,(%rdx)
 607:	0b 3b                	or     (%rbx),%edi
 609:	0b 39                	or     (%rcx),%edi
 60b:	0b 49 13             	or     0x13(%rcx),%ecx
 60e:	02 18                	add    (%rax),%bl
 610:	00 00                	add    %al,(%rax)
 612:	0d 48 01 7d 01       	or     $0x17d0148,%eax
 617:	7f 13                	jg     62c <data_segment+0x61c>
 619:	00 00                	add    %al,(%rax)
 61b:	00 01                	add    %al,(%rcx)
 61d:	24 00                	and    $0x0,%al
 61f:	0b 0b                	or     (%rbx),%ecx
 621:	3e 0b 03             	ds or  (%rbx),%eax
 624:	0e                   	(bad)
 625:	00 00                	add    %al,(%rax)
 627:	02 11                	add    (%rcx),%dl
 629:	01 25 0e 13 0b 03    	add    %esp,0x30b130e(%rip)        # 30b193d <terminal_row+0x2faa8dd>
 62f:	1f                   	(bad)
 630:	1b 1f                	sbb    (%rdi),%ebx
 632:	11 01                	adc    %eax,(%rcx)
 634:	12 07                	adc    (%rdi),%al
 636:	10 17                	adc    %dl,(%rdi)
 638:	00 00                	add    %al,(%rax)
 63a:	03 16                	add    (%rsi),%edx
 63c:	00 03                	add    %al,(%rbx)
 63e:	0e                   	(bad)
 63f:	3a 0b                	cmp    (%rbx),%cl
 641:	3b 0b                	cmp    (%rbx),%ecx
 643:	39 0b                	cmp    %ecx,(%rbx)
 645:	49 13 00             	adc    (%r8),%rax
 648:	00 04 24             	add    %al,(%rsp)
 64b:	00 0b                	add    %cl,(%rbx)
 64d:	0b 3e                	or     (%rsi),%edi
 64f:	0b 03                	or     (%rbx),%eax
 651:	08 00                	or     %al,(%rax)
 653:	00 05 2e 01 3f 19    	add    %al,0x193f012e(%rip)        # 193f0787 <terminal_row+0x192e9727>
 659:	03 0e                	add    (%rsi),%ecx
 65b:	3a 0b                	cmp    (%rbx),%cl
 65d:	3b 0b                	cmp    (%rbx),%ecx
 65f:	39 0b                	cmp    %ecx,(%rbx)
 661:	27                   	(bad)
 662:	19 49 13             	sbb    %ecx,0x13(%rcx)
 665:	11 01                	adc    %eax,(%rcx)
 667:	12 07                	adc    (%rdi),%al
 669:	40 18 7a 19          	sbb    %dil,0x19(%rdx)
 66d:	01 13                	add    %edx,(%rbx)
 66f:	00 00                	add    %al,(%rax)
 671:	06                   	(bad)
 672:	05 00 03 08 3a       	add    $0x3a080300,%eax
 677:	0b 3b                	or     (%rbx),%edi
 679:	0b 39                	or     (%rcx),%edi
 67b:	0b 49 13             	or     0x13(%rcx),%ecx
 67e:	02 18                	add    (%rax),%bl
 680:	00 00                	add    %al,(%rax)
 682:	07                   	(bad)
 683:	34 00                	xor    $0x0,%al
 685:	03 08                	add    (%rax),%ecx
 687:	3a 0b                	cmp    (%rbx),%cl
 689:	3b 0b                	cmp    (%rbx),%ecx
 68b:	39 0b                	cmp    %ecx,(%rbx)
 68d:	49 13 02             	adc    (%r10),%rax
 690:	17                   	(bad)
 691:	b7 42                	mov    $0x42,%bh
 693:	17                   	(bad)
 694:	00 00                	add    %al,(%rax)
 696:	08 0f                	or     %cl,(%rdi)
 698:	00 0b                	add    %cl,(%rbx)
 69a:	0b 49 13             	or     0x13(%rcx),%ecx
 69d:	00 00                	add    %al,(%rax)
 69f:	09 26                	or     %esp,(%rsi)
 6a1:	00 49 13             	add    %cl,0x13(%rcx)
 6a4:	00 00                	add    %al,(%rax)
 6a6:	00 01                	add    %al,(%rcx)
 6a8:	11 00                	adc    %eax,(%rax)
 6aa:	10 17                	adc    %dl,(%rdi)
 6ac:	55                   	push   %rbp
 6ad:	17                   	(bad)
 6ae:	03 0e                	add    (%rsi),%ecx
 6b0:	1b 0e                	sbb    (%rsi),%ecx
 6b2:	25 0e 13 05 00       	and    $0x5130e,%eax
	...

Disassembly of section .debug_aranges:

0000000000000000 <.debug_aranges>:
   0:	3c 00                	cmp    $0x0,%al
   2:	00 00                	add    %al,(%rax)
   4:	02 00                	add    (%rax),%al
   6:	00 00                	add    %al,(%rax)
   8:	00 00                	add    %al,(%rax)
   a:	08 00                	or     %al,(%rax)
   c:	00 00                	add    %al,(%rax)
   e:	00 00                	add    %al,(%rax)
  10:	c1 08 10             	rorl   $0x10,(%rax)
  13:	00 00                	add    %al,(%rax)
  15:	00 00                	add    %al,(%rax)
  17:	00 03                	add    %al,(%rbx)
  19:	00 00                	add    %al,(%rax)
  1b:	00 00                	add    %al,(%rax)
  1d:	00 00                	add    %al,(%rax)
  1f:	00 d0                	add    %dl,%al
  21:	08 10                	or     %dl,(%rax)
  23:	00 00                	add    %al,(%rax)
  25:	00 00                	add    %al,(%rax)
  27:	00 03                	add    %al,(%rbx)
	...
  3d:	00 00                	add    %al,(%rax)
  3f:	00 2c 00             	add    %ch,(%rax,%rax,1)
  42:	00 00                	add    %al,(%rax)
  44:	02 00                	add    (%rax),%al
  46:	23 00                	and    (%rax),%eax
  48:	00 00                	add    %al,(%rax)
  4a:	08 00                	or     %al,(%rax)
  4c:	00 00                	add    %al,(%rax)
  4e:	00 00                	add    %al,(%rax)
  50:	3d 01 10 00 00       	cmp    $0x1001,%eax
  55:	00 00                	add    %al,(%rax)
  57:	00 15 01 00 00 00    	add    %dl,0x1(%rip)        # 5e <data_segment+0x4e>
	...
  6d:	00 00                	add    %al,(%rax)
  6f:	00 2c 00             	add    %ch,(%rax,%rax,1)
  72:	00 00                	add    %al,(%rax)
  74:	02 00                	add    (%rax),%al
  76:	5d                   	pop    %rbp
  77:	00 00                	add    %al,(%rax)
  79:	00 08                	add    %cl,(%rax)
  7b:	00 00                	add    %al,(%rax)
  7d:	00 00                	add    %al,(%rax)
  7f:	00 60 02             	add    %ah,0x2(%rax)
  82:	10 00                	adc    %al,(%rax)
  84:	00 00                	add    %al,(%rax)
  86:	00 00                	add    %al,(%rax)
  88:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
  89:	02 00                	add    (%rax),%al
	...
  9f:	00 2c 00             	add    %ch,(%rax,%rax,1)
  a2:	00 00                	add    %al,(%rax)
  a4:	02 00                	add    (%rax),%al
  a6:	34 06                	xor    $0x6,%al
  a8:	00 00                	add    %al,(%rax)
  aa:	08 00                	or     %al,(%rax)
  ac:	00 00                	add    %al,(%rax)
  ae:	00 00                	add    %al,(%rax)
  b0:	06                   	(bad)
  b1:	05 10 00 00 00       	add    $0x10,%eax
  b6:	00 00                	add    %al,(%rax)
  b8:	06                   	(bad)
	...
  cd:	00 00                	add    %al,(%rax)
  cf:	00 2c 00             	add    %ch,(%rax,%rax,1)
  d2:	00 00                	add    %al,(%rax)
  d4:	02 00                	add    (%rax),%al
  d6:	5c                   	pop    %rsp
  d7:	06                   	(bad)
  d8:	00 00                	add    %al,(%rax)
  da:	08 00                	or     %al,(%rax)
  dc:	00 00                	add    %al,(%rax)
  de:	00 00                	add    %al,(%rax)
  e0:	10 05 10 00 00 00    	adc    %al,0x10(%rip)        # f6 <data_segment+0xe6>
  e6:	00 00                	add    %al,(%rax)
  e8:	51                   	push   %rcx
	...
  fd:	00 00                	add    %al,(%rax)
  ff:	00 2c 00             	add    %ch,(%rax,%rax,1)
 102:	00 00                	add    %al,(%rax)
 104:	02 00                	add    (%rax),%al
 106:	19 07                	sbb    %eax,(%rdi)
 108:	00 00                	add    %al,(%rax)
 10a:	08 00                	or     %al,(%rax)
 10c:	00 00                	add    %al,(%rax)
 10e:	00 00                	add    %al,(%rax)
 110:	80 05 10 00 00 00 00 	addb   $0x0,0x10(%rip)        # 127 <data_segment+0x117>
 117:	00 99 02 00 00 00    	add    %bl,0x2(%rcx)
	...
 12d:	00 00                	add    %al,(%rax)
 12f:	00 2c 00             	add    %ch,(%rax,%rax,1)
 132:	00 00                	add    %al,(%rax)
 134:	02 00                	add    (%rax),%al
 136:	01 0b                	add    %ecx,(%rbx)
 138:	00 00                	add    %al,(%rax)
 13a:	08 00                	or     %al,(%rax)
 13c:	00 00                	add    %al,(%rax)
 13e:	00 00                	add    %al,(%rax)
 140:	20 08                	and    %cl,(%rax)
 142:	10 00                	adc    %al,(%rax)
 144:	00 00                	add    %al,(%rax)
 146:	00 00                	add    %al,(%rax)
 148:	25 00 00 00 00       	and    $0x0,%eax
	...
 15d:	00 00                	add    %al,(%rax)
 15f:	00 2c 00             	add    %ch,(%rax,%rax,1)
 162:	00 00                	add    %al,(%rax)
 164:	02 00                	add    (%rax),%al
 166:	e0 0b                	loopne 173 <data_segment+0x163>
 168:	00 00                	add    %al,(%rax)
 16a:	08 00                	or     %al,(%rax)
 16c:	00 00                	add    %al,(%rax)
 16e:	00 00                	add    %al,(%rax)
 170:	50                   	push   %rax
 171:	08 10                	or     %dl,(%rax)
 173:	00 00                	add    %al,(%rax)
 175:	00 00                	add    %al,(%rax)
 177:	00 21                	add    %ah,(%rcx)
	...
 18d:	00 00                	add    %al,(%rax)
 18f:	00 3c 00             	add    %bh,(%rax,%rax,1)
 192:	00 00                	add    %al,(%rax)
 194:	02 00                	add    (%rax),%al
 196:	95                   	xchg   %eax,%ebp
 197:	0c 00                	or     $0x0,%al
 199:	00 08                	add    %cl,(%rax)
 19b:	00 00                	add    %al,(%rax)
 19d:	00 00                	add    %al,(%rax)
 19f:	00 ce                	add    %cl,%dh
 1a1:	08 10                	or     %dl,(%rax)
 1a3:	00 00                	add    %al,(%rax)
 1a5:	00 00                	add    %al,(%rax)
 1a7:	00 02                	add    %al,(%rdx)
 1a9:	00 00                	add    %al,(%rax)
 1ab:	00 00                	add    %al,(%rax)
 1ad:	00 00                	add    %al,(%rax)
 1af:	00 d8                	add    %bl,%al
 1b1:	08 10                	or     %dl,(%rax)
 1b3:	00 00                	add    %al,(%rax)
 1b5:	00 00                	add    %al,(%rax)
 1b7:	00 02                	add    %al,(%rdx)
	...

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
   0:	61                   	(bad)
   1:	72 63                	jb     66 <data_segment+0x56>
   3:	68 2f 78 38 36       	push   $0x3638782f
   8:	5f                   	pop    %rdi
   9:	36 34 2f             	ss xor $0x2f,%al
   c:	63 72 74             	movsxd 0x74(%rdx),%esi
   f:	69 2e 53 00 2f 68    	imul   $0x682f0053,(%rsi),%ebp
  15:	6f                   	outsl  %ds:(%rsi),(%dx)
  16:	6d                   	insl   (%dx),%es:(%rdi)
  17:	65 2f                	gs (bad)
  19:	61                   	(bad)
  1a:	64 69 74 68 79 61 2f 	imul   $0x6f442f61,%fs:0x79(%rax,%rbp,2),%esi
  21:	44 6f 
  23:	63 75 6d             	movsxd 0x6d(%rbp),%esi
  26:	65 6e                	outsb  %gs:(%rsi),(%dx)
  28:	74 73                	je     9d <data_segment+0x8d>
  2a:	2f                   	(bad)
  2b:	41                   	rex.B
  2c:	64 69 4f 53 2f 41 64 	imul   $0x6964412f,%fs:0x53(%rdi),%ecx
  33:	69 
  34:	4f 53                	rex.WRXB push %r11
  36:	2f                   	(bad)
  37:	6b 65 72 6e          	imul   $0x6e,0x72(%rbp),%esp
  3b:	65 6c                	gs insb (%dx),%es:(%rdi)
  3d:	00 47 4e             	add    %al,0x4e(%rdi)
  40:	55                   	push   %rbp
  41:	20 41 53             	and    %al,0x53(%rcx)
  44:	20 32                	and    %dh,(%rdx)
  46:	2e 34 34             	cs xor $0x34,%al
  49:	00 61 72             	add    %ah,0x72(%rcx)
  4c:	63 68 2f             	movsxd 0x2f(%rax),%ebp
  4f:	78 38                	js     89 <data_segment+0x79>
  51:	36 5f                	ss pop %rdi
  53:	36 34 2f             	ss xor $0x2f,%al
  56:	62                   	(bad)
  57:	6f                   	outsl  %ds:(%rsi),(%dx)
  58:	6f                   	outsl  %ds:(%rsi),(%dx)
  59:	74 2e                	je     89 <data_segment+0x79>
  5b:	53                   	push   %rbx
  5c:	00 5f 73             	add    %bl,0x73(%rdi)
  5f:	74 61                	je     c2 <data_segment+0xb2>
  61:	72 74                	jb     d7 <data_segment+0xc7>
  63:	00 76 69             	add    %dh,0x69(%rsi)
  66:	64 65 6f             	fs outsl %gs:(%rsi),(%dx)
  69:	5f                   	pop    %rdi
  6a:	6d                   	insl   (%dx),%es:(%rdi)
  6b:	65 6d                	gs insl (%dx),%es:(%rdi)
  6d:	6f                   	outsl  %ds:(%rsi),(%dx)
  6e:	72 79                	jb     e9 <data_segment+0xd9>
  70:	00 74 65 72          	add    %dh,0x72(%rbp,%riz,2)
  74:	6d                   	insl   (%dx),%es:(%rdi)
  75:	69 6e 61 6c 5f 77 72 	imul   $0x72775f6c,0x61(%rsi),%ebp
  7c:	69 74 65 73 74 72 69 	imul   $0x6e697274,0x73(%rbp,%riz,2),%esi
  83:	6e 
  84:	67 00 74 65 72       	add    %dh,0x72(%ebp,%eiz,2)
  89:	6d                   	insl   (%dx),%es:(%rdi)
  8a:	69 6e 61 6c 5f 70 75 	imul   $0x75705f6c,0x61(%rsi),%ebp
  91:	74 63                	je     f6 <data_segment+0xe6>
  93:	68 61 72 00 73       	push   $0x73007261
  98:	69 7a 65 5f 74 00 74 	imul   $0x7400745f,0x65(%rdx),%edi
  9f:	65 72 6d             	gs jb  10f <data_segment+0xff>
  a2:	69 6e 61 6c 5f 62 75 	imul   $0x75625f6c,0x61(%rsi),%ebp
  a9:	66 66 65 72 00       	data16 data16 gs jb ae <data_segment+0x9e>
  ae:	56                   	push   %rsi
  af:	47                   	rex.RXB
  b0:	41 5f                	pop    %r15
  b2:	43                   	rex.XB
  b3:	4f                   	rex.WRXB
  b4:	4c                   	rex.WR
  b5:	4f 52                	rex.WRXB push %r10
  b7:	5f                   	pop    %rdi
  b8:	4d                   	rex.WRB
  b9:	41                   	rex.B
  ba:	47                   	rex.RXB
  bb:	45                   	rex.RB
  bc:	4e 54                	rex.WRX push %rsp
  be:	41 00 63 68          	add    %spl,0x68(%r11)
  c2:	61                   	(bad)
  c3:	72 61                	jb     126 <data_segment+0x116>
  c5:	63 74 65 72          	movsxd 0x72(%rbp,%riz,2),%esi
  c9:	00 56 47             	add    %dl,0x47(%rsi)
  cc:	41 5f                	pop    %r15
  ce:	43                   	rex.XB
  cf:	4f                   	rex.WRXB
  d0:	4c                   	rex.WR
  d1:	4f 52                	rex.WRXB push %r10
  d3:	5f                   	pop    %rdi
  d4:	4c                   	rex.WR
  d5:	49                   	rex.WB
  d6:	47                   	rex.RXB
  d7:	48 54                	rex.W push %rsp
  d9:	5f                   	pop    %rdi
  da:	47 52                	rex.RXB push %r10
  dc:	45                   	rex.RB
  dd:	45                   	rex.RB
  de:	4e 00 56 47          	rex.WRX add %r10b,0x47(%rsi)
  e2:	41 5f                	pop    %r15
  e4:	4d                   	rex.WRB
  e5:	45                   	rex.RB
  e6:	4d                   	rex.WRB
  e7:	4f 52                	rex.WRXB push %r10
  e9:	59                   	pop    %rcx
  ea:	00 76 67             	add    %dh,0x67(%rsi)
  ed:	61                   	(bad)
  ee:	5f                   	pop    %rdi
  ef:	63 6f 6c             	movsxd 0x6c(%rdi),%ebp
  f2:	6f                   	outsl  %ds:(%rsi),(%dx)
  f3:	72 00                	jb     f5 <data_segment+0xe5>
  f5:	64 61                	fs (bad)
  f7:	74 61                	je     15a <data_segment+0x14a>
  f9:	00 74 65 72          	add    %dh,0x72(%rbp,%riz,2)
  fd:	6d                   	insl   (%dx),%es:(%rdi)
  fe:	69 6e 61 6c 5f 63 6f 	imul   $0x6f635f6c,0x61(%rsi),%ebp
 105:	6c                   	insb   (%dx),%es:(%rdi)
 106:	75 6d                	jne    175 <data_segment+0x165>
 108:	6e                   	outsb  %ds:(%rsi),(%dx)
 109:	00 66 6f             	add    %ah,0x6f(%rsi)
 10c:	72 65                	jb     173 <data_segment+0x163>
 10e:	67 72 6f             	addr32 jb 180 <data_segment+0x170>
 111:	75 6e                	jne    181 <data_segment+0x171>
 113:	64 00 73 74          	add    %dh,%fs:0x74(%rbx)
 117:	72 6c                	jb     185 <data_segment+0x175>
 119:	65 6e                	outsb  %gs:(%rsi),(%dx)
 11b:	00 56 47             	add    %dl,0x47(%rsi)
 11e:	41 5f                	pop    %r15
 120:	43                   	rex.XB
 121:	4f                   	rex.WRXB
 122:	4c                   	rex.WR
 123:	4f 52                	rex.WRXB push %r10
 125:	5f                   	pop    %rdi
 126:	4c                   	rex.WR
 127:	49                   	rex.WB
 128:	47                   	rex.RXB
 129:	48 54                	rex.W push %rsp
 12b:	5f                   	pop    %rdi
 12c:	47 52                	rex.RXB push %r10
 12e:	45 59                	rex.RB pop %r9
 130:	00 76 67             	add    %dh,0x67(%rsi)
 133:	61                   	(bad)
 134:	5f                   	pop    %rdi
 135:	65 6e                	outsb  %gs:(%rsi),(%dx)
 137:	74 72                	je     1ab <data_segment+0x19b>
 139:	79 00                	jns    13b <data_segment+0x12b>
 13b:	74 65                	je     1a2 <data_segment+0x192>
 13d:	72 6d                	jb     1ac <data_segment+0x19c>
 13f:	69 6e 61 6c 5f 64 65 	imul   $0x65645f6c,0x61(%rsi),%ebp
 146:	6c                   	insb   (%dx),%es:(%rdi)
 147:	65 74 65             	gs je  1af <data_segment+0x19f>
 14a:	5f                   	pop    %rdi
 14b:	6c                   	insb   (%dx),%es:(%rdi)
 14c:	61                   	(bad)
 14d:	73 74                	jae    1c3 <data_segment+0x1b3>
 14f:	5f                   	pop    %rdi
 150:	6c                   	insb   (%dx),%es:(%rdi)
 151:	69 6e 65 00 75 6e 73 	imul   $0x736e7500,0x65(%rsi),%ebp
 158:	69 67 6e 65 64 20 63 	imul   $0x63206465,0x6e(%rdi),%esp
 15f:	68 61 72 00 76       	push   $0x76007261
 164:	67 61                	addr32 (bad)
 166:	5f                   	pop    %rdi
 167:	65 6e                	outsb  %gs:(%rsi),(%dx)
 169:	74 72                	je     1dd <data_segment+0x1cd>
 16b:	79 5f                	jns    1cc <data_segment+0x1bc>
 16d:	63 6f 6c             	movsxd 0x6c(%rdi),%ebp
 170:	6f                   	outsl  %ds:(%rsi),(%dx)
 171:	72 00                	jb     173 <data_segment+0x163>
 173:	6c                   	insb   (%dx),%es:(%rdi)
 174:	6f                   	outsl  %ds:(%rsi),(%dx)
 175:	6e                   	outsb  %ds:(%rsi),(%dx)
 176:	67 20 75 6e          	and    %dh,0x6e(%ebp)
 17a:	73 69                	jae    1e5 <data_segment+0x1d5>
 17c:	67 6e                	outsb  %ds:(%esi),(%dx)
 17e:	65 64 20 69 6e       	gs and %ch,%fs:0x6e(%rcx)
 183:	74 00                	je     185 <data_segment+0x175>
 185:	73 68                	jae    1ef <data_segment+0x1df>
 187:	6f                   	outsl  %ds:(%rsi),(%dx)
 188:	72 74                	jb     1fe <data_segment+0x1ee>
 18a:	20 75 6e             	and    %dh,0x6e(%rbp)
 18d:	73 69                	jae    1f8 <data_segment+0x1e8>
 18f:	67 6e                	outsb  %ds:(%esi),(%dx)
 191:	65 64 20 69 6e       	gs and %ch,%fs:0x6e(%rcx)
 196:	74 00                	je     198 <data_segment+0x188>
 198:	56                   	push   %rsi
 199:	47                   	rex.RXB
 19a:	41 5f                	pop    %r15
 19c:	43                   	rex.XB
 19d:	4f                   	rex.WRXB
 19e:	4c                   	rex.WR
 19f:	4f 52                	rex.WRXB push %r10
 1a1:	5f                   	pop    %rdi
 1a2:	52                   	push   %rdx
 1a3:	45                   	rex.RB
 1a4:	44 00 62 61          	add    %r12b,0x61(%rdx)
 1a8:	63 6b 67             	movsxd 0x67(%rbx),%ebp
 1ab:	72 6f                	jb     21c <data_segment+0x20c>
 1ad:	75 6e                	jne    21d <data_segment+0x20d>
 1af:	64 00 56 47          	add    %dl,%fs:0x47(%rsi)
 1b3:	41 5f                	pop    %r15
 1b5:	43                   	rex.XB
 1b6:	4f                   	rex.WRXB
 1b7:	4c                   	rex.WR
 1b8:	4f 52                	rex.WRXB push %r10
 1ba:	5f                   	pop    %rdi
 1bb:	4c                   	rex.WR
 1bc:	49                   	rex.WB
 1bd:	47                   	rex.RXB
 1be:	48 54                	rex.W push %rsp
 1c0:	5f                   	pop    %rdi
 1c1:	42                   	rex.X
 1c2:	4c 55                	rex.WR push %rbp
 1c4:	45 00 74 65 72       	add    %r14b,0x72(%r13,%riz,2)
 1c9:	6d                   	insl   (%dx),%es:(%rdi)
 1ca:	69 6e 61 6c 5f 63 6f 	imul   $0x6f635f6c,0x61(%rsi),%ebp
 1d1:	6c                   	insb   (%dx),%es:(%rdi)
 1d2:	6f                   	outsl  %ds:(%rsi),(%dx)
 1d3:	72 00                	jb     1d5 <data_segment+0x1c5>
 1d5:	74 65                	je     23c <data_segment+0x22c>
 1d7:	72 6d                	jb     246 <data_segment+0x236>
 1d9:	69 6e 61 6c 5f 77 72 	imul   $0x72775f6c,0x61(%rsi),%ebp
 1e0:	69 74 65 00 56 47 41 	imul   $0x5f414756,0x0(%rbp,%riz,2),%esi
 1e7:	5f 
 1e8:	43                   	rex.XB
 1e9:	4f                   	rex.WRXB
 1ea:	4c                   	rex.WR
 1eb:	4f 52                	rex.WRXB push %r10
 1ed:	5f                   	pop    %rdi
 1ee:	42                   	rex.X
 1ef:	4c 55                	rex.WR push %rbp
 1f1:	45 00 56 47          	add    %r10b,0x47(%r14)
 1f5:	41 5f                	pop    %r15
 1f7:	43                   	rex.XB
 1f8:	4f                   	rex.WRXB
 1f9:	4c                   	rex.WR
 1fa:	4f 52                	rex.WRXB push %r10
 1fc:	5f                   	pop    %rdi
 1fd:	4c                   	rex.WR
 1fe:	49                   	rex.WB
 1ff:	47                   	rex.RXB
 200:	48 54                	rex.W push %rsp
 202:	5f                   	pop    %rdi
 203:	52                   	push   %rdx
 204:	45                   	rex.RB
 205:	44 00 56 47          	add    %r10b,0x47(%rsi)
 209:	41 5f                	pop    %r15
 20b:	43                   	rex.XB
 20c:	4f                   	rex.WRXB
 20d:	4c                   	rex.WR
 20e:	4f 52                	rex.WRXB push %r10
 210:	5f                   	pop    %rdi
 211:	44                   	rex.R
 212:	41 52                	push   %r10
 214:	4b 5f                	rex.WXB pop %r15
 216:	47 52                	rex.RXB push %r10
 218:	45 59                	rex.RB pop %r9
 21a:	00 56 47             	add    %dl,0x47(%rsi)
 21d:	41 5f                	pop    %r15
 21f:	48                   	rex.W
 220:	45                   	rex.RB
 221:	49                   	rex.WB
 222:	47                   	rex.RXB
 223:	48 54                	rex.W push %rsp
 225:	00 73 69             	add    %dh,0x69(%rbx)
 228:	7a 65                	jp     28f <data_segment+0x27f>
 22a:	00 75 69             	add    %dh,0x69(%rbp)
 22d:	6e                   	outsb  %ds:(%rsi),(%dx)
 22e:	74 38                	je     268 <data_segment+0x258>
 230:	5f                   	pop    %rdi
 231:	74 00                	je     233 <data_segment+0x223>
 233:	56                   	push   %rsi
 234:	47                   	rex.RXB
 235:	41 5f                	pop    %r15
 237:	43                   	rex.XB
 238:	4f                   	rex.WRXB
 239:	4c                   	rex.WR
 23a:	4f 52                	rex.WRXB push %r10
 23c:	5f                   	pop    %rdi
 23d:	42 52                	rex.X push %rdx
 23f:	4f 57                	rex.WRXB push %r15
 241:	4e 00 56 47          	rex.WRX add %r10b,0x47(%rsi)
 245:	41 5f                	pop    %r15
 247:	43                   	rex.XB
 248:	4f                   	rex.WRXB
 249:	4c                   	rex.WR
 24a:	4f 52                	rex.WRXB push %r10
 24c:	5f                   	pop    %rdi
 24d:	4c                   	rex.WR
 24e:	49                   	rex.WB
 24f:	47                   	rex.RXB
 250:	48 54                	rex.W push %rsp
 252:	5f                   	pop    %rdi
 253:	43 59                	rex.XB pop %r9
 255:	41                   	rex.B
 256:	4e 00 56 47          	rex.WRX add %r10b,0x47(%rsi)
 25a:	41 5f                	pop    %r15
 25c:	43                   	rex.XB
 25d:	4f                   	rex.WRXB
 25e:	4c                   	rex.WR
 25f:	4f 52                	rex.WRXB push %r10
 261:	5f                   	pop    %rdi
 262:	4c                   	rex.WR
 263:	49                   	rex.WB
 264:	47                   	rex.RXB
 265:	48 54                	rex.W push %rsp
 267:	5f                   	pop    %rdi
 268:	4d                   	rex.WRB
 269:	41                   	rex.B
 26a:	47                   	rex.RXB
 26b:	45                   	rex.RB
 26c:	4e 54                	rex.WRX push %rsp
 26e:	41 00 56 47          	add    %dl,0x47(%r14)
 272:	41 5f                	pop    %r15
 274:	43                   	rex.XB
 275:	4f                   	rex.WRXB
 276:	4c                   	rex.WR
 277:	4f 52                	rex.WRXB push %r10
 279:	5f                   	pop    %rdi
 27a:	57                   	push   %rdi
 27b:	48                   	rex.W
 27c:	49 54                	rex.WB push %r12
 27e:	45 00 74 65 72       	add    %r14b,0x72(%r13,%riz,2)
 283:	6d                   	insl   (%dx),%es:(%rdi)
 284:	69 6e 61 6c 5f 69 6e 	imul   $0x6e695f6c,0x61(%rsi),%ebp
 28b:	69 74 69 61 6c 69 7a 	imul   $0x657a696c,0x61(%rcx,%rbp,2),%esi
 292:	65 
 293:	00 56 47             	add    %dl,0x47(%rsi)
 296:	41 5f                	pop    %r15
 298:	43                   	rex.XB
 299:	4f                   	rex.WRXB
 29a:	4c                   	rex.WR
 29b:	4f 52                	rex.WRXB push %r10
 29d:	5f                   	pop    %rdi
 29e:	43 59                	rex.XB pop %r9
 2a0:	41                   	rex.B
 2a1:	4e 00 6c 6f 6e       	rex.WRX add %r13b,0x6e(%rdi,%r13,2)
 2a6:	67 20 6c 6f 6e       	and    %ch,0x6e(%edi,%ebp,2)
 2ab:	67 20 69 6e          	and    %ch,0x6e(%ecx)
 2af:	74 00                	je     2b1 <data_segment+0x2a1>
 2b1:	47                   	rex.RXB
 2b2:	4e 55                	rex.WRX push %rbp
 2b4:	20 43 31             	and    %al,0x31(%rbx)
 2b7:	31 20                	xor    %esp,(%rax)
 2b9:	31 34 2e             	xor    %esi,(%rsi,%rbp,1)
 2bc:	32 2e                	xor    (%rsi),%ch
 2be:	30 20                	xor    %ah,(%rax)
 2c0:	2d 6d 63 6d 6f       	sub    $0x6f6d636d,%eax
 2c5:	64 65 6c             	fs gs insb (%dx),%es:(%rdi)
 2c8:	3d 6c 61 72 67       	cmp    $0x6772616c,%eax
 2cd:	65 20 2d 6d 74 75 6e 	and    %ch,%gs:0x6e75746d(%rip)        # 6e757741 <MAGIC+0x52c7c73f>
 2d4:	65 3d 67 65 6e 65    	gs cmp $0x656e6567,%eax
 2da:	72 69                	jb     345 <data_segment+0x335>
 2dc:	63 20                	movsxd (%rax),%esp
 2de:	2d 6d 61 72 63       	sub    $0x6372616d,%eax
 2e3:	68 3d 78 38 36       	push   $0x3638783d
 2e8:	2d 36 34 20 2d       	sub    $0x2d203436,%eax
 2ed:	67 20 2d 4f 32 20 2d 	and    %ch,0x2d20324f(%eip)        # 2d203543 <MAGIC+0x11728541>
 2f4:	73 74                	jae    36a <data_segment+0x35a>
 2f6:	64 3d 67 6e 75 31    	fs cmp $0x31756e67,%eax
 2fc:	31 20                	xor    %esp,(%rax)
 2fe:	2d 66 66 72 65       	sub    $0x65726666,%eax
 303:	65 73 74             	gs jae 37a <data_segment+0x36a>
 306:	61                   	(bad)
 307:	6e                   	outsb  %ds:(%rsi),(%dx)
 308:	64 69 6e 67 20 2d 66 	imul   $0x50662d20,%fs:0x67(%rsi),%ebp
 30f:	50 
 310:	49                   	rex.WB
 311:	43 00 56 47          	rex.XB add %dl,0x47(%r14)
 315:	41 5f                	pop    %r15
 317:	57                   	push   %rdi
 318:	49                   	rex.WB
 319:	44 54                	rex.R push %rsp
 31b:	48 00 73 68          	rex.W add %sil,0x68(%rbx)
 31f:	6f                   	outsl  %ds:(%rsi),(%dx)
 320:	72 74                	jb     396 <data_segment+0x386>
 322:	20 69 6e             	and    %ch,0x6e(%rcx)
 325:	74 00                	je     327 <data_segment+0x317>
 327:	75 69                	jne    392 <data_segment+0x382>
 329:	6e                   	outsb  %ds:(%rsi),(%dx)
 32a:	74 31                	je     35d <data_segment+0x34d>
 32c:	36 5f                	ss pop %rdi
 32e:	74 00                	je     330 <data_segment+0x320>
 330:	74 65                	je     397 <data_segment+0x387>
 332:	72 6d                	jb     3a1 <data_segment+0x391>
 334:	69 6e 61 6c 5f 73 63 	imul   $0x63735f6c,0x61(%rsi),%ebp
 33b:	72 6f                	jb     3ac <data_segment+0x39c>
 33d:	6c                   	insb   (%dx),%es:(%rdi)
 33e:	6c                   	insb   (%dx),%es:(%rdi)
 33f:	00 56 47             	add    %dl,0x47(%rsi)
 342:	41 5f                	pop    %r15
 344:	43                   	rex.XB
 345:	4f                   	rex.WRXB
 346:	4c                   	rex.WR
 347:	4f 52                	rex.WRXB push %r10
 349:	5f                   	pop    %rdi
 34a:	4c                   	rex.WR
 34b:	49                   	rex.WB
 34c:	47                   	rex.RXB
 34d:	48 54                	rex.W push %rsp
 34f:	5f                   	pop    %rdi
 350:	42 52                	rex.X push %rdx
 352:	4f 57                	rex.WRXB push %r15
 354:	4e 00 74 65 72       	rex.WRX add %r14b,0x72(%rbp,%r12,2)
 359:	6d                   	insl   (%dx),%es:(%rdi)
 35a:	69 6e 61 6c 5f 73 65 	imul   $0x65735f6c,0x61(%rsi),%ebp
 361:	74 63                	je     3c6 <data_segment+0x3b6>
 363:	6f                   	outsl  %ds:(%rsi),(%dx)
 364:	6c                   	insb   (%dx),%es:(%rdi)
 365:	6f                   	outsl  %ds:(%rsi),(%dx)
 366:	72 00                	jb     368 <data_segment+0x358>
 368:	74 65                	je     3cf <data_segment+0x3bf>
 36a:	72 6d                	jb     3d9 <data_segment+0x3c9>
 36c:	69 6e 61 6c 5f 72 6f 	imul   $0x6f725f6c,0x61(%rsi),%ebp
 373:	77 00                	ja     375 <data_segment+0x365>
 375:	6c                   	insb   (%dx),%es:(%rdi)
 376:	6f                   	outsl  %ds:(%rsi),(%dx)
 377:	6e                   	outsb  %ds:(%rsi),(%dx)
 378:	67 20 64 6f 75       	and    %ah,0x75(%edi,%ebp,2)
 37d:	62                   	(bad)
 37e:	6c                   	insb   (%dx),%es:(%rdi)
 37f:	65 00 56 47          	add    %dl,%gs:0x47(%rsi)
 383:	41 5f                	pop    %r15
 385:	43                   	rex.XB
 386:	4f                   	rex.WRXB
 387:	4c                   	rex.WR
 388:	4f 52                	rex.WRXB push %r10
 38a:	5f                   	pop    %rdi
 38b:	47 52                	rex.RXB push %r10
 38d:	45                   	rex.RB
 38e:	45                   	rex.RB
 38f:	4e 00 74 65 72       	rex.WRX add %r14b,0x72(%rbp,%r12,2)
 394:	6d                   	insl   (%dx),%es:(%rdi)
 395:	69 6e 61 6c 5f 70 75 	imul   $0x75705f6c,0x61(%rsi),%ebp
 39c:	74 65                	je     403 <data_segment+0x3f3>
 39e:	6e                   	outsb  %ds:(%rsi),(%dx)
 39f:	74 72                	je     413 <data_segment+0x403>
 3a1:	79 61                	jns    404 <data_segment+0x3f4>
 3a3:	74 00                	je     3a5 <data_segment+0x395>
 3a5:	69 6e 64 65 78 00 56 	imul   $0x56007865,0x64(%rsi),%ebp
 3ac:	47                   	rex.RXB
 3ad:	41 5f                	pop    %r15
 3af:	43                   	rex.XB
 3b0:	4f                   	rex.WRXB
 3b1:	4c                   	rex.WR
 3b2:	4f 52                	rex.WRXB push %r10
 3b4:	5f                   	pop    %rdi
 3b5:	42                   	rex.X
 3b6:	4c                   	rex.WR
 3b7:	41                   	rex.B
 3b8:	43                   	rex.XB
 3b9:	4b 00 63 68          	rex.WXB add %spl,0x68(%r11)
 3bd:	61                   	(bad)
 3be:	72 61                	jb     421 <data_segment+0x411>
 3c0:	63 74 65 72          	movsxd 0x72(%rbp,%riz,2),%esi
 3c4:	5f                   	pop    %rdi
 3c5:	63 6f 6c             	movsxd 0x6c(%rdi),%ebp
 3c8:	6f                   	outsl  %ds:(%rsi),(%dx)
 3c9:	72 00                	jb     3cb <data_segment+0x3bb>
 3cb:	61                   	(bad)
 3cc:	72 63                	jb     431 <data_segment+0x421>
 3ce:	68 2f 78 38 36       	push   $0x3638782f
 3d3:	5f                   	pop    %rdi
 3d4:	36 34 2f             	ss xor $0x2f,%al
 3d7:	62                   	(bad)
 3d8:	6f                   	outsl  %ds:(%rsi),(%dx)
 3d9:	6f                   	outsl  %ds:(%rsi),(%dx)
 3da:	74 36                	je     412 <data_segment+0x402>
 3dc:	34 2e                	xor    $0x2e,%al
 3de:	53                   	push   %rbx
 3df:	00 6b 65             	add    %ch,0x65(%rbx)
 3e2:	72 6e                	jb     452 <data_segment+0x442>
 3e4:	65 6c                	gs insb (%dx),%es:(%rdi)
 3e6:	5f                   	pop    %rdi
 3e7:	6d                   	insl   (%dx),%es:(%rdi)
 3e8:	61                   	(bad)
 3e9:	69 6e 00 70 72 69 6e 	imul   $0x6e697270,0x0(%rsi),%ebp
 3f0:	74 66                	je     458 <data_segment+0x448>
 3f2:	00 6d 61             	add    %ch,0x61(%rbp)
 3f5:	78 72                	js     469 <data_segment+0x459>
 3f7:	65 6d                	gs insl (%dx),%es:(%rdi)
 3f9:	00 5f 5f             	add    %bl,0x5f(%rdi)
 3fc:	62 75                	(bad)
 3fe:	69 6c 74 69 6e 5f 76 	imul   $0x61765f6e,0x69(%rsp,%rsi,2),%ebp
 405:	61 
 406:	5f                   	pop    %rdi
 407:	6c                   	insb   (%dx),%es:(%rdi)
 408:	69 73 74 00 62 79 74 	imul   $0x74796200,0x74(%rbx),%esi
 40f:	65 73 00             	gs jae 412 <data_segment+0x402>
 412:	66 6f                	outsw  %ds:(%rsi),(%dx)
 414:	72 6d                	jb     483 <data_segment+0x473>
 416:	61                   	(bad)
 417:	74 00                	je     419 <data_segment+0x409>
 419:	6c                   	insb   (%dx),%es:(%rdi)
 41a:	65 6e                	outsb  %gs:(%rsi),(%dx)
 41c:	67 74 68             	addr32 je 487 <data_segment+0x477>
 41f:	00 70 72             	add    %dh,0x72(%rax)
 422:	69 6e 74 00 66 6f 72 	imul   $0x726f6600,0x74(%rsi),%ebp
 429:	6d                   	insl   (%dx),%es:(%rdi)
 42a:	61                   	(bad)
 42b:	74 5f                	je     48c <data_segment+0x47c>
 42d:	62 65 67 75 6e       	(bad)
 432:	5f                   	pop    %rdi
 433:	61                   	(bad)
 434:	74 00                	je     436 <data_segment+0x426>
 436:	72 65                	jb     49d <data_segment+0x48d>
 438:	67 5f                	addr32 pop %rdi
 43a:	73 61                	jae    49d <data_segment+0x48d>
 43c:	76 65                	jbe    4a3 <data_segment+0x493>
 43e:	5f                   	pop    %rdi
 43f:	61                   	(bad)
 440:	72 65                	jb     4a7 <data_segment+0x497>
 442:	61                   	(bad)
 443:	00 77 72             	add    %dh,0x72(%rdi)
 446:	69 74 74 65 6e 00 47 	imul   $0x4e47006e,0x65(%rsp,%rsi,2),%esi
 44d:	4e 
 44e:	55                   	push   %rbp
 44f:	20 43 31             	and    %al,0x31(%rbx)
 452:	31 20                	xor    %esp,(%rax)
 454:	31 34 2e             	xor    %esi,(%rsi,%rbp,1)
 457:	32 2e                	xor    (%rsi),%ch
 459:	30 20                	xor    %ah,(%rax)
 45b:	2d 6d 74 75 6e       	sub    $0x6e75746d,%eax
 460:	65 3d 67 65 6e 65    	gs cmp $0x656e6567,%eax
 466:	72 69                	jb     4d1 <data_segment+0x4c1>
 468:	63 20                	movsxd (%rax),%esp
 46a:	2d 6d 61 72 63       	sub    $0x6372616d,%eax
 46f:	68 3d 78 38 36       	push   $0x3638783d
 474:	2d 36 34 20 2d       	sub    $0x2d203436,%eax
 479:	67 20 2d 4f 32 20 2d 	and    %ch,0x2d20324f(%eip)        # 2d2036cf <MAGIC+0x117286cd>
 480:	73 74                	jae    4f6 <data_segment+0x4e6>
 482:	64 3d 67 6e 75 31    	fs cmp $0x31756e67,%eax
 488:	31 20                	xor    %esp,(%rax)
 48a:	2d 66 66 72 65       	sub    $0x65726666,%eax
 48f:	65 73 74             	gs jae 506 <data_segment+0x4f6>
 492:	61                   	(bad)
 493:	6e                   	outsb  %ds:(%rsi),(%dx)
 494:	64 69 6e 67 00 66 70 	imul   $0x5f706600,%fs:0x67(%rsi),%ebp
 49b:	5f 
 49c:	6f                   	outsl  %ds:(%rsi),(%dx)
 49d:	66 66 73 65          	data16 data16 jae 506 <data_segment+0x4f6>
 4a1:	74 00                	je     4a3 <data_segment+0x493>
 4a3:	6f                   	outsl  %ds:(%rsi),(%dx)
 4a4:	76 65                	jbe    50b <data_segment+0x4fb>
 4a6:	72 66                	jb     50e <data_segment+0x4fe>
 4a8:	6c                   	insb   (%dx),%es:(%rdi)
 4a9:	6f                   	outsl  %ds:(%rsi),(%dx)
 4aa:	77 5f                	ja     50b <data_segment+0x4fb>
 4ac:	61                   	(bad)
 4ad:	72 67                	jb     516 <data_segment+0x506>
 4af:	5f                   	pop    %rdi
 4b0:	61                   	(bad)
 4b1:	72 65                	jb     518 <data_segment+0x508>
 4b3:	61                   	(bad)
 4b4:	00 5f 5f             	add    %bl,0x5f(%rdi)
 4b7:	76 61                	jbe    51a <data_segment+0x50a>
 4b9:	5f                   	pop    %rdi
 4ba:	6c                   	insb   (%dx),%es:(%rdi)
 4bb:	69 73 74 5f 74 61 67 	imul   $0x6761745f,0x74(%rbx),%esi
 4c2:	00 5f 42             	add    %bl,0x42(%rdi)
 4c5:	6f                   	outsl  %ds:(%rsi),(%dx)
 4c6:	6f                   	outsl  %ds:(%rsi),(%dx)
 4c7:	6c                   	insb   (%dx),%es:(%rdi)
 4c8:	00 70 61             	add    %dh,0x61(%rax)
 4cb:	72 61                	jb     52e <data_segment+0x51e>
 4cd:	6d                   	insl   (%dx),%es:(%rdi)
 4ce:	65 74 65             	gs je  536 <data_segment+0x526>
 4d1:	72 73                	jb     546 <data_segment+0x536>
 4d3:	00 5f 5f             	add    %bl,0x5f(%rdi)
 4d6:	67 6e                	outsb  %ds:(%esi),(%dx)
 4d8:	75 63                	jne    53d <data_segment+0x52d>
 4da:	5f                   	pop    %rdi
 4db:	76 61                	jbe    53e <data_segment+0x52e>
 4dd:	5f                   	pop    %rdi
 4de:	6c                   	insb   (%dx),%es:(%rdi)
 4df:	69 73 74 00 61 6d 6f 	imul   $0x6f6d6100,0x74(%rbx),%esi
 4e6:	75 6e                	jne    556 <data_segment+0x546>
 4e8:	74 00                	je     4ea <data_segment+0x4da>
 4ea:	67 70 5f             	addr32 jo 54c <data_segment+0x53c>
 4ed:	6f                   	outsl  %ds:(%rsi),(%dx)
 4ee:	66 66 73 65          	data16 data16 jae 557 <data_segment+0x547>
 4f2:	74 00                	je     4f4 <data_segment+0x4e4>
 4f4:	61                   	(bad)
 4f5:	72 63                	jb     55a <data_segment+0x54a>
 4f7:	68 2f 78 38 36       	push   $0x3638782f
 4fc:	5f                   	pop    %rdi
 4fd:	36 34 2f             	ss xor $0x2f,%al
 500:	63 72 74             	movsxd 0x74(%rdx),%esi
 503:	6e                   	outsb  %ds:(%rsi),(%dx)
 504:	2e 53                	cs push %rbx
	...

Disassembly of section .debug_rnglists:

0000000000000000 <.debug_rnglists>:
   0:	1d 00 00 00 05       	sbb    $0x5000000,%eax
   5:	00 08                	add    %cl,(%rax)
   7:	00 00                	add    %al,(%rax)
   9:	00 00                	add    %al,(%rax)
   b:	00 07                	add    %al,(%rdi)
   d:	c1 08 10             	rorl   $0x10,(%rax)
  10:	00 00                	add    %al,(%rax)
  12:	00 00                	add    %al,(%rax)
  14:	00 03                	add    %al,(%rbx)
  16:	07                   	(bad)
  17:	d0 08                	rorb   (%rax)
  19:	10 00                	adc    %al,(%rax)
  1b:	00 00                	add    %al,(%rax)
  1d:	00 00                	add    %al,(%rax)
  1f:	03 00                	add    (%rax),%eax
  21:	30 00                	xor    %al,(%rax)
  23:	00 00                	add    %al,(%rax)
  25:	05 00 08 00 00       	add    $0x800,%eax
  2a:	00 00                	add    %al,(%rax)
  2c:	00 04 40             	add    %al,(%rax,%rax,2)
  2f:	40 04 44             	rex add $0x44,%al
  32:	4b 04 4f             	rex.WXB add $0x4f,%al
  35:	51                   	push   %rcx
  36:	04 54                	add    $0x54,%al
  38:	58                   	pop    %rax
  39:	00 04 ee             	add    %al,(%rsi,%rbp,8)
  3c:	01 80 02 04 80 02    	add    %eax,0x2800402(%rax)
  42:	80 02 04             	addb   $0x4,(%rdx)
  45:	83 02 83             	addl   $0xffffff83,(%rdx)
  48:	02 00                	add    (%rax),%al
  4a:	04 9c                	add    $0x9c,%al
  4c:	04 9c                	add    $0x9c,%al
  4e:	04 04                	add    $0x4,%al
  50:	9f                   	lahf
  51:	04 cf                	add    $0xcf,%al
  53:	04 00                	add    $0x0,%al
  55:	6f                   	outsl  %ds:(%rsi),(%dx)
  56:	00 00                	add    %al,(%rax)
  58:	00 05 00 08 00 00    	add    %al,0x800(%rip)        # 85e <data_segment+0x84e>
  5e:	00 00                	add    %al,(%rax)
  60:	00 04 50             	add    %al,(%rax,%rdx,2)
  63:	c1 01 04             	roll   $0x4,(%rcx)
  66:	d8 01                	fadds  (%rcx)
  68:	c0 02 04             	rolb   $0x4,(%rdx)
  6b:	c3                   	ret
  6c:	02 c9                	add    %cl,%cl
  6e:	02 04 e0             	add    (%rax,%riz,8),%al
  71:	02 e0                	add    %al,%ah
  73:	02 04 e3             	add    (%rbx,%riz,8),%al
  76:	02 a8 03 04 ad 03    	add    0x3ad0403(%rax),%ch
  7c:	b0 04                	mov    $0x4,%al
  7e:	04 b5                	add    $0xb5,%al
  80:	04 91                	add    $0x91,%al
  82:	05 00 04 78 bb       	add    $0xbb780400,%eax
  87:	01 04 e0             	add    %eax,(%rax,%riz,8)
  8a:	02 e0                	add    %al,%ah
  8c:	02 04 e3             	add    (%rbx,%riz,8),%al
  8f:	02 f0                	add    %al,%dh
  91:	02 00                	add    (%rax),%al
  93:	04 bb                	add    $0xbb,%al
  95:	01 c1                	add    %eax,%ecx
  97:	01 04 d8             	add    %eax,(%rax,%rbx,8)
  9a:	01 c0                	add    %eax,%eax
  9c:	02 04 c3             	add    (%rbx,%rax,8),%al
  9f:	02 c9                	add    %cl,%cl
  a1:	02 04 e0             	add    (%rax,%riz,8),%al
  a4:	04 80                	add    $0x80,%al
  a6:	05 00 04 f0 02       	add    $0x2f00400,%eax
  ab:	a8 03                	test   $0x3,%al
  ad:	04 ad                	add    $0xad,%al
  af:	03 b4 03 04 c8 04 e0 	add    -0x1ffb37fc(%rbx,%rax,1),%esi
  b6:	04 00                	add    $0x0,%al
  b8:	04 c0                	add    $0xc0,%al
  ba:	03 b0 04 04 b5 04    	add    0x4b50404(%rax),%esi
  c0:	bf 04 04 80 05       	mov    $0x5800404,%edi
  c5:	91                   	xchg   %eax,%ecx
  c6:	05 00 1d 00 00       	add    $0x1d00,%eax
  cb:	00 05 00 08 00 00    	add    %al,0x800(%rip)        # 8d1 <data_segment+0x8c1>
  d1:	00 00                	add    %al,(%rax)
  d3:	00 07                	add    %al,(%rdi)
  d5:	ce                   	(bad)
  d6:	08 10                	or     %dl,(%rax)
  d8:	00 00                	add    %al,(%rax)
  da:	00 00                	add    %al,(%rax)
  dc:	00 02                	add    %al,(%rdx)
  de:	07                   	(bad)
  df:	d8 08                	fmuls  (%rax)
  e1:	10 00                	adc    %al,(%rax)
  e3:	00 00                	add    %al,(%rax)
  e5:	00 00                	add    %al,(%rax)
  e7:	02 00                	add    (%rax),%al

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 47 4e             	sub    %al,0x4e(%rdi)
   8:	55                   	push   %rbp
   9:	29 20                	sub    %esp,(%rax)
   b:	31 34 2e             	xor    %esi,(%rsi,%rbp,1)
   e:	32 2e                	xor    (%rsi),%ch
  10:	30 00                	xor    %al,(%rax)

Disassembly of section .debug_loclists:

0000000000000000 <.debug_loclists>:
   0:	22 02                	and    (%rdx),%al
   2:	00 00                	add    %al,(%rax)
   4:	05 00 08 00 00       	add    $0x800,%eax
	...
  11:	00 00                	add    %al,(%rax)
  13:	00 04 e0             	add    %al,(%rax,%riz,8)
  16:	04 8c                	add    $0x8c,%al
  18:	05 01 55 04 8c       	add    $0x8c045501,%eax
  1d:	05 91 05 01 53       	add    $0x53010591,%eax
  22:	04 91                	add    $0x91,%al
  24:	05 a5 05 01 55       	add    $0x550105a5,%eax
  29:	04 a5                	add    $0xa5,%al
  2b:	05 a6 05 04 a3       	add    $0xa30405a6,%eax
  30:	01 55 9f             	add    %edx,-0x61(%rbp)
  33:	00 00                	add    %al,(%rax)
  35:	00 00                	add    %al,(%rax)
  37:	00 04 80             	add    %al,(%rax,%rax,4)
  3a:	04 b8                	add    $0xb8,%al
  3c:	04 01                	add    $0x1,%al
  3e:	55                   	push   %rbp
  3f:	04 b8                	add    $0xb8,%al
  41:	04 d8                	add    $0xd8,%al
  43:	04 04                	add    $0x4,%al
  45:	a3 01 55 9f 00 00 00 	movabs %eax,0x9f5501
  4c:	00 00 
  4e:	04 80                	add    $0x80,%al
  50:	04 b8                	add    $0xb8,%al
  52:	04 01                	add    $0x1,%al
  54:	54                   	push   %rsp
  55:	04 b8                	add    $0xb8,%al
  57:	04 d8                	add    $0xd8,%al
  59:	04 04                	add    $0x4,%al
  5b:	a3 01 54 9f 00 02 00 	movabs %eax,0x2009f5401
  62:	00 00 
  64:	00 01                	add    %al,(%rcx)
  66:	04 9c                	add    $0x9c,%al
  68:	04 b8                	add    $0xb8,%al
  6a:	04 02                	add    $0x2,%al
  6c:	30 9f 04 b8 04 c7    	xor    %bl,-0x38fb47fc(%rdi)
  72:	04 07                	add    $0x7,%al
  74:	73 00                	jae    76 <data_segment+0x66>
  76:	a3 01 55 1c 9f 04 c7 	movabs %eax,0xca04c7049f1c5501
  7d:	04 ca 
  7f:	04 08                	add    $0x8,%al
  81:	a3 01 55 20 73 00 22 	movabs %eax,0x9f220073205501
  88:	9f 00 
  8a:	04 00                	add    $0x0,%al
  8c:	00 01                	add    %al,(%rcx)
  8e:	01 02                	add    %eax,(%rdx)
  90:	02 00                	add    (%rax),%al
  92:	00 01                	add    %al,(%rcx)
  94:	01 00                	add    %eax,(%rax)
  96:	04 d0                	add    $0xd0,%al
  98:	01 fd                	add    %edi,%ebp
  9a:	01 02                	add    %eax,(%rdx)
  9c:	30 9f 04 80 02 83    	xor    %bl,-0x7cfd7ffc(%rdi)
  a2:	02 07                	add    (%rdi),%al
  a4:	70 80                	jo     26 <data_segment+0x16>
  a6:	e2 51                	loop   f9 <data_segment+0xe9>
  a8:	31 25 9f 04 83 02    	xor    %esp,0x283049f(%rip)        # 283054d <terminal_row+0x27294ed>
  ae:	83 02 09             	addl   $0x9,(%rdx)
  b1:	70 80                	jo     33 <data_segment+0x23>
  b3:	e2 51                	loop   106 <data_segment+0xf6>
  b5:	31 25 23 01 9f 04    	xor    %esp,0x49f0123(%rip)        # 49f01de <terminal_row+0x48e917e>
  bb:	83 02 87             	addl   $0xffffff87,(%rdx)
  be:	02 07                	add    (%rdi),%al
  c0:	70 82                	jo     44 <data_segment+0x34>
  c2:	e2 51                	loop   115 <data_segment+0x105>
  c4:	31 25 9f 04 87 02    	xor    %esp,0x287049f(%rip)        # 2870569 <terminal_row+0x2769509>
  ca:	8b 02                	mov    (%rdx),%eax
  cc:	07                   	(bad)
  cd:	70 fe                	jo     cd <data_segment+0xbd>
  cf:	e1 51                	loope  122 <data_segment+0x112>
  d1:	31 25 9f 04 8b 02    	xor    %esp,0x28b049f(%rip)        # 28b0576 <terminal_row+0x27a9516>
  d7:	94                   	xchg   %eax,%esp
  d8:	02 09                	add    (%rcx),%cl
  da:	70 fe                	jo     da <data_segment+0xca>
  dc:	e1 51                	loope  12f <data_segment+0x11f>
  de:	31 25 23 01 9f 00    	xor    %esp,0x9f0123(%rip)        # 9f0207 <terminal_row+0x8e91a7>
  e4:	02 04 03             	add    (%rbx,%rax,1),%al
  e7:	05 04 80 02 80       	add    $0x80028004,%eax
  ec:	02 03                	add    (%rbx),%al
  ee:	08 20                	or     %ah,(%rax)
  f0:	9f                   	lahf
  f1:	04 83                	add    $0x83,%al
  f3:	02 83 02 03 08 20    	add    0x20080302(%rbx),%al
  f9:	9f                   	lahf
  fa:	00 02                	add    %al,(%rdx)
  fc:	04 03                	add    $0x3,%al
  fe:	05 04 80 02 80       	add    $0x80028004,%eax
 103:	02 09                	add    (%rcx),%cl
 105:	03 50 70             	add    0x70(%rax),%edx
 108:	10 00                	adc    %al,(%rax)
 10a:	00 00                	add    %al,(%rax)
 10c:	00 00                	add    %al,(%rax)
 10e:	04 83                	add    $0x83,%al
 110:	02 83 02 09 03 50    	add    0x50030902(%rbx),%al
 116:	70 10                	jo     128 <data_segment+0x118>
 118:	00 00                	add    %al,(%rax)
 11a:	00 00                	add    %al,(%rax)
 11c:	00 00                	add    %al,(%rax)
 11e:	04 00                	add    $0x0,%al
 120:	00 01                	add    %al,(%rcx)
 122:	01 00                	add    %eax,(%rax)
 124:	04 60                	add    $0x60,%al
 126:	78 01                	js     129 <data_segment+0x119>
 128:	55                   	push   %rbp
 129:	04 78                	add    $0x78,%al
 12b:	b3 01                	mov    $0x1,%bl
 12d:	01 54 04 b3          	add    %edx,-0x4d(%rsp,%rax,1)
 131:	01 b7 01 03 74 01    	add    %esi,0x1740301(%rdi)
 137:	9f                   	lahf
 138:	00 00                	add    %al,(%rax)
 13a:	00 00                	add    %al,(%rax)
 13c:	00 00                	add    %al,(%rax)
 13e:	01 04 78             	add    %eax,(%rax,%rdi,2)
 141:	87 01                	xchg   %eax,(%rcx)
 143:	02 30                	add    (%rax),%dh
 145:	9f                   	lahf
 146:	04 a0                	add    $0xa0,%al
 148:	01 a7 01 15 70 00    	add    %esp,0x701501(%rdi)
 14e:	74 01                	je     151 <data_segment+0x141>
 150:	08 20                	or     %ah,(%rax)
 152:	24 08                	and    $0x8,%al
 154:	20 26                	and    %ah,(%rsi)
 156:	08 a0 1e 1c 47 3f    	or     %ah,0x3f471c1e(%rax)
 15c:	24 1c                	and    $0x1c,%al
 15e:	31 25 9f 04 a7 01    	xor    %esp,0x1a7049f(%rip)        # 1a70603 <terminal_row+0x19695a3>
 164:	ae                   	scas   %es:(%rdi),%al
 165:	01 17                	add    %edx,(%rdi)
 167:	70 00                	jo     169 <data_segment+0x159>
 169:	74 01                	je     16c <data_segment+0x15c>
 16b:	08 20                	or     %ah,(%rax)
 16d:	24 08                	and    $0x8,%al
 16f:	20 26                	and    %ah,(%rsi)
 171:	08 a0 1e 1c 0c 02    	or     %ah,0x20c1c1e(%rax)
 177:	80 0b 00             	orb    $0x0,(%rbx)
 17a:	1c 31                	sbb    $0x31,%al
 17c:	25 9f 00 00 00       	and    $0x9f,%eax
 181:	00 00                	add    %al,(%rax)
 183:	04 40                	add    $0x40,%al
 185:	47 01 54 04 47       	add    %r10d,0x47(%r12,%r8,1)
 18a:	59                   	pop    %rcx
 18b:	04 a3                	add    $0xa3,%al
 18d:	01 54 9f 00          	add    %edx,0x0(%rdi,%rbx,4)
 191:	02 00                	add    (%rax),%al
 193:	04 40                	add    $0x40,%al
 195:	59                   	pop    %rcx
 196:	09 72 00             	or     %esi,0x0(%rdx)
 199:	08 50 1e             	or     %dl,0x1e(%rax)
 19c:	71 00                	jno    19e <data_segment+0x18e>
 19e:	22 9f 00 03 05 04    	and    0x4050300(%rdi),%bl
 1a4:	40                   	rex
 1a5:	40 01 55 00          	rex add %edx,0x0(%rbp)
 1a9:	03 05 04 40 40 01    	add    0x1404004(%rip),%eax        # 14041b3 <terminal_row+0x12fd153>
 1af:	54                   	push   %rsp
 1b0:	00 00                	add    %al,(%rax)
 1b2:	00 00                	add    %al,(%rax)
 1b4:	00 04 10             	add    %al,(%rax,%rdx,1)
 1b7:	1a 01                	sbb    (%rcx),%al
 1b9:	54                   	push   %rsp
 1ba:	04 1a                	add    $0x1a,%al
 1bc:	38 04 a3             	cmp    %al,(%rbx,%riz,4)
 1bf:	01 54 9f 00          	add    %edx,0x0(%rdi,%rbx,4)
 1c3:	02 04 04             	add    (%rsp,%rax,1),%al
 1c6:	10 10                	adc    %dl,(%rax)
 1c8:	01 55 00             	add    %edx,0x0(%rbp)
 1cb:	02 04 04             	add    (%rsp,%rax,1),%al
 1ce:	10 10                	adc    %dl,(%rax)
 1d0:	01 54 00 00          	add    %edx,0x0(%rax,%rax,1)
 1d4:	00 00                	add    %al,(%rax)
 1d6:	00 04 a0             	add    %al,(%rax,%riz,4)
 1d9:	02 fc                	add    %ah,%bh
 1db:	02 01                	add    (%rcx),%al
 1dd:	55                   	push   %rbp
 1de:	04 fc                	add    $0xfc,%al
 1e0:	02 ff                	add    %bh,%bh
 1e2:	03 04 a3             	add    (%rbx,%riz,4),%eax
 1e5:	01 55 9f             	add    %edx,-0x61(%rbp)
 1e8:	00 03                	add    %al,(%rbx)
 1ea:	00 00                	add    %al,(%rax)
 1ec:	00 04 a0             	add    %al,(%rax,%riz,4)
 1ef:	02 fc                	add    %ah,%bh
 1f1:	02 01                	add    (%rcx),%al
 1f3:	55                   	push   %rbp
 1f4:	04 fc                	add    $0xfc,%al
 1f6:	02 ff                	add    %bh,%bh
 1f8:	03 04 a3             	add    (%rbx,%riz,4),%eax
 1fb:	01 55 9f             	add    %edx,-0x61(%rbp)
 1fe:	00 00                	add    %al,(%rax)
 200:	00 00                	add    %al,(%rax)
 202:	00 00                	add    %al,(%rax)
 204:	01 01                	add    %eax,(%rcx)
 206:	00 04 d0             	add    %al,(%rax,%rdx,8)
 209:	03 d5                	add    %ebp,%edx
 20b:	03 01                	add    (%rcx),%eax
 20d:	53                   	push   %rbx
 20e:	04 d5                	add    $0xd5,%al
 210:	03 d7                	add    %edi,%edx
 212:	03 01                	add    (%rcx),%eax
 214:	55                   	push   %rbp
 215:	04 d7                	add    $0xd7,%al
 217:	03 d8                	add    %eax,%ebx
 219:	03 03                	add    (%rbx),%eax
 21b:	73 7f                	jae    29c <data_segment+0x28c>
 21d:	9f                   	lahf
 21e:	04 d8                	add    $0xd8,%al
 220:	03 f6                	add    %esi,%esi
 222:	03 01                	add    (%rcx),%eax
 224:	53                   	push   %rbx
 225:	00 4c 02 00          	add    %cl,0x0(%rdx,%rax,1)
 229:	00 05 00 08 00 00    	add    %al,0x800(%rip)        # a2f <data_segment+0xa1f>
 22f:	00 00                	add    %al,(%rax)
 231:	00 00                	add    %al,(%rax)
 233:	00 02                	add    %al,(%rdx)
 235:	00 01                	add    %al,(%rcx)
 237:	00 01                	add    %al,(%rcx)
	...
 245:	00 04 00             	add    %al,(%rax,%rax,1)
 248:	4d 01 55 04          	add    %r10,0x4(%r13)
 24c:	d3 01                	roll   %cl,(%rcx)
 24e:	dc 01                	faddl  (%rcx)
 250:	03 7f 02             	add    0x2(%rdi),%edi
 253:	9f                   	lahf
 254:	04 c3                	add    $0xc3,%al
 256:	02 c9                	add    %cl,%cl
 258:	02 01                	add    (%rcx),%al
 25a:	53                   	push   %rbx
 25b:	04 e6                	add    $0xe6,%al
 25d:	02 eb                	add    %bl,%ch
 25f:	02 06                	add    (%rsi),%al
 261:	73 00                	jae    263 <data_segment+0x253>
 263:	7d 00                	jge    265 <data_segment+0x255>
 265:	22 9f 04 f7 02 b6    	and    -0x49fd08fc(%rdi),%bl
 26b:	03 01                	add    (%rcx),%eax
 26d:	53                   	push   %rbx
 26e:	04 cb                	add    $0xcb,%al
 270:	03 ce                	add    %esi,%ecx
 272:	03 01                	add    (%rcx),%eax
 274:	50                   	push   %rax
 275:	04 ce                	add    $0xce,%al
 277:	03 c4                	add    %esp,%eax
 279:	04 03                	add    $0x3,%al
 27b:	91                   	xchg   %eax,%ecx
 27c:	e8 7e 04 c4 04       	call   4c406ff <terminal_row+0x4b3969f>
 281:	d9 04 01             	flds   (%rcx,%rax,1)
 284:	53                   	push   %rbx
 285:	04 fb                	add    $0xfb,%al
 287:	04 91                	add    $0x91,%al
 289:	05 03 91 e8 7e       	add    $0x7ee89103,%eax
 28e:	04 91                	add    $0x91,%al
 290:	05 99 05 01 55       	add    $0x55010599,%eax
 295:	00 01                	add    %al,(%rcx)
 297:	00 00                	add    %al,(%rax)
 299:	00 00                	add    %al,(%rax)
 29b:	00 00                	add    %al,(%rax)
 29d:	00 04 35 4d 02 30 9f 	add    %al,-0x60cffdb3(,%rsi,1)
 2a4:	04 4d                	add    $0x4d,%al
 2a6:	c1 01 01             	roll   $0x1,(%rcx)
 2a9:	5c                   	pop    %rsp
 2aa:	04 d3                	add    $0xd3,%al
 2ac:	01 91 05 01 5c 04    	add    %edx,0x45c0105(%rcx)
 2b2:	91                   	xchg   %eax,%ecx
 2b3:	05 99 05 02 30       	add    $0x30020599,%eax
 2b8:	9f                   	lahf
	...
 2d9:	00 04 5b             	add    %al,(%rbx,%rbx,2)
 2dc:	8f 01                	pop    (%rcx)
 2de:	01 53 04             	add    %edx,0x4(%rbx)
 2e1:	8f 01                	pop    (%rcx)
 2e3:	c1 01 0f             	roll   $0xf,(%rcx)
 2e6:	0c ff                	or     $0xff,%al
 2e8:	ff                   	(bad)
 2e9:	ff                   	(bad)
 2ea:	7f 7c                	jg     368 <data_segment+0x358>
 2ec:	00 1c 08             	add    %bl,(%rax,%rcx,1)
 2ef:	20 24 08             	and    %ah,(%rax,%rcx,1)
 2f2:	20 26                	and    %ah,(%rsi)
 2f4:	9f                   	lahf
 2f5:	04 d3                	add    $0xd3,%al
 2f7:	01 9d 02 01 53 04    	add    %ebx,0x4530102(%rbp)
 2fd:	9d                   	popf
 2fe:	02 9f 02 09 71 00    	add    0x710902(%rdi),%bl
 304:	08 20                	or     %ah,(%rax)
 306:	24 08                	and    $0x8,%al
 308:	20 26                	and    %ah,(%rsi)
 30a:	9f                   	lahf
 30b:	04 9f                	add    $0x9f,%al
 30d:	02 c6                	add    %dh,%al
 30f:	02 0f                	add    (%rdi),%cl
 311:	0c ff                	or     $0xff,%al
 313:	ff                   	(bad)
 314:	ff                   	(bad)
 315:	7f 7c                	jg     393 <data_segment+0x383>
 317:	00 1c 08             	add    %bl,(%rax,%rcx,1)
 31a:	20 24 08             	and    %ah,(%rax,%rcx,1)
 31d:	20 26                	and    %ah,(%rsi)
 31f:	9f                   	lahf
 320:	04 d6                	add    $0xd6,%al
 322:	02 e6                	add    %dh,%ah
 324:	02 0f                	add    (%rdi),%cl
 326:	0c ff                	or     $0xff,%al
 328:	ff                   	(bad)
 329:	ff                   	(bad)
 32a:	7f 7c                	jg     3a8 <data_segment+0x398>
 32c:	00 1c 08             	add    %bl,(%rax,%rcx,1)
 32f:	20 24 08             	and    %ah,(%rax,%rcx,1)
 332:	20 26                	and    %ah,(%rsi)
 334:	9f                   	lahf
 335:	04 eb                	add    $0xeb,%al
 337:	02 f7                	add    %bh,%dh
 339:	02 01                	add    (%rcx),%al
 33b:	53                   	push   %rbx
 33c:	04 f7                	add    $0xf7,%al
 33e:	02 9e 03 09 71 00    	add    0x710903(%rsi),%bl
 344:	08 20                	or     %ah,(%rax)
 346:	24 08                	and    $0x8,%al
 348:	20 26                	and    %ah,(%rsi)
 34a:	9f                   	lahf
 34b:	04 9e                	add    $0x9e,%al
 34d:	03 b1 03 0f 0c ff    	add    -0xf3f0fd(%rcx),%esi
 353:	ff                   	(bad)
 354:	ff                   	(bad)
 355:	7f 7c                	jg     3d3 <data_segment+0x3c3>
 357:	00 1c 08             	add    %bl,(%rax,%rcx,1)
 35a:	20 24 08             	and    %ah,(%rax,%rcx,1)
 35d:	20 26                	and    %ah,(%rsi)
 35f:	9f                   	lahf
 360:	04 b1                	add    $0xb1,%al
 362:	03 b6 03 0e 40 4b    	add    0x4b400e03(%rsi),%esi
 368:	24 1f                	and    $0x1f,%al
 36a:	7c 00                	jl     36c <data_segment+0x35c>
 36c:	1c 08                	sbb    $0x8,%al
 36e:	20 24 08             	and    %ah,(%rax,%rcx,1)
 371:	20 26                	and    %ah,(%rsi)
 373:	9f                   	lahf
 374:	04 b6                	add    $0xb6,%al
 376:	03 fd                	add    %ebp,%edi
 378:	03 01                	add    (%rcx),%eax
 37a:	53                   	push   %rbx
 37b:	04 fd                	add    $0xfd,%al
 37d:	03 b8 04 0f 0c ff    	add    -0xf3f0fc(%rax),%edi
 383:	ff                   	(bad)
 384:	ff                   	(bad)
 385:	7f 7c                	jg     403 <data_segment+0x3f3>
 387:	00 1c 08             	add    %bl,(%rax,%rcx,1)
 38a:	20 24 08             	and    %ah,(%rax,%rcx,1)
 38d:	20 26                	and    %ah,(%rsi)
 38f:	9f                   	lahf
 390:	04 c4                	add    $0xc4,%al
 392:	04 d9                	add    $0xd9,%al
 394:	04 09                	add    $0x9,%al
 396:	71 00                	jno    398 <data_segment+0x388>
 398:	08 20                	or     %ah,(%rax)
 39a:	24 08                	and    $0x8,%al
 39c:	20 26                	and    %ah,(%rsi)
 39e:	9f                   	lahf
 39f:	04 d9                	add    $0xd9,%al
 3a1:	04 ed                	add    $0xed,%al
 3a3:	04 01                	add    $0x1,%al
 3a5:	53                   	push   %rbx
 3a6:	04 ed                	add    $0xed,%al
 3a8:	04 fb                	add    $0xfb,%al
 3aa:	04 09                	add    $0x9,%al
 3ac:	71 00                	jno    3ae <data_segment+0x39e>
 3ae:	08 20                	or     %ah,(%rax)
 3b0:	24 08                	and    $0x8,%al
 3b2:	20 26                	and    %ah,(%rsi)
 3b4:	9f                   	lahf
 3b5:	04 fb                	add    $0xfb,%al
 3b7:	04 91                	add    $0x91,%al
 3b9:	05 01 53 00 01       	add    $0x1005301,%eax
 3be:	00 00                	add    %al,(%rax)
 3c0:	00 00                	add    %al,(%rax)
 3c2:	00 04 e6             	add    %al,(%rsi,%riz,8)
 3c5:	02 eb                	add    %bl,%ch
 3c7:	02 06                	add    (%rsi),%al
 3c9:	73 00                	jae    3cb <data_segment+0x3bb>
 3cb:	7d 00                	jge    3cd <data_segment+0x3bd>
 3cd:	22 9f 04 b1 03 b6    	and    -0x49fc4efc(%rdi),%bl
 3d3:	03 01                	add    (%rcx),%eax
 3d5:	53                   	push   %rbx
 3d6:	04 b8                	add    $0xb8,%al
 3d8:	04 c4                	add    $0xc4,%al
 3da:	04 03                	add    $0x3,%al
 3dc:	91                   	xchg   %eax,%ecx
 3dd:	e8 7e 00 01 00       	call   10460 <data_segment+0x10450>
 3e2:	00 00                	add    %al,(%rax)
 3e4:	00 00                	add    %al,(%rax)
 3e6:	04 dc                	add    $0xdc,%al
 3e8:	01 f7                	add    %esi,%edi
 3ea:	01 02                	add    %eax,(%rdx)
 3ec:	31 9f 04 80 02 9f    	xor    %ebx,-0x60fd7ffc(%rdi)
 3f2:	02 01                	add    (%rcx),%al
 3f4:	5e                   	pop    %rsi
 3f5:	04 d9                	add    $0xd9,%al
 3f7:	04 fb                	add    $0xfb,%al
 3f9:	04 02                	add    $0x2,%al
 3fb:	31 9f 00 00 00 04    	xor    %ebx,0x4000000(%rdi)
 401:	8e 03                	mov    (%rbx),%es
 403:	9e                   	sahf
 404:	03 02                	add    (%rdx),%eax
 406:	72 00                	jb     408 <data_segment+0x3f8>
 408:	00 00                	add    %al,(%rax)
 40a:	00 00                	add    %al,(%rax)
 40c:	01 04 96             	add    %eax,(%rsi,%rdx,4)
 40f:	03 a8 03 02 30 9f    	add    -0x60cffdfd(%rax),%ebp
 415:	04 a8                	add    $0xa8,%al
 417:	03 a8 03 02 31 9f    	add    -0x60cefdfd(%rax),%ebp
 41d:	00 00                	add    %al,(%rax)
 41f:	00 00                	add    %al,(%rax)
 421:	00 04 f1             	add    %al,(%rcx,%rsi,8)
 424:	03 89 04 01 50 04    	add    0x4500104(%rcx),%ecx
 42a:	89 04 c4             	mov    %eax,(%rsp,%rax,8)
 42d:	04 01                	add    $0x1,%al
 42f:	5e                   	pop    %rsi
 430:	00 00                	add    %al,(%rax)
 432:	00 04 fa             	add    %al,(%rdx,%rdi,8)
 435:	03 89 04 02 30 9f    	add    -0x60cffdfc(%rcx),%ecx
	...
 443:	00 04 83             	add    %al,(%rbx,%rax,4)
 446:	01 99 01 01 50 04    	add    %ebx,0x4500101(%rcx)
 44c:	99                   	cltd
 44d:	01 bb 01 01 5d 04    	add    %edi,0x45d0101(%rbx)
 453:	d6                   	(bad)
 454:	02 d9                	add    %cl,%bl
 456:	02 01                	add    (%rcx),%al
 458:	50                   	push   %rax
 459:	04 d9                	add    $0xd9,%al
 45b:	02 eb                	add    %bl,%ch
 45d:	02 01                	add    (%rcx),%al
 45f:	5d                   	pop    %rbp
 460:	00 00                	add    %al,(%rax)
 462:	00 00                	add    %al,(%rax)
 464:	00 04 88             	add    %al,(%rax,%rcx,4)
 467:	01 99 01 02 30 9f    	add    %ebx,-0x60cffdff(%rcx)
 46d:	04 d6                	add    $0xd6,%al
 46f:	02 d9                	add    %cl,%bl
 471:	02 02                	add    (%rdx),%al
 473:	30 9f 00 1e 00 00    	xor    %bl,0x1e00(%rdi)
 479:	00 05 00 08 00 00    	add    %al,0x800(%rip)        # c7f <data_segment+0xc6f>
	...
 487:	00 04 00             	add    %al,(%rax,%rax,1)
 48a:	18 01                	sbb    %al,(%rcx)
 48c:	55                   	push   %rbp
 48d:	04 18                	add    $0x18,%al
 48f:	23 01                	and    (%rcx),%eax
 491:	53                   	push   %rbx
 492:	04 23                	add    $0x23,%al
 494:	25 01 50 00 20       	and    $0x20005001,%eax
 499:	00 00                	add    %al,(%rax)
 49b:	00 05 00 08 00 00    	add    %al,0x800(%rip)        # ca1 <data_segment+0xc91>
 4a1:	00 00                	add    %al,(%rax)
 4a3:	00 02                	add    %al,(%rdx)
 4a5:	00 00                	add    %al,(%rax)
 4a7:	00 00                	add    %al,(%rax)
 4a9:	00 04 00             	add    %al,(%rax,%rax,1)
 4ac:	07                   	(bad)
 4ad:	02 30                	add    (%rax),%dh
 4af:	9f                   	lahf
 4b0:	04 10                	add    $0x10,%al
 4b2:	1b 01                	sbb    (%rcx),%eax
 4b4:	50                   	push   %rax
 4b5:	04 1b                	add    $0x1b,%al
 4b7:	21 02                	and    %eax,(%rdx)
 4b9:	30                   	.byte 0x30
 4ba:	9f                   	lahf
	...
